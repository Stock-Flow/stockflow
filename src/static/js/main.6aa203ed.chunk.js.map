{"version":3,"sources":["key.js","services/DataProcessingService.js","services/StockService.js","services/LocalStorageService.js","redux/modules/djia.js","services/SearchService.js","redux/modules/sidebarstock.js","services/CurrencyService.js","redux/modules/sidebarCurrency.js","services/DetailStockService.js","services/IndicatorService.js","redux/modules/detailStock.js","services/DetailCurrencyService.js","redux/modules/detailCurrency.js","services/ExchangeService.js","redux/modules/exchange.js","redux/modules/selectedStock.js","redux/modules/selectedSymbol.js","redux/modules/compare.js","redux/modules/selectedExchange.js","redux/modules/compareCurrency.js","redux/modules/reducer.js","redux/create.js","components/MainDjia/ForeignExchangeItem.jsx","components/MainDjia/ForeignExchange.jsx","containers/MainDjia/ForeignExchangeContainer.jsx","components/MainDjia/ForeignExchangeDetail.jsx","containers/MainDjia/ForeignExchangeDetailContainer.jsx","components/MainDjia/djiagraph.jsx","containers/MainDjia/djiagraphContainer.jsx","components/SideBar/StockList.jsx","containers/SideBar/StockListContainer.jsx","components/SideBar/CurrencyList.jsx","containers/SideBar/CurrencyListContainer.jsx","components/SideBar/favoriteList.jsx","containers/SideBar/favoriteListContainer.jsx","contents/SideBarContent.jsx","services/GraphService.js","components/Detail/DetailStockGraph.jsx","containers/Detail/DetailStockGraphContainer.jsx","components/Detail/DetailCurrencyGraph.jsx","containers/Detail/DetailCurrencyGraphContainer.jsx","components/Detail/RemindingStock.jsx","components/Detail/RemindingStockBtn.jsx","containers/Detail/RemindingStockContainer.jsx","contents/Header.jsx","pages/Home.jsx","App.js","serviceWorker.js","redux/middlewares/saga.js","index.js"],"names":["apiKey","DataProcessingService","data","func","symbol","stockData","currencyData","bestMatches","map","match","Object","values","reverse","item","Number","date","keys","open","MakeValueArray","high","low","close","volume","i","time","MakeCurrencyValueArray","currencys","currency","name","price","toFixed","change","djia","length","push","processedData","split","j","value","lowBBANDS","middleBBANDS","upBBANDS","indicators","U","D","AU","AD","unshift","avg","SD","sum","k","Math","sqrt","DOW_ITEMS_SYMBOL","StockService","axios","get","localStorage","setItem","DJIAList","getDjiaPromise","then","result","store","dispatch","type","promDjia","Promise","all","symbols","getSideBarStockPromise","promGetSideBarStock","SideBarStocks","filter","stock","undefined","DataProcessing","stockNow","getStockNowPromise","promGetStockNow","stocks","getStockInfoPromise","promGetStockInfo","info","stockList","Name","LocalStorageService","keyword","JSON","parse","getItem","stringify","weekDay","getDay","slice","getDate","detailStock","indicator","day","detailCurrency","getDJIASaga","DJIASaga","prefix","initialState","loading","error","Date","done","GET_DJIA_START","GET_DJIA_SUCCESS","GET_DJIA_FAIL","successGetDJIA","DJIA","getDjia","put","call","getDJIA","AdjustSplit","GraphDataProcessing","console","log","takeLeading","reducer","prevState","action","SearchService","searchvalue","stockSymbols","search","currencyList","regexp","RegExp","test","getSideBarStockSaga","getStockNowSaga","initialSideBarStockSaga","sideBarStockSaga","sideBarStock","GET_SIDEBARSTOCK_START","GET_SIDEBARSTOCK_SUCCESS","GET_SIDEBARSTOCK_FAIL","startGetSideBarStock","SuccessGetSideBarStock","FailGetSideBarStock","payload","searchingStock","getSideBarStock","sidebarGraphDataProcessing","select","state","GET_STOCKNOW_START","GET_STOCKNOW_SUCCESS","GET_STOCKNOW_FAIL","successGetStockNow","savedStocks","getStockNow","currencyService","getSideBarCurrencyPromise","promGetSideBarCurrency","sideBarCurrencys","sideBarCurrencySaga","getSideBarCurrencySaga","sideBarCurrency","CurrencyService","getSideBarCurrency","Currencys","sidebarCurrencyProcessing","CurrencyGraphDataProcessing","DetailStockService","AdjustSplitSingle","indicatorSymbols","IndicatorService","indicatorsApi","getindicatorPromise","api","promIndicator","IndicatorsProcessing","getDetailStockSaga","getIndicatorSaga","detailStockSaga","GET_DETAILSTOCK_START","GET_DETAILSTOCK_SUCCESS","GET_DETAILSTOCK_FAIL","GET_STOCKFROMLOCALSTORAGE","successGetDetailStock","updateDate","getDetailStock","getStockDaily","barColor","_","volumeData","color","SuccessGetIndicator","selectedStock","getIndicator","takeEvery","DetailCurrencyService","CurrencyDataProcessing","getDetailCurrencySaga","detailCurrencySaga","GET_DETAILCURRENCY_START","GET_DETAILCURRENCY_SUCCESS","GET_DETAILCURRENCY_FAIL","GET_CURRENCYFROMLOCALSTORAGE","successGetDetailCurrency","getDetailCurrency","getCurrencyDaily","currencyIndicatorProcessing","ExchangeSerivice","exchangeArr","returnExchange","index","fromCurrency","toCurrency","res","catch","e","exchangePromise","returnIntraday","fromSymbol","toSymbol","exchangeIntraPromise","exchangeArrState","exchange","fxIntraday","getExchangeSaga","exchangeSaga","GET_EXCHANGE_START","GET_EXCHANGE_SUCCESS","GET_EXCHANGE_ERROR","successGetExchange","exchangeArray","getExchange","failGetExchange","getSelectedStockSaga","selectedStockSaga","kind","GET_SELECTEDSTOCK_START","GET_SELECTEDSTOCK_SUCCESS","GET_SELECTEDSTOCK_FAIL","successGetSelectedStock","getSelectedStockSagaActionCreator","takeLatest","getSelectedSymbolSaga","selectedSymbolSaga","getFavoriteListSaga","favoriteSymbolSaga","getFavoriteListButtonSaga","favoriteButtonSaga","START","SUCCESS","FAIL","selectedStockSymbol","selectedCurrencySymbol","selectedSymbolStart","selectedSymbolSuccess","selectedSymbol","names","selectedSymbolFail","count","favorite","getSelectedSymbolActionCreator","CounterListSuccess","getStockListElement","getCurrencyListElement","favoriteButtonSuccess","favoriteButtonFail","getfavoriteListButtonActionCreator","favoriteDataList","getCompareSaga","compareSaga","successGetCompare","compareStock","getSelectedExchangeSaga","selectedExchangeSaga","GET_SELECTEDEXCHANGE_START","GET_SELECTEDEXCHANGE_SUCCESS","GET_SELECTEDEXCHANGE_FAIL","GET_SELECTEDEXCHANGE_SAGA","selectedExchange","createGetSelectedExchangeSaga","fromCurrenciesCode","fromCurrenciesName","toCurrenciesCode","toCurrenciesName","getCompareCurrencySaga","compareCurrencySaga","successGetCompareCurrency","compareCurrency","history","combineReducers","sidebarCurrency","compare","router","connectRouter","createBrowserHistory","sagaMiddleware","createSagaMiddleware","ForeignExchangeItem","exchangeRate","fxIntradayArr","firstFromCurrenciesCode","firstFromCurrenciesName","firstToCurrenciesCode","firstToCurrenciesName","firstFxIntraday","resultPercent","before","after","fxDiff","useDispatch","fromCountryIcon","toCountryIcon","useEffect","transCode","useCallback","className","onClick","src","alt","ForeignExchange","itemList","LoadingOutlined","ForeignExchangeContainer","useSelector","beforefxClose","afterfxClose","forEach","v","beforefx","afterfx","ForeignExchangeDetail","selectExchangeListResult","exchangeLoading","chartExchange","useRef","exchangeLineSeries","excahngeChartposition","useState","window","innerWidth","windowWidth","setWindowWidth","onresize","current","resize","createChart","width","height","applyOptions","priceScale","position","borderVisible","timeScale","rightOffset","fixLeftEdge","layout","backgroundColor","textColor","grid","vertLines","style","visible","horzLines","addLineSeries","title","setData","setVisibleLogicalRange","from","to","ref","ForeignExchangeDetailContainer","exchangeIntraday","keyTime","getExchangeDaily","DjiaGraph","djiaList","djiaDate","chart","lineSeries","chartposition","addEventListener","addCandlestickSeries","max","DjiagraphContainer","djiaStockData","djiaOpenData","djiaHighData","djiaLowData","djiaCloseData","GetDJiaProcessing","StockList","getsidebarStock","menu","toggleMenu","favoriteData","stopPropagation","sendToSymbol","x","y","stroke","parent","margin","StockListContainer","sort","a","b","CurrencyList","renderCurrencyList","CurrencyListContainer","searchingCurrencyList","FavoriteList","favoriteStockList","favoriteCurrencyList","currencyLoading","setValue","selected","favoriteStockData","favoriteCurrencyData","id","onChange","defaultValue","Currencysymbol","favoriteCurrencyDataList","symbolStock","favoriteStockDataList","FavoriteListContainer","getLocalStockList","getLocalCurrencyList","getfavoriteListActionCreator","SideBarContent","mobileMenu","toggleMobileMenu","searchValue","searchDone","setSort","stockSearch","setStockSearch","currencySearch","setCurrencySearch","setMenu","display","setDisplay","stockImgUrl","setStockImgUrl","currencyImgUrl","setCurrencyImgUrl","favoriteUrl","setFavoriteUrl","checkSearchDone","clearTimeout","setTimeout","selectedValue","target","changeMode","placeholder","GraphService","graph","addHistogramSeries","base","customStyles","content","top","left","right","bottom","marginRight","transform","zIndex","overlay","addCustomStyles","DetailStockGraph","getCompare","movingAverage","rsiSignal","getMACDData","getStochasticSlow","assistChart","indicatorChart","disparityChart","MACDChart","MACDOSCChart","stochasticSlowChart","indicatorPosition","disparityPosition","MACDPosition","compareGraph","candleSeries","smaFive","smaHundredTwenty","smaTwenty","smaSixty","rsiChart","rsiSignalChart","stochasticSlowKGraph","stochasticSlowDGraph","disparityGraph","MACDGraph","MACDSignalGraph","MACDOSCGraph","volumeChart","highBBANDS","MACDData","stochasticSlowData","smaFiveCk","fiveCk","fiveColor","setFiveColor","smaTwentyCk","twentyCk","twentyColor","setTwentyColor","smaSixtyCk","sixtyCk","sixtyColor","setSixtyColor","smaHundredTwentyCk","hundredTwentyCk","hundredTwentyColor","setHundredTwentyColor","BBANDSCk","setBBANDSCk","BBANDSColor","setBBANDSColor","rsiCk","setRsick","rsiColor","setRsiColor","rsiSignalColor","setRsiSignalColor","macdCk","setMacdck","MACDColor","setMACDColor","MACDSignalColor","setMACDSignalColor","macdOscCk","setMacdOscCk","MACDOSCColor","setMACDOSCColor","disparityCk","setDisparityck","disparityColor","setDisparityColor","stochasticSlowCk","setStochasticSlowck","slowDColor","setSlowDColor","slowKColor","setSlowKColor","fiveMovingAverageData","twentyMovingAverageData","sixtyMovingAverageData","hundredTwentyMovingAverageData","twentyDisparity","modalIsOpen","setIsOpen","addModalIsOpen","setAddModalIsOpen","closeAddModal","closeModal","autoScale","scaleMargins","barSpacing","removeSeries","searchList","setSearchList","isOpen","onAfterOpen","onRequestClose","list","checked","graphColor","setHistogramGraph","DetailStockGraphContainer","rsiSig","getDetailStockSagaActionCreator","getCompareSagaActionCreator","duration","getAverage","rsi","movingAverageTwentySix","movingAverageTwelve","MACDSignal","MACDOscillator","n","m","fastK","min","fast","slowK","Modal","setAppElement","document","getElementById","DetailCurrencyGraph","checkCurrencySearchDone","DetailCurrencyGraphContainer","getDetailCurrencySagaActionCreator","getCompareCurrencySagaActionCreator","RemindingStock","remindingStockList","remindingStock","setRemindingStock","alertBtn","alertMsg","alertCount","handleClickOutside","removeEventListener","RemindingStockBtn","Header","RemindingStockContainer","Home","setMobileMenu","App","path","exact","component","Boolean","location","hostname","createStore","composeWithDevTools","applyMiddleware","routerMiddleware","run","rootSaga","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6aa203ed.chunk.js","sourcesContent":["export const apiKey = \"H9ISJ61LMOV13O0A\"","const DOW_DIVISOR = 0.14748071991788;\nexport default class DataProcessingService {\n  static DataProcessing(data, func) {\n    const ProcessedData = {\n      symbol: data['Meta Data']['2. Symbol'],\n      stockData: data[func],\n    };\n\n    return ProcessedData;\n  }\n  static CurrencyDataProcessing(data, func) {\n    const ProcessedData = {\n      symbol: data['Meta Data']['2. Digital Currency Code'],\n      currencyData: data[func],\n    };\n\n    return ProcessedData;\n  }\n\n  static SearchDataProcessing(data) {\n    const ProcessedData = data.bestMatches.map((match) => match['1. symbol']);\n    return ProcessedData;\n  }\n\n  static MakeValueArray(data, func) {\n    return Object.values(data.stockData)\n      .reverse()\n      .map((item) => item[func]);\n  }\n  static MakeCurrencyValueArray(data, func) {\n    return Object.values(data.currencyData)\n      .reverse()\n      .map((item) => Number(item[func]));\n  }\n  static MakeSidebarCurrencyValueArray(data, func) {\n    return Object.values(data['Time Series (Digital Currency Daily)'])\n      .reverse()\n      .map((item) => item[func]);\n  }\n\n  static GraphDataProcessing(data) {\n    const date = Object.keys(data.stockData).reverse();\n    const open = DataProcessingService.MakeValueArray(data, '1. open');\n    const high = DataProcessingService.MakeValueArray(data, '2. high');\n    const low = DataProcessingService.MakeValueArray(data, '3. low');\n    const close = DataProcessingService.MakeValueArray(data, '4. close');\n    const volume = DataProcessingService.MakeValueArray(data, '6. volume');\n    return date.map((item, i) => {\n      return {\n        time: item,\n        open: open[i],\n        high: high[i],\n        low: low[i],\n        close: close[i],\n        volume: volume[i],\n      };\n    });\n  }\n  static sidebarGraphDataProcessing(data) {\n    const date = Object.keys(data.stockData).reverse();\n    const open = DataProcessingService.MakeValueArray(data, '1. open');\n    const volume = DataProcessingService.MakeValueArray(data, '6. volume');\n\n    return date.map((item, i) => {\n      return {\n        time: item,\n        open: open[i],\n        volume: volume[i],\n      };\n    });\n  }\n  static CurrencyGraphDataProcessing(data) {\n    const date = Object.keys(data.currencyData).reverse();\n    const open = DataProcessingService.MakeCurrencyValueArray(\n      data,\n      '1a. open (USD)',\n    );\n    const high = DataProcessingService.MakeCurrencyValueArray(\n      data,\n      '2a. high (USD)',\n    );\n    const low = DataProcessingService.MakeCurrencyValueArray(\n      data,\n      '3a. low (USD)',\n    );\n    const close = DataProcessingService.MakeCurrencyValueArray(\n      data,\n      '4a. close (USD)',\n    );\n    const volume = DataProcessingService.MakeCurrencyValueArray(\n      data,\n      '5. volume',\n    );\n\n    return date.map((item, i) => {\n      return {\n        time: item,\n        open: open[i],\n        high: high[i],\n        low: low[i],\n        close: close[i],\n        volume: volume[i]\n      };\n    });\n  }\n\n  static sidebarCurrencyProcessing(currencys) {\n    return currencys.map(currency => {\n      const data = Object.values(currency['Time Series (Digital Currency Daily)'])\n      return {\n        symbol: currency['Meta Data']['2. Digital Currency Code'],\n        currencyData: currency['Time Series (Digital Currency Daily)'],\n        name: currency['Meta Data']['3. Digital Currency Name'],\n        price: ((Number(data[0]['2a. high (USD)']) + Number(data[0]['3a. low (USD)']))/2).toFixed(2),\n        change: ((Number(data[0]['4a. close (USD)']) - Number(data[1]['4a. close (USD)']))/Number(data[1]['4a. close (USD)'])*100).toFixed(4),\n      };\n    })\n  }\n\n\n\n  static GetDJiaProcessing(data) {\n    const djia = [];\n\n    for (let i = 0; i < data.length; i++) {\n      djia.push(data[i] / DOW_DIVISOR);\n      djia[i] = +djia[i].toFixed(2);\n    }\n    return djia;\n  }\n\n  static AdjustSplit(data) {\n    let processedData = data;\n    for (let i = 0; i < data.length; i++) {\n      const date = Object.keys(data[i].stockData);\n      let split = 0;\n      for (let j = 0; j < Object.keys(data[i].stockData).length; j++) {\n        if (split !== 0) {\n          processedData[i].stockData[date[j]]['1. open'] /= split;\n          processedData[i].stockData[date[j]]['2. high'] /= split;\n          processedData[i].stockData[date[j]]['3. low'] /= split;\n          processedData[i].stockData[date[j]]['4. close'] /= split;\n        }\n        if (data[i].stockData[date[j]]['8. split coefficient'] !== '1.0000') {\n          split = +data[i].stockData[date[j]]['8. split coefficient'];\n        }\n      }\n    }\n    return processedData;\n  }\n  static AdjustSplitSingle(data) {\n    let processedData = data;\n    const date = Object.keys(data.stockData);\n    let split = 0;\n    for (let j = 0; j < Object.keys(data.stockData).length; j++) {\n      if (split !== 0) {\n        processedData.stockData[date[j]]['1. open'] /= split;\n        processedData.stockData[date[j]]['2. high'] /= split;\n        processedData.stockData[date[j]]['3. low'] /= split;\n        processedData.stockData[date[j]]['4. close'] /= split;\n      }\n      if (data.stockData[date[j]]['8. split coefficient'] !== '1.0000') {\n        split = +data.stockData[date[j]]['8. split coefficient'];\n      }\n    }\n\n    return processedData;\n  }\n\n  static IndicatorsProcessing(data, symbol) {\n    if (symbol === 'BBANDS') {\n      const date = Object.keys(data[`Technical Analysis: ${symbol}`]);\n      const value = Object.values(data[`Technical Analysis: ${symbol}`]);\n      const lowBBANDS = date.map((item, i) => {\n        return {\n          time: item,\n          value: value[i]['Real Lower Band'],\n        };\n      });\n      const middleBBANDS = date.map((item, i) => {\n        return {\n          time: item,\n          value: value[i]['Real Middle Band'],\n        };\n      });\n      const upBBANDS = date.map((item, i) => {\n        return {\n          time: item,\n          value: value[i]['Real Upper Band'],\n        };\n      });\n      return [lowBBANDS.reverse(), middleBBANDS.reverse(), upBBANDS.reverse()];\n    }\n    const date = Object.keys(data[`Technical Analysis: ${symbol}`]);\n    const value = Object.values(data[`Technical Analysis: ${symbol}`]);\n    const processedIndicators = date.map((item, i) => {\n      return {\n        time: item,\n        value: value[i][symbol],\n      };\n    });\n\n    return processedIndicators.reverse();\n  }\n  static currencyIndicatorProcessing(currencyData) {\n    //rsi\n    const indicators = [\n      [],\n      [\n        [],\n        [],\n        []\n      ]\n    ]\n    let change = '';\n    let U = 0;\n    let D = 0;\n    let AU = 0;\n    let AD = 0;\n    for (let i = currencyData.length - 1; i > 13; i--) {\n      U = 0;\n      D = 0;\n      for (let j = 0; j < 14; j++) {\n        change = currencyData[i - j]['close'] > currencyData[i - j - 1]['close'] ? 'up' : 'down';\n        if (change === 'up') {\n          U += currencyData[i - j]['close'] - currencyData[i - j - 1]['close']\n        } else if (change === 'down') {\n          D += currencyData[i - j - 1]['close'] - currencyData[i - j]['close']\n        }\n      }\n      AU = U / 14;\n      AD = D / 14;\n      indicators[0].unshift({\n        time: currencyData[i - 1]['time'],\n        value: AU / (AU + AD) * 100,\n      })\n    }\n\n    const upBBANDS = [];\n    const middleBBANDS = [];\n    const lowBBANDS = [];\n    let avg = 0;\n    let SD = 0;\n    for (let i = currencyData.length - 1; i > 19; i--) {\n      let sum = 0;\n\n      for (let j = 0; j < 20; j++) {\n        sum += currencyData[i - j]['close']\n      }\n      avg = sum / 20;\n      middleBBANDS.unshift({\n        time: currencyData[i - 1]['time'],\n        value: avg,\n      })\n\n      sum = 0;\n\n      for (let k = 0; k < 20; k++) {\n        sum += (currencyData[i - k]['close'] - avg) ** 2;\n      }\n      SD = Math.sqrt(sum / 20)\n\n      upBBANDS.unshift({\n        time: currencyData[i - 1]['time'],\n        value: avg + SD,\n      })\n      lowBBANDS.unshift({\n        time: currencyData[i - 1]['time'],\n        value: avg - SD,\n      })\n    }\n    indicators[1][2] = upBBANDS;\n    indicators[1][1] = middleBBANDS;\n    indicators[1][0] = lowBBANDS;\n\n    return indicators;\n  }\n}","import axios from 'axios';\nimport {\n  store\n} from '../index'\nimport {\n  useDispatch\n} from 'react-redux';\nimport {\n  apiKey\n} from '../key';\nimport DataProcessingService from './DataProcessingService';\n// const DOW_ITEMS_SYMBOL = [\n//   'MMM',\n//   'IBM',\n//   'JPM',\n//   'AAPL',\n//   'GS',\n\n// ];\n// const DOW_ITEMS_SYMBOL11 = [\n//   'NKE',\n//   'DOW',\n//   'MSFT',\n//   'MCD',\n//   'MRK',\n// ];\n\n// const DOW_ITEMS_SYMBOL2 = [\n//   'VZ',\n//   'BA',\n//   'V',\n//   'CVX',\n//   'CSCO',\n\n// ]\n\n// const DOW_ITEMS_SYMBOL22 = [\n//   'AXP',\n//   'XOM',\n//   'WMT',\n//   'DIS',\n//   'RTX',\n// ]\n// const DOW_ITEMS_SYMBOL3 = [\n//   'UNH',\n//   'INTC',\n//   'WBA',\n//   'JNJ',\n//   'CAT',\n// ]\n// const DOW_ITEMS_SYMBOL33 = [\n//   'KO',\n//   'TRV',\n//   'PG',\n//   'HD',\n//   'PFE',\n// ]\n\nconst DOW_ITEMS_SYMBOL = [\n  'MMM',\n  'IBM',\n  'JPM',\n  'AAPL',\n  'GS',\n  'NKE',\n  'DOW',\n  'MSFT',\n  'MCD',\n  'MRK',\n  'VZ',\n  'BA',\n  'V',\n  'CVX',\n  'CSCO',\n  'AXP',\n  'XOM',\n  'WMT',\n  'DIS',\n  'RTX',\n  'UNH',\n  'INTC',\n  'WBA',\n  'JNJ',\n  'CAT',\n  'KO',\n  'TRV',\n  'PG',\n  'HD',\n  'PFE',\n];\n\nexport default class StockService {\n  static async getStockIntra(func, symbol) {\n    const stockData = await axios.get(\n      `https://www.alphavantage.co/query?function=${func}&symbol=${symbol}&interval=1min&apikey=${apiKey}`,\n    );\n    return stockData.data;\n  }\n\n  static async getDJIA() {\n    localStorage.setItem('count', 0);\n    let DJIAList = [];\n    const getDjiaPromise = (symbol) => {\n      return axios.get(\n        `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${symbol}&interval=1min&apikey=${apiKey}`,\n      ).then(result => {\n        store.dispatch({\n          type: \"GET_DJIA_PROGRESS\"\n        })\n        return result\n      })\n    };\n\n\n    // const promDjia1 = DOW_ITEMS_SYMBOL.map((symbol) => getDjiaPromise(symbol));\n    // const promDjia11 = DOW_ITEMS_SYMBOL11.map((symbol) => getDjiaPromise(symbol));\n    // const promDjia2 = DOW_ITEMS_SYMBOL2.map((symbol) => getDjiaPromise(symbol));\n    // const promDjia22 = DOW_ITEMS_SYMBOL22.map((symbol) => getDjiaPromise(symbol));\n    // const promDjia3 = DOW_ITEMS_SYMBOL3.map((symbol) => getDjiaPromise(symbol));\n    // const promDjia33 = DOW_ITEMS_SYMBOL33.map((symbol) => getDjiaPromise(symbol));\n    const promDjia = DOW_ITEMS_SYMBOL.map((symbol) => getDjiaPromise(symbol));\n\n    // DJIAList = await Promise.all([...promDjia1, ...promDjia2, ...promDjia3, ...promDjia11, ...promDjia22, ...promDjia33]).then((result) => {\n    //   return result.map((item) => item.data);\n    // });\n    DJIAList = await Promise.all(promDjia).then((result) => {\n      return result.map((item) => {\n\n        return item.data\n      });\n    });\n    return DJIAList;\n  }\n\n  static async getSideBarStock(symbols) {\n    const getSideBarStockPromise = (symbol) => {\n      return axios.get(\n        `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${symbol}&apikey=${apiKey}`,\n      );\n    };\n    const promGetSideBarStock = symbols.map((symbol) =>\n      getSideBarStockPromise(symbol['1. symbol']),\n    );\n    let SideBarStocks = await Promise.all(promGetSideBarStock).then((result) =>\n      result.map((item) => item.data),\n    );\n\n    SideBarStocks = SideBarStocks.filter(\n      (stock) => stock['Meta Data'] !== undefined,\n    );\n    SideBarStocks = SideBarStocks.map((stock) =>\n      DataProcessingService.DataProcessing(stock, 'Time Series (Daily)'),\n    );\n\n    return SideBarStocks;\n  }\n\n  static async getStockNow(stockNow) {\n    const symbols = stockNow.map((item) => item.symbol);\n    const getStockNowPromise = (symbol) => {\n      return axios.get(\n        `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${symbol}&apikey=${apiKey}`,\n      );\n    };\n    const promGetStockNow = symbols.map((symbol) => getStockNowPromise(symbol));\n    const stocks = await Promise.all(promGetStockNow).then((result) =>\n      result.map((item) => item.data),\n    );\n\n    const getStockInfoPromise = (symbol) => {\n      return axios.get(\n        `https://www.alphavantage.co/query?function=OVERVIEW&symbol=${symbol}&apikey=${apiKey}`,\n      );\n    };\n    const promGetStockInfo = symbols.map((symbol) =>\n      getStockInfoPromise(symbol),\n    );\n    const info = await Promise.all(promGetStockInfo).then((result) =>\n      result.map((item) => item.data),\n    );\n\n    const stockList = stockNow.map((stock, i) => ({\n      ...stock,\n      name: info[i].Name,\n      price: (+stocks[i]['Global Quote']['05. price']).toFixed(2),\n      change: (stocks[i]['Global Quote']['10. change percent'])\n    }));\n    return stockList;\n  }\n}","export default class LocalStorageService {\n  static getItem(keyword) {\n    return JSON.parse(localStorage.getItem(keyword))\n  }\n  static setItem(keyword, item) {\n    localStorage.setItem(keyword, JSON.stringify(item));\n  }\n\n  static getDjia(date) {\n    const DJIAList = JSON.parse(localStorage.getItem('djia'));\n    const weekDay = date.getDay();\n\n    if (!DJIAList) return null;\n    if (!DJIAList.length) return null;\n    if (DJIAList.length !== 30) return null;\n    if (!(DJIAList[0].symbol && DJIAList[0].stockData)) return null;\n    if (weekDay === 0 || weekDay === 6 || weekDay === 1) return DJIAList;\n    if (+DJIAList[0].stockData[99].time.slice(-2) !== date.getDate() - 1) return null;\n    return DJIAList;\n  }\n\n  static getDetailStock(symbol, date) {\n    const weekDay = date.getDay();\n    const detailStock = JSON.parse(localStorage.getItem(symbol));\n    if (!detailStock) return null;\n    if (!(detailStock.stock && detailStock.indicator && detailStock.volume && detailStock.indicator)) return null;\n    if (weekDay === 0 || weekDay === 6 || weekDay === 1) return detailStock;\n    if (+detailStock.stock[detailStock.stock.length - 1].time.day !== date.getDate() - 1) return null;\n    return detailStock;\n  }\n\n  static getDetailCurrency(symbol, date) {\n    const weekDay = date.getDay();\n    const detailCurrency = JSON.parse(localStorage.getItem(symbol));\n    if (!detailCurrency) return null;\n    if (!(detailCurrency.currency && detailCurrency.indicator && detailCurrency.volume && detailCurrency.indicator)) return null;\n    if (weekDay === 0 || weekDay === 6 || weekDay === 1) return detailCurrency;\n    if (+detailCurrency.currency[detailCurrency.currency.length - 1].time.day !== date.getDate() - 1) return null;\n    return detailCurrency;\n  }\n}","import StockService from '../../services/StockService'\nimport {\n  put,\n  call,\n  takeLeading,\n} from 'redux-saga/effects'\nimport DataProcessingService from '../../services/DataProcessingService';\nimport LocalStorageService from '../../services/LocalStorageService';\n\n\n\n\nconst prefix = \"stockflow/djia\"\n\nconst initialState = {\n  loading: true,\n  djia: [],\n  error: null,\n  date: new Date(),\n  done: 0\n}\n\n\n\n\n\n\n\nconst GET_DJIA_START = `${prefix}/GET_DJIA_START`;\nconst GET_DJIA_SUCCESS = `${prefix}/GET_DJIA_SUCCESS`;\nconst GET_DJIA_FAIL = `${prefix}/GET_DJIA_FAIL`;\n\n\nconst startGetDJIA = () => {\n  return {\n    type: GET_DJIA_START,\n  }\n}\n\n\nconst successGetDJIA = (DJIA) => {\n  return {\n    type: GET_DJIA_SUCCESS,\n    DJIA\n  }\n}\n\n\nconst failGetDJIA = (error) => {\n  return {\n    type: GET_DJIA_FAIL,\n    error\n  }\n}\n\nfunction* getDJIASaga() {\n  const DJIAList = LocalStorageService.getDjia(initialState.date);\n  yield put(startGetDJIA())\n  try {\n    yield\n    if (!DJIAList) {\n      let DJIAList = yield call(StockService.getDJIA);\n      DJIAList = DJIAList.map(DJIA => DataProcessingService.DataProcessing(DJIA, \"Time Series (Daily)\"))\n      DJIAList = DataProcessingService.AdjustSplit(DJIAList);\n      DJIAList = DJIAList.map(djia => ({\n        ...djia,\n        stockData: DataProcessingService.GraphDataProcessing(djia)\n      }))\n      LocalStorageService.setItem('djia', DJIAList);\n      yield put(successGetDJIA(DJIAList));\n    } else {\n      yield put(successGetDJIA(DJIAList));\n    }\n\n  } catch (error) {\n    console.log(error);\n    yield put(failGetDJIA(error))\n  }\n}\n\nconst GET_DJIA_SAGA = \"GET_DJIA_SAGA\";\nexport const getDJIASagaActionCreator = () => ({\n  type: GET_DJIA_SAGA,\n})\n\n\n\n\n\nexport function* DJIASaga() {\n  yield takeLeading(GET_DJIA_SAGA, getDJIASaga);\n}\n\nexport default function reducer(prevState = initialState, action) {\n  switch (action.type) {\n    case GET_DJIA_START:\n      return {\n        ...prevState,\n        loading: true,\n          error: null,\n      }\n\n      case GET_DJIA_SUCCESS:\n        return {\n          ...prevState,\n          loading: false,\n            djia: action.DJIA,\n            error: null,\n        }\n        case GET_DJIA_FAIL:\n          return {\n            ...prevState,\n            loading: false,\n              error: action.error\n          }\n          case \"GET_DJIA_PROGRESS\":\n            return {\n              ...prevState,\n              loading: true,\n                done: prevState.done + 1\n            }\n            default:\n              return {\n                ...prevState\n              }\n  }\n}","import axios from 'axios';\nimport {\n  apiKey\n} from '../key';\n\nexport default class SearchService {\n  \n  static async searchingStock(searchvalue) {\n    const stockSymbols = await axios.get(`https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${searchvalue}&apikey=${apiKey}`);\n    return stockSymbols.data;\n  }\n  static async searchingCurrencyList(search, currencyList) {\n    const regexp = new RegExp(search, 'i');\n    return currencyList = currencyList.filter((currency) =>\n      regexp.test(currency.symbol),\n    );\n  }\n}","import StockService from '../../services/StockService';\nimport { put, call, select, takeLeading, take } from 'redux-saga/effects';\nimport SearchService from '../../services/SearchService';\nimport DataProcessingService from '../../services/DataProcessingService';\nimport { useDispatch } from 'react-redux';\nimport LocalStorageService from '../../services/LocalStorageService';\n\nconst prefix = 'stockflow/sidebarstock/';\n\nconst initialState = {\n  loading: true,\n  sideBarStock: [],\n  error: null,\n};\n\nconst GET_SIDEBARSTOCK_START = `${prefix}GET_SIDEBARSTOCK_START`;\nconst GET_SIDEBARSTOCK_SUCCESS = `${prefix}GET_SIDEBARSTOCK_SUCCESS`;\nconst GET_SIDEBARSTOCK_FAIL = `${prefix}GET_SIDEBARSTOCK_FAIL`;\n\nconst startGetSideBarStock = () => {\n  return {\n    type: GET_SIDEBARSTOCK_START,\n  };\n};\n\nconst SuccessGetSideBarStock = (sideBarStock) => {\n  return {\n    type: GET_SIDEBARSTOCK_SUCCESS,\n    sideBarStock,\n  };\n};\n\nconst FailGetSideBarStock = (error) => {\n  return {\n    type: GET_SIDEBARSTOCK_FAIL,\n    error,\n  };\n};\n\nfunction* getSideBarStockSaga(action) {\n  const { searchvalue } = action.payload;\n  yield put(startGetSideBarStock());\n  try {\n    if (searchvalue) {\n      const symbols = yield call(SearchService.searchingStock, searchvalue);\n      let stocks = yield call(\n        StockService.getSideBarStock,\n        symbols.bestMatches,\n      );\n      stocks = DataProcessingService.AdjustSplit(stocks);\n      stocks = stocks.map((stock) => ({\n        ...stock,\n        stockData: DataProcessingService.sidebarGraphDataProcessing(stock),\n      }));\n      yield put(SuccessGetSideBarStock(stocks));\n    } else {\n      let stocks = yield select((state) => state.djia.djia);\n      stocks = stocks.slice(0, 10);\n\n      yield put(SuccessGetSideBarStock(stocks));\n    }\n  } catch (error) {\n    console.log(error);\n    yield put(FailGetSideBarStock(error));\n  }\n}\n\nconst GET_STOCKNOW_START = `${prefix}GET_STOCKNOW_START`;\nconst GET_STOCKNOW_SUCCESS = `${prefix}GET_STOCKNOW_SUCCESS`;\nconst GET_STOCKNOW_FAIL = `${prefix}GET_STOCKNOW_FAIL`;\n\nconst startGetStockNow = () => {\n  return {\n    type: GET_STOCKNOW_START,\n  };\n};\n\nconst successGetStockNow = (sideBarStock) => {\n  return {\n    type: GET_STOCKNOW_SUCCESS,\n    sideBarStock,\n  };\n};\n\nconst failGetStockNow = (error) => {\n  return {\n    type: GET_STOCKNOW_FAIL,\n    error,\n  };\n};\n\nfunction* getStockNowSaga() {\n  yield put(startGetStockNow());\n  try {\n    const savedStocks = LocalStorageService.getItem('stockSideBar');\n    const stockNow = yield select((state) => state.sideBarStock.sideBarStock);\n    if (stockNow.length === 0) {\n      return;\n    }\n    if (savedStocks !== null) {\n      if (\n        stockNow.filter((stock, i) => {\n          if (i > savedStocks.length - 1) return false;\n          return stock.symbol !== savedStocks[i].symbol;\n        }).length === 0\n      ) {\n        yield put(successGetStockNow(savedStocks));\n      } else {\n        const stocks = yield call(StockService.getStockNow, stockNow);\n        LocalStorageService.setItem('stockSideBar', stocks);\n        yield put(successGetStockNow(stocks));\n      }\n    } else {\n      const stocks = yield call(StockService.getStockNow, stockNow);\n      LocalStorageService.setItem('stockSideBar', stocks);\n      yield put(successGetStockNow(stocks));\n    }\n  } catch (error) {\n    console.log(error);\n    yield put(failGetStockNow(error));\n  }\n}\n\nfunction* initialSideBarStockSaga() {\n  yield put(startGetSideBarStock());\n  try {\n    let stocks = yield select((state) => state.djia.djia);\n    stocks = stocks.slice(0, 10);\n    yield put(SuccessGetSideBarStock(stocks));\n  } catch (error) {\n    yield put(FailGetSideBarStock(error));\n  }\n}\n\nconst GET_SIDEBARSTOCK_SAGA = 'GET_SIDEBARSTOCK_SAGA';\n\nexport const getSideBarStockSagaActionCreator = (searchvalue) => ({\n  type: GET_SIDEBARSTOCK_SAGA,\n  payload: {\n    searchvalue,\n  },\n});\n\nexport function* sideBarStockSaga() {\n  yield takeLeading(GET_SIDEBARSTOCK_SAGA, getSideBarStockSaga);\n  yield takeLeading('stockflow/djia/GET_DJIA_SUCCESS', initialSideBarStockSaga);\n  yield takeLeading(`${prefix}GET_SIDEBARSTOCK_SUCCESS`, getStockNowSaga);\n}\n\nexport default function reducer(prevState = initialState, action) {\n  switch (action.type) {\n    case GET_SIDEBARSTOCK_START:\n      return {\n        ...prevState,\n        loading: true,\n        error: null,\n      };\n\n    case GET_SIDEBARSTOCK_SUCCESS:\n      return {\n        ...prevState,\n        loading: true,\n        sideBarStock: action.sideBarStock,\n        error: null,\n      };\n    case GET_SIDEBARSTOCK_FAIL:\n      return {\n        ...prevState,\n        loading: false,\n        error: action.error,\n      };\n    case GET_STOCKNOW_START:\n      return {\n        ...prevState,\n        loading: true,\n        error: null,\n      };\n    case GET_STOCKNOW_SUCCESS:\n      return {\n        ...prevState,\n        sideBarStock: action.sideBarStock,\n        error: null,\n        loading: false,\n      };\n    case GET_STOCKNOW_FAIL:\n      return {\n        ...prevState,\n        loading: false,\n        error: action.error,\n      };\n    default:\n      return {\n        ...prevState,\n      };\n  }\n}\n","import axios from 'axios'\nimport {\n  apiKey\n} from '../key'\nimport DataProcessingService from './DataProcessingService'\n\n// const symbols = ['ADA','AION','ANT','ARDR','BAT','BCC','BCH','BLZ','BNB','BNT']\nconst key = '619d698817a4aaee6678160ef99c0898946c1e24372fe8df4cde97b6d1dcf85d'\n// ,'BTC','BTS','BUSD','CTXC','CVC','DAI','DASH','DATA','DCR','DENT','DGB','ENJ','EOS','ETC','ETH','FUN','GTO','GXS','ICX','IOST','IOTA','IOTX','KMD','KNC','LEND','LINK','LRC','LSK','LTC','MANA','MCO','MITH','MKR','NANO','NEO','NMR','NPXS','NULS','OMG','ONT','QTUM','REP','RLC','SC','SNX','STORJ','STORM','STRAT','STX','THETA','TRX','TUSD','VEN','WAN','WAVES','WTC','XLM','XMR','XRP','XTZ','XZC','ZEC','ZEN','ZIL','ZRX'\nconst symbols = ['ADA', 'AION', 'ANT', 'ARDR', 'BAT', 'BTC', 'BCH', 'BLZ', 'XRP', 'XTZ', 'XZC', 'ZEC', 'ZEN', 'ZIL', 'ZRX']\n\nexport default class currencyService {\n  static async getSideBarCurrency() {\n    const market = 'USD'\n    const getSideBarCurrencyPromise = symbol => {\n      return axios.get(`https://www.alphavantage.co/query?function=DIGITAL_CURRENCY_DAILY&symbol=${symbol}&market=${market}&apikey=${apiKey}`)\n    }\n    const promGetSideBarCurrency = symbols.map(symbol => getSideBarCurrencyPromise(symbol));\n    let sideBarCurrencys = await Promise.all(promGetSideBarCurrency)\n      .then(result => result.map(item => item.data))\n    return sideBarCurrencys\n  }\n\n  static async getData() {\n    const a = await axios.get(`https://min-api.cryptocompare.com/data/v2/histominute?fsym=BTC&tsym=USD&limit=100&api_key=${key}`)\n  }\n}","import {\n  put,\n  call,\n  takeLeading\n} from 'redux-saga/effects'\nimport CurrencyService from '../../services/CurrencyService'\nimport DataProcessingService from '../../services/DataProcessingService'\n// 루트사가에 추가, 리덕스 스토어에 사가 추가\n\n// 1.액션 start, sucess,  error 3가지\nconst GET_SIDEBARCURRENCY_START = `GET_SIDEBARCURRENCY_START`\nconst GET_SIDEBARCURRENCY_SUCCESS = `GET_SIDEBARCURRENCY_SUCCESS`\nconst GET_SIDEBARCURRENCY_FAIL = `GET_SIDEBARCURRENCY_FAIL`\n\n// 2.액션 생성자 함수 생성\n\nconst startGetSideBarCurrency = () => {\n  return {\n    type: GET_SIDEBARCURRENCY_START,\n  }\n}\n\nconst SuccessGetSideBarCurrency = (sideBarCurrency) => {\n  return {\n    type: GET_SIDEBARCURRENCY_SUCCESS,\n    sideBarCurrency\n  }\n}\n\nconst FailGetSideBarCurrency = (error) => {\n  return {\n    type: GET_SIDEBARCURRENCY_FAIL,\n    error\n  }\n}\n\n// 3.reducer 만들기 start일경우 loading이 true, success일경우 통신으로 가져온 데이터를 저장, error일경우 error가 true\nconst initialState = {\n  loading: false,\n  sideBarCurrency: [],\n  error: null\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_SIDEBARCURRENCY_START:\n      return {\n        ...state,\n        loading: true,\n          error: null,\n      }\n\n      case GET_SIDEBARCURRENCY_SUCCESS:\n        return {\n          ...state,\n          loading: false,\n          sideBarCurrency: action.sideBarCurrency,\n            error: null,\n        }\n        case GET_SIDEBARCURRENCY_FAIL:\n          return {\n            ...state,\n            loading: false,\n              error: action.error\n          }\n          default:\n            return {\n              ...state\n            }\n  }\n}\n\n\n// 4.saga 만들기\n\n// 사가에서 할일\n// 1.액션 start로 store의 로딩을 true로 바꾼다\n// 1.서비스에서 통신하여 데이터를 가져온다\n// 2.try로 성공하면 가져온 데이터를 액션에 인수로 줘서 디스패치 로딩을 faulse로 바꾼다.\n// 3.catch로 실패하면 액션에 error를 인수로 줘서 디스패치\n\n// 액션타입\n\nconst GET_SIDEBARCURRENCY_SAGA = 'GET_SIDEBARCURRENCY_SAGA'\n\nexport function getSideBarCurrencySagaActionCreator() {\n  return{\n    type :GET_SIDEBARCURRENCY_SAGA\n  }\n}\n\n// 어떤 액션이 들어왔을때 saga를 수행할것인지\nexport function* sideBarCurrencySaga() {\n  yield takeLeading(GET_SIDEBARCURRENCY_SAGA, getSideBarCurrencySaga)\n}\n\nfunction* getSideBarCurrencySaga() {\n  yield put(startGetSideBarCurrency());\n  try {\n    let Currencys = yield call(CurrencyService.getSideBarCurrency)\n    Currencys = DataProcessingService.sidebarCurrencyProcessing(Currencys)\n    Currencys = Currencys.map(currency => ({\n      ...currency,\n      currencyData: DataProcessingService.CurrencyGraphDataProcessing(currency)\n    }))\n    yield put(SuccessGetSideBarCurrency(Currencys))\n  } catch (error) {\n    console.log(error)\n    yield put(FailGetSideBarCurrency(error));\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n","import axios from 'axios';\nimport { apiKey } from '../key';\nimport DataProcessingService from './DataProcessingService';\n\nexport default class DetailStockService {\n  static async getStockDaily(func, symbol, date) {\n    const stockData = await axios.get(\n      `https://www.alphavantage.co/query?function=${func}&symbol=${symbol}&outputsize=full&apikey=${apiKey}`,\n    );\n\n    let detailStock = DataProcessingService.DataProcessing(\n      stockData.data,\n      date,\n    );\n\n    detailStock = DataProcessingService.AdjustSplitSingle(detailStock, date);\n    let volume = Object.values(detailStock.stockData).map(\n      (item) => item['6. volume'],\n    );\n    volume = Object.keys(detailStock.stockData).map((item, i) => ({\n      time: item,\n      value: +volume[i],\n    }));\n\n    detailStock = DataProcessingService.GraphDataProcessing(detailStock);\n    return [detailStock, volume.reverse()];\n  }\n}\n","import axios from 'axios'\nimport {\n  apiKey\n} from '../key'\nimport DataProcessingService from './DataProcessingService'\n\n// [SMI, VWAP, MACD, STOCH, RSI, ADX, CCI, AROON, BBANDS, AD, OBV]\nconst indicatorSymbols = [\"RSI\", \"BBANDS\"]\nexport default class IndicatorService {\n  static async getIndicator(symbol) {\n    const indicatorsApi = [\n      `https://www.alphavantage.co/query?function=RSI&symbol=${symbol}&interval=daily&time_period=14&series_type=open&apikey=${apiKey}`,\n      `https://www.alphavantage.co/query?function=BBANDS&symbol=${symbol}&interval=daily&time_period=20&series_type=close&apikey=${apiKey}`,\n    ]\n    const getindicatorPromise = api => {\n      return axios.get(api)\n    }\n    const promIndicator = indicatorsApi.map(api => getindicatorPromise(api));\n    let indicators = await Promise.all(promIndicator)\n      .then(result => result.map(item => item.data))\n    indicators = indicators.map((indicator, i) => DataProcessingService.IndicatorsProcessing(indicator, indicatorSymbols[i]));\n    return indicators;\n  }\n}","import DetailStockService from '../../services/DetailStockService';\nimport {\n  put,\n  call,\n  takeEvery,\n  select\n} from 'redux-saga/effects';\nimport IndicatorService from '../../services/IndicatorService';\nimport LocalStorageService from '../../services/LocalStorageService';\n\nconst prefix = 'stockflow/stock';\n\nconst initialState = {\n  loading: true,\n  stock: [],\n  error: null,\n  indicator: [],\n  volume: [],\n};\n\nconst GET_DETAILSTOCK_START = `${prefix}/GET_DETAILSTOCK_START`;\nconst GET_DETAILSTOCK_SUCCESS = `${prefix}/GET_DETAILSTOCK_SUCCESS`;\nconst GET_DETAILSTOCK_FAIL = `${prefix}/GET_DETAILSTOCK_FAIL`;\nconst GET_STOCKFROMLOCALSTORAGE = `${prefix}/GET_STOCKFROMLOCALSTORAGE`;\n\nconst startGetDetailStock = () => {\n  return {\n    type: GET_DETAILSTOCK_START,\n  };\n};\n\nconst successGetDetailStock = (stock, volume) => {\n  return {\n    type: GET_DETAILSTOCK_SUCCESS,\n    stock,\n    volume,\n  };\n};\n\nconst failGetDetailStock = (error) => {\n  return {\n    type: GET_DETAILSTOCK_FAIL,\n    error,\n  };\n};\nconst getStockFromLocalStorage = (detailStock) => {\n  return {\n    type: GET_STOCKFROMLOCALSTORAGE,\n    detailStock,\n  };\n};\n\n// function* getDetailStockSaga(action) {\n//   const { func, symbol, date } = action.payload;\n//   yield put(startGetDetailStock());\n//   try {\n//     let stock = yield call(DetailStockService.getStockDaily, func, symbol);\n//     stock = DataProcessingService.DataProcessing(stock, 'Time Series (Daily)');\n//     stock = DataProcessingService.AdjustSplitSingle(stock);\n//     yield put(successGetDetailStock(stock));\n//   } catch (error) {\n//     console.log(error);\n//     yield put(failGetDetailStock(error));\n//   }\n// }\n\nfunction* getDetailStockSaga(action) {\n  const {\n    func,\n    symbol,\n    date\n  } = action.payload;\n  yield put(startGetDetailStock());\n  try {\n    const updateDate = yield select((state) => state.djia.date);\n    let stock = LocalStorageService.getDetailStock(symbol, updateDate);\n    if (!stock) {\n      stock = yield call(DetailStockService.getStockDaily, func, symbol, date);\n      if (stock[0].length >= 1500) {\n        stock[0] = stock[0].slice(-1500);\n        stock[1] = stock[1].slice(-1500);\n      }\n      const barColor = stock[1].map((_, i) => {\n        if (i === 0) {\n          return 'red';\n        }\n        return stock[1][i - 1].value < stock[1][i].value ? '#C52D3C' : '#2BAA65';\n      });\n      const volumeData = stock[1].map((item, i) => ({\n        ...item,\n        color: barColor[i],\n      }));\n      yield put(successGetDetailStock(stock[0], volumeData));\n    } else {\n      yield put(getStockFromLocalStorage(stock));\n    }\n  } catch (error) {\n    console.log(error);\n    yield put(failGetDetailStock(error));\n  }\n}\n\nconst GET_DETAILSTOCK_SAGA = 'GET_DETAILSTOCK_SAGA';\nexport const getDetailStockSagaActionCreator = (symbol, date) => ({\n  type: GET_DETAILSTOCK_SAGA,\n  payload: {\n    func: 'TIME_SERIES_DAILY_ADJUSTED',\n    symbol,\n    date: 'Time Series (Daily)',\n  },\n});\n\n//indicator\n\n//액션\nconst GET_INDICATOR_START = `GET_INDICATOR_START`;\nconst GET_INDICATOR_SUCCESS = `GET_INDICATOR_SUCCESS`;\nconst GET_INDICATOR_FAIL = `GET_INDICATOR_FAIL`;\n\n//액션생성자함수\n\nconst startGetIndicator = () => {\n  return {\n    type: GET_INDICATOR_START,\n  };\n};\n\nconst SuccessGetIndicator = (indicator) => {\n  return {\n    type: GET_INDICATOR_SUCCESS,\n    indicator,\n  };\n};\n\nconst FailGetIndicator = (error) => {\n  return {\n    type: GET_INDICATOR_FAIL,\n    error,\n  };\n};\n\nconst GET_INDICATOR_SAGA = 'GET_INDICATOR_SAGA';\n\n//사가색션생성자 함수\nexport function getIndicatorSagaActionCreator() {\n  return {\n    type: GET_INDICATOR_SAGA,\n  };\n}\n\nfunction* getIndicatorSaga() {\n  yield put(startGetIndicator());\n  try {\n    const symbol = yield select((state) => state.selectedStock.symbol);\n    const indicator = yield call(IndicatorService.getIndicator, symbol);\n    yield put(SuccessGetIndicator(indicator));\n    const detailStock = yield select((state) => state.detailStock);\n    LocalStorageService.setItem(symbol, detailStock);\n  } catch (error) {\n    console.log(error);\n    yield put(FailGetIndicator(error));\n  }\n}\n\nexport function* detailStockSaga() {\n  yield takeEvery(GET_DETAILSTOCK_SAGA, getDetailStockSaga);\n  yield takeEvery(GET_DETAILSTOCK_SUCCESS, getIndicatorSaga);\n}\n\nexport default function reducer(prevState = initialState, action) {\n  switch (action.type) {\n    case GET_STOCKFROMLOCALSTORAGE: {\n      return {\n        ...action.detailStock,\n      };\n    }\n    case GET_DETAILSTOCK_START:\n      return {\n        ...prevState,\n        loading: true,\n          error: null,\n      };\n\n    case GET_DETAILSTOCK_SUCCESS:\n      return {\n        loading: true,\n          stock: action.stock,\n          error: null,\n          volume: action.volume,\n      };\n    case GET_DETAILSTOCK_FAIL:\n      return {\n        ...prevState,\n        loading: false,\n          error: action.error,\n      };\n\n    case GET_INDICATOR_START:\n      return {\n        ...prevState,\n        loading: true,\n          error: null,\n      };\n\n    case GET_INDICATOR_SUCCESS:\n      return {\n        ...prevState,\n        loading: false,\n          indicator: action.indicator,\n          error: null,\n      };\n    case GET_INDICATOR_FAIL:\n      return {\n        ...prevState,\n        loading: false,\n          error: action.error,\n      };\n\n    default:\n      return {\n        ...prevState,\n      };\n  }\n}","import axios from 'axios';\nimport {\n  apiKey\n} from '../key';\nimport DataProcessingService from './DataProcessingService';\n\nexport default class DetailCurrencyService {\n  static async getCurrencyDaily(func, symbol, date) {\n\n    const currencyData = await axios.get(\n      `https://www.alphavantage.co/query?function=${func}&symbol=${symbol}&market=USD&apikey=${apiKey}`,\n    );\n\n    let detailCurrency = await DataProcessingService.CurrencyDataProcessing(\n      currencyData.data,\n      date,\n    );\n\n    let volume = Object.values(detailCurrency.currencyData).map(item => (item['5. volume']))\n\n    volume = Object.keys(detailCurrency.currencyData).map((item, i) => ({\n      time: item,\n      value: +volume[i]\n    }))\n\n    detailCurrency = DataProcessingService.CurrencyGraphDataProcessing(detailCurrency);\n\n    return [detailCurrency, volume.reverse()];\n  }\n}","import DetailCurrencyService from \"../../services/DetailCurrencyService\";\nimport {\n  put,\n  call,\n  takeEvery,\n  select\n} from \"redux-saga/effects\";\nimport IndicatorService from \"../../services/IndicatorService\";\nimport LocalStorageService from \"../../services/LocalStorageService\";\nimport DataProcessingService from \"../../services/DataProcessingService\";\n\n\n\nconst prefix = 'stockflow/currency';\n\nconst initialState = {\n  loading: true,\n  currency: [],\n  error: null,\n  indicator: [],\n  volume: []\n};\n\nconst GET_DETAILCURRENCY_START = `${prefix}/GET_DETAILCURRENCY_START`;\nconst GET_DETAILCURRENCY_SUCCESS = `${prefix}/GET_DETAILCURRENCY_SUCCESS`;\nconst GET_DETAILCURRENCY_FAIL = `${prefix}/GET_DETAILCURRENCY_FAIL`;\nconst GET_CURRENCYFROMLOCALSTORAGE = `${prefix}/GET_CURRENCYFROMLOCALSTORAGE`\n\nconst startGetDetailCurrency = () => {\n  return {\n    type: GET_DETAILCURRENCY_START,\n  };\n};\n\nconst successGetDetailCurrency = (currency, volume, indicator) => {\n  return {\n    type: GET_DETAILCURRENCY_SUCCESS,\n    currency,\n    indicator,\n    volume,\n  };\n};\n\nconst failGetDetailCurrency = (error) => {\n  return {\n    type: GET_DETAILCURRENCY_FAIL,\n    error,\n  };\n};\nconst getCurrencyFromLocalStorage = (detailCurrency) => {\n  return {\n    type: GET_CURRENCYFROMLOCALSTORAGE,\n    detailCurrency\n  }\n}\n\n\nfunction* getDetailCurrencySaga(action) {\n  const { func, symbol, date } = action.payload;\n  yield put(startGetDetailCurrency());\n  try {\n    const updateDate = yield select(state => state.djia.date);\n    let currency = LocalStorageService.getDetailCurrency(symbol, updateDate);\n    if (!currency) {\n      currency = yield call(DetailCurrencyService.getCurrencyDaily, func, symbol, date);\n      if (currency[0].length >= 1500) {\n        currency[0] = currency[0].slice(-1500)\n        currency[1] = currency[1].slice(-1500)\n      }\n      const barColor = currency[1].map((_, i) => {\n        if (i === 0) {\n          return \"red\"\n        }\n        return currency[1][i - 1].value < currency[1][i].value ? '#C52D3C' : '#2BAA65';\n      })\n      const volumeData = currency[1].map((item, i) => ({\n        ...item,\n        color: barColor[i]\n      }))\n      const indicator = DataProcessingService.currencyIndicatorProcessing(currency[0])\n      yield put(successGetDetailCurrency(currency[0], volumeData, indicator));\n    } else {\n      yield put(getCurrencyFromLocalStorage(currency))\n    }\n  } catch (error) {\n    console.log(error)\n    yield put(failGetDetailCurrency(error));\n  }\n}\n\n\nconst GET_DETAILCURRENCY_SAGA = \"GET_DETAILCURRENCY_SAGA\";\nexport const getDetailCurrencySagaActionCreator = (symbol, date) => ({\n  type: GET_DETAILCURRENCY_SAGA,\n  payload: {\n    func: 'DIGITAL_CURRENCY_DAILY',\n    symbol,\n    date: \"Time Series (Digital Currency Daily)\"\n  },\n});\n\n// //indicator\n\n// //액션\n// const GET_CURRENCYINDICATOR_START = `GET_CURRENCYINDICATOR_START`\n// const GET_CURRENCYINDICATOR_SUCCESS = `GET_CURRENCYINDICATOR_SUCCESS`\n// const GET_CURRENCYINDICATOR_FAIL = `GET_CURRENCYINDICATOR_FAIL`\n\n// //액션생성자함수\n\n// const startGetCurrencyIndicator = () => {\n//   return {\n//     type: GET_CURRENCYINDICATOR_START,\n//   }\n// }\n\n// const SuccessGetCurrencyIndicator = (indicator) => {\n//   return {\n//     type: GET_CURRENCYINDICATOR_SUCCESS,\n//     indicator\n//   }\n// }\n\n// const FailGetCurrencyIndicator = (error) => {\n//   return {\n//     type: GET_CURRENCYINDICATOR_FAIL,\n//     error\n//   }\n// }\n\n// const GET_CURRENCYINDICATOR_SAGA = 'GET_CURRENCYINDICATOR_SAGA'\n\n// // 사가색션생성자 함수\n// export function getCurrencyIndicatorSagaActionCreator() {\n//   return {\n//     type: GET_CURRENCYINDICATOR_SAGA,\n//   }\n// }\n\n\n// function* getCurrencyIndicatorSaga() {\n//   yield put(startGetCurrencyIndicator());\n//   try {\n//     const symbol = yield select(state => state.selectedStock.symbol);\n//     const indicator = yield call(IndicatorService.getIndicator, symbol)\n//     yield put(SuccessGetCurrencyIndicator(indicator))\n//     const detailCurrency = yield select(state => state.detailCurrency)\n//     LocalStorageService.setItem(symbol, detailCurrency)\n//   } catch (error) {\n//     console.log(error)\n//     yield put(FailGetCurrencyIndicator(error));\n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\nexport function* detailCurrencySaga() {\n  yield takeEvery(GET_DETAILCURRENCY_SAGA, getDetailCurrencySaga);\n  // yield takeEvery(GET_DETAILCURRENCY_SUCCESS, getCurrencyIndicatorSaga);\n}\n\n\n\n\n\n\n\n\n\n\nexport default function reducer(prevState = initialState, action) {\n  switch (action.type) {\n    case GET_CURRENCYFROMLOCALSTORAGE: {\n      return {\n        ...action.detailCurrency\n      }\n    }\n    case GET_DETAILCURRENCY_START:\n      return {\n        ...prevState,\n        loading: true,\n        error: null,\n      };\n\n    case GET_DETAILCURRENCY_SUCCESS:\n      return {\n        ...prevState,\n        loading: false,\n        currency: action.currency,\n        indicator: action.indicator,\n        error: null,\n        volume: action.volume\n      };\n    case GET_DETAILCURRENCY_FAIL:\n      return {\n        ...prevState,\n        loading: false,\n        error: action.error,\n      };\n\n    // case GET_CURRENCYINDICATOR_START:\n    //   return {\n    //     ...prevState,\n    //     loading: true,\n    //       error: null,\n    //   }\n\n    //   case GET_CURRENCYINDICATOR_SUCCESS:\n    //     return {\n    //       ...prevState,\n    //       loading: false,\n    //         indicator: action.indicator,\n    //         error: null,\n    //     }\n    //     case GET_CURRENCYINDICATOR_FAIL:\n    //       return {\n    //         ...prevState,\n    //         indicator: [],\n    //         loading: false,\n    //         error: action.error\n    //       }\n\n          default:\n            return {\n              ...prevState,\n            };\n\n  }\n}\n","import axios from 'axios';\nimport { apiKey } from '../key';\n\nexport default class ExchangeSerivice {\n  static async getExchange(exchangeArr) {\n    // const [fromCurrency, toCurrency] = exchange;\n\n    // API 요청\n    const returnExchange = exchangeArr.map((_, index) => {\n      const fromCurrency = exchangeArr[index][0];\n      const toCurrency = exchangeArr[index][1];\n      return axios\n        .get(\n          `https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=${fromCurrency}&to_currency=${toCurrency}&apikey=${apiKey}`,\n        )\n        .then((res) => res.data['Realtime Currency Exchange Rate'])\n        .catch((e) => console.error(e));\n    });\n    const exchangePromise = await Promise.all(returnExchange).then(\n      (res) => res,\n    );\n\n    const returnIntraday = exchangeArr.map((_, index) => {\n      const fromSymbol = exchangeArr[index][0];\n      const toSymbol = exchangeArr[index][1];\n      return axios\n        .get(\n          `https://www.alphavantage.co/query?function=FX_DAILY&from_symbol=${fromSymbol}&to_symbol=${toSymbol}&interval=5min&apikey=${apiKey}`,\n        )\n        .then((res) => res.data['Time Series FX (Daily)'])\n        .catch((e) => console.error(e));\n    });\n    const exchangeIntraPromise = await Promise.all(returnIntraday).then(\n      (res) => res,\n    );\n\n    const exchangeArrState = [...exchangePromise];\n    let combineExchangeArray = await exchangeArr.map((exchange, i) => {\n      return (exchangeArrState[i].fxIntraday = exchangeIntraPromise[i]);\n    });\n    return exchangeArrState;\n  }\n}\n// export default class ExchangeSerivice {\n//   static async getExchange(exchangeArr) {\n//     const exchangeArrState = [];\n\n//     for (const exchange of exchangeArr) {\n//       const [fromCurrency, toCurrency] = exchange;\n//       const returnExchange = await axios.get(\n//         `https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=${fromCurrency}&to_currency=${toCurrency}&apikey=${apiKey}`,\n//       );\n\n//       exchangeArrState.push({\n//         ...returnExchange.data['Realtime Currency Exchange Rate'],\n//       });\n//     }\n\n//     for (let i = 0; i < exchangeArr.length; i++) {\n//       const [fromSymbol, toSymbol] = exchangeArr[i];\n\n//       const fxIntraday = await axios.get(\n//         `https://www.alphavantage.co/query?function=FX_INTRADAY&from_symbol=${fromSymbol}&to_symbol=${toSymbol}&interval=5min&apikey=${apiKey}`,\n//       );\n\n//       exchangeArrState[i].fxIntraday = fxIntraday.data['Time Series FX (5min)'];\n//     }\n\n//     return exchangeArrState;\n//   }\n// }\n","import {\n  put,\n  call,\n  takeEvery\n} from 'redux-saga/effects';\nimport ExchangeSerivice from '../../services/ExchangeService';\n\nconst prefix = 'stockflow/exchange';\nconst initialState = {\n  loading: true,\n  exchange: [],\n  error: null,\n};\n\nconst GET_EXCHANGE_START = `${prefix}/GET_EXCHANGE_START`;\nconst GET_EXCHANGE_SUCCESS = `${prefix}/GET_EXCHANGE_SUCCESS`;\nconst GET_EXCHANGE_ERROR = `${prefix}/GET_EXCHANGE_ERROR`;\n\nconst startGetExchange = () => {\n  return {\n    type: GET_EXCHANGE_START,\n  };\n};\nconst successGetExchange = (exchange) => {\n  return {\n    type: GET_EXCHANGE_SUCCESS,\n    exchange,\n  };\n};\nconst failGetExchange = (error) => {\n  return {\n    type: GET_EXCHANGE_ERROR,\n    error,\n  };\n};\n\nfunction* getExchangeSaga(action) {\n  const {\n    exchangeArray\n  } = action.payload;\n  yield put(startGetExchange());\n  try {\n    // delay(1000);\n    let exchange = yield call(ExchangeSerivice.getExchange, exchangeArray);\n\n    yield put(successGetExchange(exchange));\n  } catch (error) {\n    console.log(error);\n    yield put(failGetExchange());\n  }\n}\n\nconst GET_EXCHANGE_SAGA = 'GET_EXCHANGE_SAGA';\n\nexport const getExchangeSagaActionCreator = (exchangeArray) => ({\n  type: GET_EXCHANGE_SAGA,\n  payload: {\n    exchangeArray,\n  },\n});\n\nexport function* exchangeSaga() {\n  yield takeEvery(GET_EXCHANGE_SAGA, getExchangeSaga);\n}\n\nexport default function reducer(prevState = initialState, action) {\n  switch (action.type) {\n    case GET_EXCHANGE_START:\n      return {\n        ...prevState,\n        loading: true,\n          error: null,\n      };\n\n    case GET_EXCHANGE_SUCCESS:\n      return {\n        loading: false,\n          exchange: action.exchange,\n          error: null,\n      };\n    case GET_EXCHANGE_ERROR:\n      return {\n        ...prevState,\n        loading: false,\n          error: action.error,\n      };\n    default:\n      return {\n        ...prevState,\n      };\n  }\n}","import { put, takeLatest } from 'redux-saga/effects';\n\nconst prefix = 'stockflow/selectedStock';\n\nconst initialState = {\n  loading: true,\n  kind: '',\n  symbol: '',\n  error: null,\n};\n\nconst GET_SELECTEDSTOCK_START = `${prefix}/GET_SELECTEDSTOCK_START`;\nconst GET_SELECTEDSTOCK_SUCCESS = `${prefix}/GET_SELECTEDSTOCK_SUCCESS`;\nconst GET_SELECTEDSTOCK_FAIL = `${prefix}/GET_SELECTEDSTOCK_FAIL`;\n\nconst startGetSelectedStock = () => {\n  return {\n    type: GET_SELECTEDSTOCK_START,\n  };\n};\n\nconst successGetSelectedStock = (selectedStock) => {\n  return {\n    type: GET_SELECTEDSTOCK_SUCCESS,\n    selectedStock,\n  };\n};\n\nconst failGetelectedStock = (error) => {\n  return {\n    type: GET_SELECTEDSTOCK_FAIL,\n    error,\n  };\n};\n\nfunction* getSelectedStockSaga(action) {\n  const selectedStock = action.payload;\n  yield put(startGetSelectedStock());\n  try {\n    yield put(successGetSelectedStock(selectedStock));\n  } catch (error) {\n    yield put(failGetelectedStock(error));\n  }\n}\n\nconst GET_SELECTEDSTOCK_SAGA = 'GET_SELECTEDSTOCK_SAGA';\nexport const getSelectedStockSagaActionCreator = (symbol, kind) => ({\n  type: GET_SELECTEDSTOCK_SAGA,\n  payload: {\n    symbol,\n    kind,\n  },\n});\n\nexport function* selectedStockSaga() {\n  yield takeLatest(GET_SELECTEDSTOCK_SAGA, getSelectedStockSaga);\n}\n\nexport default function reducer(prevState = initialState, action) {\n  switch (action.type) {\n    case GET_SELECTEDSTOCK_START:\n      return {\n        ...prevState,\n        loading: true,\n        error: null,\n      };\n\n    case GET_SELECTEDSTOCK_SUCCESS:\n      return {\n        ...prevState,\n        loading: false,\n        kind: action.selectedStock.kind,\n        symbol: action.selectedStock.symbol,\n        error: null,\n      };\n    case GET_SELECTEDSTOCK_FAIL:\n      return {\n        ...prevState,\n        loading: false,\n        error: action.error,\n      };\n    default:\n      return {\n        ...prevState,\n      };\n  }\n}\n","import { put, takeLatest, select } from 'redux-saga/effects';\n\nconst prefix = 'stockflow/selectedSymbol';\n\n// action type\nconst START = `${prefix}/START`;\nconst SUCCESS = `${prefix}/SUCCESS`;\nconst FAIL = `${prefix}/FAIL`;\n\n/*\n  [\n    {\n      symbol: MMM,\n      count: 1\n    }\n  ]\n*/\n\n// initial state\nconst initialState = {\n  selectedStockSymbol: [],\n  selectedCurrencySymbol: [],\n  loading: false,\n  error: null,\n};\n\n// selectedSymbol\n\n// action creator\nconst selectedSymbolStart = () => ({\n  type: START,\n});\n\nconst selectedSymbolSuccess = (selectedSymbol, names) => ({\n  type: SUCCESS,\n  selectedSymbol,\n  names,\n});\n\nconst selectedSymbolFail = (error) => ({\n  type: FAIL,\n  error,\n});\n\nfunction* getSelectedSymbolSaga(action) {\n  let selectedStockSymbol = yield select(\n    (state) => state.selectedSymbol.selectedStockSymbol,\n  );\n\n  let selectedCurrencySymbol = yield select(\n    (state) => state.selectedSymbol.selectedCurrencySymbol,\n  );\n\n  let names = action.payload.names;\n\n  if (names === 'stock') {\n    if (\n      // 같은 symbol이 없을때 새로운 symbol 추가\n      selectedStockSymbol.filter(\n        (symbol) => symbol.symbol === action.payload.selectedSymbol,\n      ).length === 0\n    ) {\n      selectedStockSymbol = [\n        ...selectedStockSymbol,\n        {\n          symbol: action.payload.selectedSymbol,\n          count: 1,\n          favorite: false,\n        },\n      ];\n    } else {\n      // 만약 이미 추가된 symbol이라면 count만 + 1\n      selectedStockSymbol = selectedStockSymbol.map((symbol) =>\n        symbol.symbol === action.payload.selectedSymbol\n          ? symbol.count < 2\n            ? {\n                ...symbol,\n                count: symbol.count + 1,\n                favorite: false,\n              }\n            : {\n                ...symbol,\n                count: symbol.count + 1,\n                favorite: true,\n              }\n          : symbol,\n      );\n    }\n    yield put(selectedSymbolStart());\n    try {\n      yield put(selectedSymbolSuccess(selectedStockSymbol, names));\n    } catch (error) {\n      yield put(selectedSymbolFail(error));\n    }\n  } else {\n    if (\n      // 같은 symbol이 없을때 새로운 symbol 추가\n      selectedCurrencySymbol.filter(\n        (symbol) => symbol.symbol === action.payload.selectedSymbol,\n      ).length === 0\n    ) {\n      selectedCurrencySymbol = [\n        ...selectedCurrencySymbol,\n        {\n          symbol: action.payload.selectedSymbol,\n          count: 1,\n          favorite: false,\n        },\n      ];\n    } else {\n      // 만약 이미 추가된 symbol이라면 count만 + 1\n      selectedCurrencySymbol = selectedCurrencySymbol.map((symbol) =>\n        symbol.symbol === action.payload.selectedSymbol\n          ? symbol.count === 3\n            ? {\n                ...symbol,\n                count: symbol.count + 1,\n                favorite: false,\n              }\n            : {\n                ...symbol,\n                count: symbol.count + 1,\n                favorite: true,\n              }\n          : symbol,\n      );\n    }\n    yield put(selectedSymbolStart());\n    try {\n      yield put(selectedSymbolSuccess(selectedCurrencySymbol, names));\n    } catch (error) {\n      yield put(selectedSymbolFail(error));\n    }\n  }\n}\n\nconst GET_SELECTEDSYMBOL_SAGA = 'GET_SELECTEDSYMBOL_SAGA';\nexport const getSelectedSymbolActionCreator = (selectedSymbol, names) => ({\n  type: GET_SELECTEDSYMBOL_SAGA,\n  payload: {\n    selectedSymbol,\n    names,\n  },\n});\n\nexport function* selectedSymbolSaga() {\n  yield takeLatest(GET_SELECTEDSYMBOL_SAGA, getSelectedSymbolSaga);\n}\n\n// favorite\n\nconst GET_FAVORITE_START = `GET_FAVORITE_START`;\nconst GET_FAVORITE_SUCCESS = `GET_FAVORITE_SUCCESS`;\nconst GET_FAVORITE_FAIL = `GET_FAVORITE_FAIL`;\n\nconst CounterListStart = () => ({\n  type: GET_FAVORITE_START,\n});\n\nconst CounterListSuccess = (getStockListElement, getCurrencyListElement) => ({\n  type: GET_FAVORITE_SUCCESS,\n  getStockListElement,\n  getCurrencyListElement,\n});\n\nconst CounterListFail = (error) => ({\n  type: GET_FAVORITE_FAIL,\n  error,\n});\n\nfunction* getFavoriteListSaga(action) {\n  const getStockListElement = action.payload.getStockListElement;\n  const getCurrencyListElement = action.payload.getCurrencyListElement;\n\n  yield put(CounterListStart());\n  try {\n    yield put(CounterListSuccess(getStockListElement, getCurrencyListElement));\n  } catch (error) {\n    yield put(CounterListFail(error));\n  }\n}\n\nconst GET_FAVORITELIST_SAGA = 'GET_FAVORITELIST_SAGA';\nexport const getfavoriteListActionCreator = (\n  getStockListElement,\n  getCurrencyListElement,\n) => ({\n  type: GET_FAVORITELIST_SAGA,\n  payload: {\n    getStockListElement,\n    getCurrencyListElement,\n  },\n});\n\nexport function* favoriteSymbolSaga() {\n  yield takeLatest(GET_FAVORITELIST_SAGA, getFavoriteListSaga);\n}\n\n// favorite button\n\n// action type\nconst GET_FAVORITE_BUTTON_START = `GET_FAVORITE_BUTTON_START`;\nconst GET_FAVORITE_BUTTON_SUCCESS = `GET_FAVORITE_BUTTON_SUCCESS`;\nconst GET_FAVORITE_BUTTON_FAIL = `GET_FAVORITE_BUTTON_FAIL`;\n\n// action creator\nconst favoriteButtonStart = () => ({\n  type: GET_FAVORITE_BUTTON_START,\n});\n\nconst favoriteButtonSuccess = (selectedStock, names) => ({\n  type: GET_FAVORITE_BUTTON_SUCCESS,\n  selectedStock,\n  names,\n});\n\nconst favoriteButtonFail = (error) => ({\n  type: GET_FAVORITE_BUTTON_FAIL,\n  error,\n});\n\nfunction* getFavoriteListButtonSaga(action) {\n  let selectedStockSymbol = yield select(\n    (state) => state.selectedSymbol.selectedStockSymbol,\n  );\n\n  let selectedCurrencySymbol = yield select(\n    (state) => state.selectedSymbol.selectedCurrencySymbol,\n  );\n\n  let names = action.payload.names;\n\n  if (names === 'stock') {\n    if (\n      selectedStockSymbol.filter(\n        (symbol) => symbol.symbol === action.payload.selectedStock,\n      ).length === 0\n    ) {\n      selectedStockSymbol = [\n        ...selectedStockSymbol,\n        {\n          symbol: action.payload.selectedStock,\n          count: 3,\n          favorite: true,\n        },\n      ];\n    } else {\n      // 만약 이미 추가된 symbol이라면 count만 + 1\n      selectedStockSymbol = selectedStockSymbol.map((symbol) =>\n        symbol.symbol === action.payload.selectedStock\n          ? symbol.count < 2\n            ? {\n                ...symbol,\n                count: 3,\n                favorite: true,\n              }\n            : {\n                ...symbol,\n                count: symbol.count + 1,\n                favorite: !symbol.favorite,\n              }\n          : symbol,\n      );\n    }\n    yield put(favoriteButtonStart());\n    try {\n      yield put(favoriteButtonSuccess(selectedStockSymbol, names));\n    } catch (error) {\n      yield put(favoriteButtonFail(error));\n    }\n  } else {\n    if (\n      // 같은 symbol이 없을때 새로운 symbol 추가\n      selectedCurrencySymbol.filter(\n        (symbol) => symbol.symbol === action.payload.selectedStock,\n      ).length === 0\n    ) {\n      selectedCurrencySymbol = [\n        ...selectedCurrencySymbol,\n        {\n          symbol: action.payload.selectedStock,\n          count: 3,\n          favorite: true,\n        },\n      ];\n    } else {\n      // 만약 이미 추가된 symbol이라면 count만 + 1\n      selectedCurrencySymbol = selectedCurrencySymbol.map((symbol) => {\n\n        // console.log('hi', symbol)\n        return symbol.symbol === action.payload.selectedStock ?\n          symbol.count < 3 ? {\n            ...symbol,\n            count: 3,\n            favorite: true\n          } : {\n            ...symbol,\n            count: symbol.count + 1,\n            favorite: !symbol.favorite,\n          } :\n          symbol\n\n      });\n    }\n    yield put(favoriteButtonStart());\n    try {\n      yield put(favoriteButtonSuccess(selectedCurrencySymbol, names));\n    } catch (error) {\n      yield put(favoriteButtonFail(error));\n    }\n  }\n}\n\nconst GET_FAVORITELIST_BUTTON_SAGA = 'GET_FAVORITELIST_BUTTON_SAGA';\nexport const getfavoriteListButtonActionCreator = (\n  selectedStock,\n  favoriteDataList,\n  names,\n) => ({\n  type: GET_FAVORITELIST_BUTTON_SAGA,\n  payload: {\n    selectedStock,\n    favoriteDataList,\n    names,\n  },\n});\n\nexport function* favoriteButtonSaga() {\n  yield takeLatest(GET_FAVORITELIST_BUTTON_SAGA, getFavoriteListButtonSaga);\n}\n// reducer\n\nexport default function reducer(prevState = initialState, action) {\n  switch (action.type) {\n    case START:\n      return {\n        ...prevState,\n        loading: true,\n        error: null,\n      };\n\n    case SUCCESS:\n      if (action.names === 'stock') {\n        return {\n          ...prevState,\n          loading: false,\n          selectedStockSymbol: action.selectedSymbol,\n          error: null,\n        };\n      } else {\n        return {\n          ...prevState,\n          loading: false,\n          selectedCurrencySymbol: action.selectedSymbol,\n          error: null,\n        };\n      }\n    case FAIL:\n      return {\n        ...prevState,\n        loading: false,\n        error: action.error,\n      };\n\n    case GET_FAVORITE_START:\n      return {\n        ...prevState,\n        loading: true,\n        error: null,\n      };\n    case GET_FAVORITE_SUCCESS:\n      return {\n        selectedStockSymbol: action.getStockListElement,\n        selectedCurrencySymbol: action.getCurrencyListElement,\n        loading: false,\n        error: null,\n      };\n    case GET_FAVORITE_FAIL:\n      return {\n        ...prevState,\n        loading: false,\n        error: action.error,\n      };\n\n    case GET_FAVORITE_BUTTON_START:\n      return {\n        ...prevState,\n        loading: true,\n        error: null,\n      };\n    case GET_FAVORITE_BUTTON_SUCCESS:\n      if (action.names === 'stock') {\n        return {\n          ...prevState,\n          loading: false,\n          selectedStockSymbol: action.selectedStock,\n          error: null,\n        };\n      } else {\n        return {\n          ...prevState,\n          loading: false,\n          selectedCurrencySymbol: action.selectedStock,\n          error: null,\n        };\n      }\n    case GET_FAVORITE_BUTTON_FAIL:\n      return {\n        ...prevState,\n        loading: true,\n        error: action.error,\n      };\n    default:\n      return {\n        ...prevState,\n      };\n  }\n}\n","import DetailStockService from \"../../services/DetailStockService\";\nimport {\n  put,\n  call,\n  takeEvery\n} from \"redux-saga/effects\";\n\nconst initialState = {\n  loading: true,\n  stock: [],\n  error: null,\n}\n\n//액션\nconst GET_COMPARE_START = `GET_COMPARE_START`;\nconst GET_COMPARE_SUCCESS = `GET_COMPARE_SUCCESS`;\nconst GET_COMPARE_FAIL = `GET_COMPARE_FAIL`;\n\n//액션생성자함수\n\nconst startGetCompare = () => {\n  return {\n    type: GET_COMPARE_START,\n  };\n};\n\nconst successGetCompare = (stock) => {\n  return {\n    type: GET_COMPARE_SUCCESS,\n    stock,\n  };\n};\n\nconst failGetCompare = (error) => {\n  return {\n    type: GET_COMPARE_FAIL,\n    error,\n  };\n};\n\nconst GET_COMPARE_SAGA = 'GET_INDICATOR_SAGA';\n\n//사가색션생성자 함수\nexport function getCompareSagaActionCreator(symbol) {\n  return {\n    type: GET_COMPARE_SAGA,\n    payload: {\n      func: 'TIME_SERIES_DAILY_ADJUSTED',\n      symbol,\n      date: 'Time Series (Daily)',\n    }\n  };\n}\n\nfunction* getCompareSaga(action) {\n  const {\n    func,\n    symbol,\n    date\n  } = action.payload;\n  yield put(startGetCompare());\n  try {\n    let compareStock = JSON.parse(localStorage.getItem(symbol));\n    if (!compareStock) {\n      compareStock = yield call(DetailStockService.getStockDaily, func, symbol, date);\n      if (compareStock[0].length >= 1500) {\n        compareStock[0] = compareStock[0].slice(-1500);\n      }\n      yield put(successGetCompare(compareStock[0]));\n    } else {\n      const {\n        stock\n      } = compareStock;\n      yield put(successGetCompare(\n        stock\n      ));\n    }\n  } catch (error) {\n    yield put(failGetCompare(error));\n  }\n}\n\n\n\n\n\nexport function* compareSaga() {\n  yield takeEvery(GET_COMPARE_SAGA, getCompareSaga);\n}\n\nexport default function reducer(prevState = initialState, action) {\n  switch (action.type) {\n    case GET_COMPARE_START:\n      return {\n        ...prevState,\n        loading: true,\n          error: null,\n      };\n\n    case GET_COMPARE_SUCCESS:\n      return {\n        ...prevState,\n        loading: false,\n          stock: action.stock,\n          error: null,\n      };\n    case GET_COMPARE_FAIL:\n      return {\n        ...prevState,\n        loading: false,\n          error: action.error,\n      };\n\n    default:\n      return {\n        ...prevState,\n      };\n  }\n}","import {\n  takeLatest,\n  put\n} from 'redux-saga/effects';\n\nconst prefix = `stockflow/selectedExchange`;\nconst initialState = {\n  loading: false,\n  fxIntraday: {},\n  error: null,\n};\n\nconst GET_SELECTEDEXCHANGE_START = `${prefix}/GET_SELECTEDEXCHANGE_START`;\nconst GET_SELECTEDEXCHANGE_SUCCESS = `${prefix}/GET_SELECTEDEXCHANGE_SUCCESS`;\nconst GET_SELECTEDEXCHANGE_FAIL = `${prefix}/GET_SELECTEDEXCHANGE_FAIL`;\nconst GET_SELECTEDEXCHANGE_SAGA = `${prefix}/GET_SELECTEDEXCHANGE_SAGA`;\n\nconst startGetSelectedExchange = () => {\n  return {\n    type: GET_SELECTEDEXCHANGE_START,\n  };\n};\n\nconst successGetSelectedExchange = (fxIntraday) => {\n  return {\n    type: GET_SELECTEDEXCHANGE_SUCCESS,\n    fxIntraday,\n  };\n};\n\nconst failGetSelectedExchange = (error) => {\n  return {\n    type: GET_SELECTEDEXCHANGE_FAIL,\n    error,\n  };\n};\n\nfunction* getSelectedExchangeSaga(action) {\n  const selectedExchange = action.payload;\n\n  yield put(startGetSelectedExchange());\n  try {\n    yield put(successGetSelectedExchange(selectedExchange));\n  } catch (error) {\n    yield put(failGetSelectedExchange(error));\n  }\n}\n\nexport const createGetSelectedExchangeSaga = (\n  fromCurrenciesCode,\n  fromCurrenciesName,\n  toCurrenciesCode,\n  toCurrenciesName,\n  fxIntraday,\n) => {\n  return {\n    type: GET_SELECTEDEXCHANGE_SAGA,\n    payload: {\n      fromCurrenciesCode,\n      fromCurrenciesName,\n      toCurrenciesCode,\n      toCurrenciesName,\n      fxIntraday,\n    },\n  };\n};\nexport function* selectedExchangeSaga() {\n  yield takeLatest(GET_SELECTEDEXCHANGE_SAGA, getSelectedExchangeSaga);\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_SELECTEDEXCHANGE_START:\n      return {\n        ...state,\n        loading: true,\n          error: null,\n      };\n    case GET_SELECTEDEXCHANGE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n          error: null,\n          fromCurrenciesCode: action.fromCurrenciesCode,\n          fromCurrenciesName: action.fromCurrenciesName,\n          toCurrenciesCode: action.toCurrenciesCode,\n          toCurrenciesName: action.toCurrenciesName,\n          fxIntraday: action.fxIntraday,\n      };\n    case GET_SELECTEDEXCHANGE_FAIL:\n      return {\n        ...state,\n        loading: false,\n          error: action.error,\n      };\n    default: {\n      return state;\n    }\n  }\n}","import DetailCurrencyService from \"../../services/DetailCurrencyService\";\nimport {\n  put,\n  call,\n  takeEvery\n} from \"redux-saga/effects\";\n\nconst initialState = {\n  loading: true,\n  currency: [],\n  error: null,\n}\n\n//액션\nconst GET_COMPARECURRENCY_START = `GET_COMPARECURRENCY_START`;\nconst GET_COMPARECURRENCY_SUCCESS = `GET_COMPARECURRENCY_SUCCESS`;\nconst GET_COMPARECURRENCY_FAIL = `GET_COMPARECURRENCY_FAIL`;\n\n//액션생성자함수\n\nconst startGetCompareCurrency = () => {\n  return {\n    type: GET_COMPARECURRENCY_START,\n  };\n};\n\nconst successGetCompareCurrency = (currency) => {\n  return {\n    type: GET_COMPARECURRENCY_SUCCESS,\n    currency,\n  };\n};\n\nconst failGetCompareCurrency = (error) => {\n  return {\n    type: GET_COMPARECURRENCY_FAIL,\n    error,\n  };\n};\n\nconst GET_COMPARECURRENCY_SAGA = 'GET_INDICATOR_SAGA';\n\n//사가색션생성자 함수\nexport function getCompareCurrencySagaActionCreator(symbol) {\n  return {\n    type: GET_COMPARECURRENCY_SAGA,\n    payload: {\n      func: 'DIGITAL_CURRENCY_DAILY',\n      symbol,\n      date: \"Time Series (Digital Currency Daily)\",\n    }\n  };\n}\n\nfunction* getCompareCurrencySaga(action) {\n  const {\n    func,\n    symbol,\n    date\n  } = action.payload;\n  yield put(startGetCompareCurrency());\n  try {\n    let compareCurrency = JSON.parse(localStorage.getItem(symbol));\n    if (!compareCurrency) {\n      compareCurrency = yield call(DetailCurrencyService.getCurrencyDaily, func, symbol, date);\n      if (compareCurrency[0].length >= 1500) {\n        compareCurrency[0] = compareCurrency[0].slice(-1500);\n      }\n      yield put(successGetCompareCurrency(compareCurrency[0]));\n    } else {\n      const {\n        currency\n      } = compareCurrency;\n      yield put(successGetCompareCurrency(\n        currency\n      ));\n    }\n  } catch (error) {\n    yield put(failGetCompareCurrency(error));\n  }\n}\n\n\n\n\n\nexport function* compareCurrencySaga() {\n  yield takeEvery(GET_COMPARECURRENCY_SAGA, getCompareCurrencySaga);\n}\n\nexport default function reducer(prevState = initialState, action) {\n  switch (action.type) {\n    case GET_COMPARECURRENCY_START:\n      return {\n        ...prevState,\n        loading: true,\n          error: null,\n      };\n\n    case GET_COMPARECURRENCY_SUCCESS:\n      return {\n        ...prevState,\n        loading: false,\n          currency: action.currency,\n          error: null,\n      };\n    case GET_COMPARECURRENCY_FAIL:\n      return {\n        ...prevState,\n        loading: false,\n          error: action.error,\n      };\n\n    default:\n      return {\n        ...prevState,\n      };\n  }\n}","import { connectRouter } from 'connected-react-router';\nimport { combineReducers } from 'redux';\nimport djia from './djia';\nimport sideBarStock from './sidebarstock';\nimport sidebarCurrency from './sidebarCurrency';\nimport detailStock from './detailStock';\nimport detailCurrency from './detailCurrency';\nimport exchange from './exchange';\nimport selectedStock from './selectedStock';\nimport selectedSymbol from './selectedSymbol';\nimport compare from './compare';\nimport favoriteList from './favoriteList';\nimport selectedExchange from './selectedExchange';\nimport compareCurrency from './compareCurrency'\n\nconst reducer = (history) =>\n  combineReducers({\n    djia,\n    sideBarStock,\n    sidebarCurrency,\n    detailStock,\n    detailCurrency,\n    selectedStock,\n    compare,\n    compareCurrency,\n    exchange,\n\n    selectedSymbol,\n    selectedExchange,\n    // favoriteList,\n    router: connectRouter(history),\n  });\n\nexport default reducer;\n","import { routerMiddleware } from 'connected-react-router';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport { createBrowserHistory } from 'history';\nimport reducer from './modules/reducer';\n\nexport const history = createBrowserHistory();\nexport const sagaMiddleware = createSagaMiddleware();\n\nexport default function create() {\n  return createStore(\n    reducer(history),\n    composeWithDevTools(\n      applyMiddleware(routerMiddleware(history), sagaMiddleware),\n    ),\n  );\n}\n","import React, { useCallback } from 'react';\nimport { createGetSelectedExchangeSaga } from '../../redux/modules/selectedExchange';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n// import ForeignExchange from './ForeignExchange';\n\nexport default function ForeignExchangeItem({\n  loading,\n  fromCurrenciesCode,\n  fromCurrenciesName,\n  toCurrenciesCode,\n  toCurrenciesName,\n  exchangeRate,\n  fxIntradayArr,\n  fxIntraday,\n\n  firstFromCurrenciesCode,\n  firstFromCurrenciesName,\n  firstToCurrenciesCode,\n  firstToCurrenciesName,\n  firstFxIntraday,\n}) {\n  let resultPercent = 0;\n  let before = 0;\n  let after = 0;\n\n  if (fxIntradayArr) {\n    before = fxIntradayArr['beforefxClose'];\n    after = fxIntradayArr['afterfxClose'];\n\n    if (before === after) resultPercent = 0;\n\n    if (before < after) {\n      resultPercent = ((after - before) / before) * 100;\n    }\n    if (before > after) {\n      resultPercent = ((before - after) / before) * 100;\n    }\n  }\n  resultPercent = resultPercent.toFixed(2);\n  let fxDiff = (after - before).toFixed(3);\n\n  const dispatch = useDispatch();\n\n  const fromCountryIcon = `../images/${fromCurrenciesCode}.svg`;\n  const toCountryIcon = `../images/${toCurrenciesCode}.svg`;\n\n  useEffect(() => {\n    dispatch(\n      createGetSelectedExchangeSaga(\n        firstFromCurrenciesCode,\n        firstFromCurrenciesName,\n        firstToCurrenciesCode,\n        firstToCurrenciesName,\n        firstFxIntraday,\n      ),\n    );\n  }, []);\n\n  const transCode = useCallback(() => {\n    dispatch(\n      createGetSelectedExchangeSaga(\n        fromCurrenciesCode,\n        fromCurrenciesName,\n        toCurrenciesCode,\n        toCurrenciesName,\n        fxIntraday,\n      ),\n    );\n  }, []);\n\n  return (\n    <>\n      {!loading && (\n        <div\n          className=\"exchange-item\"\n          onClick={() => {\n            transCode(\n              fromCurrenciesCode,\n              fromCurrenciesName,\n              toCurrenciesCode,\n              toCurrenciesName,\n              fxIntraday,\n            );\n          }}\n        >\n          <div className=\"exchange-column icon\">\n            <span className=\"country-icon from\">\n              <img src={fromCountryIcon} alt={fromCurrenciesName} />\n            </span>\n            <span className=\"country-icon to\">\n              <img src={toCountryIcon} alt={toCurrenciesName} />\n            </span>\n          </div>\n          <div className=\"exchange-column name\">\n            <strong className=\"currency-code\">\n              {fromCurrenciesCode}\n              {toCurrenciesCode}\n            </strong>\n            <p className=\"currency-name\">\n              {fromCurrenciesName} / {toCurrenciesName}\n            </p>\n          </div>\n          <div className=\"exchange-column rate\">\n            <p className=\"exchange-rate\">{exchangeRate}</p>\n          </div>\n          <div className=\"exchange-column percent\">\n            <p className=\"exchange-percent\">\n              {before < after && (\n                <>\n                  <span className=\"plus\">+{resultPercent}%</span>\n                  <br />\n                  <span className=\"plus\">+{fxDiff}</span>\n                </>\n              )}\n              {before > after && (\n                <>\n                  <span className=\"minus\">-{resultPercent}%</span>\n                  <br />\n                  <span className=\"minus\">{fxDiff}</span>\n                </>\n              )}\n              {before === after && (\n                <>\n                  <span className=\"zero\">{resultPercent}%</span>\n                  <br />\n                  <span className=\"zero\">0</span>\n                </>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport { useEffect } from 'react';\nimport ForeignExchangeItem from './ForeignExchangeItem';\nimport './ForeignExchange.scss';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nexport default function ForeignExchange({\n  getExchange,\n  exchangeArr,\n  loading,\n  fromCurrenciesCode,\n  fromCurrenciesName,\n  toCurrenciesCode,\n  toCurrenciesName,\n  exchangeRate,\n  fxIntradayArr,\n  fxIntraday,\n}) {\n  useEffect(() => {\n    getExchange(exchangeArr);\n  }, []);\n\n  let itemList = [];\n\n  itemList = exchangeArr.map((item, i) => (\n    <ForeignExchangeItem\n      loading={loading}\n      item={item}\n      fromCurrenciesCode={fromCurrenciesCode[i]}\n      fromCurrenciesName={fromCurrenciesName[i]}\n      toCurrenciesCode={toCurrenciesCode[i]}\n      toCurrenciesName={toCurrenciesName[i]}\n      exchangeRate={exchangeRate[i]}\n      fxIntradayArr={fxIntradayArr[i]}\n      fxIntraday={fxIntraday[i]}\n      firstFromCurrenciesCode={fromCurrenciesCode[0]}\n      firstFromCurrenciesName={fromCurrenciesName[0]}\n      firstToCurrenciesCode={toCurrenciesCode[0]}\n      firstToCurrenciesName={toCurrenciesName[0]}\n      firstFxIntraday={fxIntraday[0]}\n    />\n  ));\n\n  return (\n    <>\n      <div className=\"foreign-exchange-list-wrap\">\n        {!loading && (\n          <>\n            <h2>Foriegn Exchange</h2>\n            <div className=\"exchange-item-wrap\">{itemList}</div>\n          </>\n        )}\n      </div>\n      {loading && (\n        <div className=\"exchange-item-wrap-loading\">\n          <div className=\"exchange-loading\">\n            <LoadingOutlined />\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","import React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ForeignExchange from '../../components/MainDjia/ForeignExchange';\nimport { getExchangeSagaActionCreator } from '../../redux/modules/exchange';\n\nexport default function ForeignExchangeContainer() {\n  const loading = useSelector((state) => state.exchange.loading);\n  const exchange = useSelector((state) => state.exchange);\n  const exchangeArr = [\n    ['USD', 'KRW'],\n    ['JPY', 'KRW'],\n    ['USD', 'JPY'],\n    ['EUR', 'USD'],\n    ['AUD', 'USD'],\n  ];\n  const dispatch = useDispatch();\n  const getExchange = useCallback(() => {\n    dispatch(getExchangeSagaActionCreator(exchangeArr));\n  }, [dispatch, exchangeArr]);\n\n  const fromCurrenciesCode = exchange.exchange.map(\n    (exchange, i) => exchange['1. From_Currency Code'],\n  );\n  const fromCurrenciesName = exchange.exchange.map(\n    (exchange) => exchange['2. From_Currency Name'],\n  );\n  const toCurrenciesCode = exchange.exchange.map(\n    (exchange) => exchange['3. To_Currency Code'],\n  );\n  const toCurrenciesName = exchange.exchange.map(\n    (exchange) => exchange['4. To_Currency Name'],\n  );\n  const exchangeRate = exchange.exchange.map(\n    (exchange) => exchange['5. Exchange Rate'],\n  );\n\n  let fxIntraday = exchange.exchange.map((exchange) => exchange['fxIntraday']);\n  let fxIntradayArr = [];\n  let beforefxClose = 0;\n  let afterfxClose = 0;\n\n  const fxIntradayClose = fxIntraday.forEach((v, i) => {\n    const beforefx = Object.keys(v)[1];\n    const afterfx = Object.keys(v)[0];\n    beforefxClose = Number(v[beforefx]['4. close']);\n    afterfxClose = Number(v[afterfx]['4. close']);\n\n    return fxIntradayArr.push({\n      beforefxClose,\n      afterfxClose,\n    });\n  });\n\n  useEffect(() => {\n    getExchange(exchangeArr);\n  }, []);\n\n  return (\n    <>\n      <ForeignExchange\n        getExchange={getExchange}\n        loading={loading}\n        exchangeArr={exchangeArr}\n        fromCurrenciesCode={fromCurrenciesCode}\n        fromCurrenciesName={fromCurrenciesName}\n        toCurrenciesCode={toCurrenciesCode}\n        toCurrenciesName={toCurrenciesName}\n        exchangeRate={exchangeRate}\n        fxIntradayArr={fxIntradayArr}\n        fxIntraday={fxIntraday}\n      />\n    </>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport { useSelector } from 'react-redux';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nexport default function ForeignExchangeDetail({\n  selectExchangeListResult,\n  fromCurrenciesCode,\n  fromCurrenciesName,\n  toCurrenciesCode,\n  toCurrenciesName,\n}) {\n  const exchangeLoading = useSelector((state) => state.exchange.loading);\n\n  const chartExchange = useRef();\n  const chartExchange2 = useRef();\n  const exchangeLineSeries = useRef();\n  const excahngeChartposition = useRef();\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  window.onresize = () => {\n    setWindowWidth(window.innerWidth);\n    if (chartExchange.current) {\n      if (windowWidth >= 1200) {\n        chartExchange.current.resize(windowWidth * 0.36 - 100, 260);\n      }\n      if (windowWidth < 1200) {\n        chartExchange.current.resize(windowWidth * 0.72, 260);\n      }\n    }\n  };\n\n  useEffect(() => {\n    // if (!exchangeLoading) {\n    if (windowWidth >= 1200) {\n      chartExchange.current = createChart(excahngeChartposition.current, {\n        width: windowWidth * 0.36 - 100,\n        height: 260,\n      });\n    }\n\n    if (windowWidth < 1200) {\n      chartExchange.current = createChart(excahngeChartposition.current, {\n        width: windowWidth * 0.72,\n        height: 260,\n      });\n    }\n\n    chartExchange.current.applyOptions({\n      priceScale: {\n        position: 'right',\n        borderVisible: false,\n      },\n      timeScale: {\n        rightOffset: 0,\n        fixLeftEdge: true,\n      },\n      layout: {\n        backgroundColor: '#2d303e',\n        textColor: '#eeeeee',\n      },\n      grid: {\n        vertLines: {\n          color: 'rgba(114, 122, 160, 0.5)',\n          style: 1,\n          visible: true,\n        },\n        horzLines: {\n          color: 'rgba(114, 122, 160, 0.5)',\n          style: 1,\n          visible: true,\n        },\n      },\n    });\n    exchangeLineSeries.current = chartExchange.current.addLineSeries({\n      title: 'exchange',\n      color: '#2196f3',\n    });\n    // }\n  }, []);\n\n  if (chartExchange.current) {\n    exchangeLineSeries.current.setData(selectExchangeListResult);\n    chartExchange.current.timeScale().setVisibleLogicalRange({\n      from: selectExchangeListResult.length - 60,\n      to: selectExchangeListResult.length,\n    });\n  }\n  return (\n    <>\n      <div className=\"foreign-exchange-detail-wrap\">\n        {!exchangeLoading && (\n          <h2>\n            {fromCurrenciesCode}/{toCurrenciesCode} Chart\n          </h2>\n        )}\n        <div ref={excahngeChartposition}></div>\n        {exchangeLoading && (\n          <div className=\"exchange-loading\">\n            <LoadingOutlined />\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","import React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ForeignExchangeDetail from '../../components/MainDjia/ForeignExchangeDetail';\nimport { createGetSelectedExchangeSaga } from '../../redux/modules/selectedExchange';\n\nexport default function ForeignExchangeDetailContainer() {\n  const fromCurrenciesCode = useSelector(\n    (state) => state.selectedExchange.fxIntraday.fromCurrenciesCode,\n  );\n  const fromCurrenciesName = useSelector(\n    (state) => state.selectedExchange.fxIntraday.fromCurrenciesName,\n  );\n  const fxIntraday = useSelector(\n    (state) => state.selectedExchange.fxIntraday.fxIntraday,\n  );\n  const toCurrenciesCode = useSelector(\n    (state) => state.selectedExchange.fxIntraday.toCurrenciesCode,\n  );\n  const toCurrenciesName = useSelector(\n    (state) => state.selectedExchange.fxIntraday.toCurrenciesName,\n  );\n\n  const exchangeIntraday = useSelector(\n    (state) => state.selectedExchange.fxIntraday.fxIntraday,\n  );\n\n  let time = [];\n  let open = [];\n  let high = [];\n  let low = [];\n  let value = [];\n\n  let keyTime = [];\n  if (exchangeIntraday) {\n    keyTime = Object.keys(exchangeIntraday);\n    keyTime.map((v, i) => {\n      time.push(keyTime[i]);\n      // open.push(Number(exchangeIntraday[v]['1. open']));\n      // high.push(Number(exchangeIntraday[v]['2. high']));\n      // low.push(Number(exchangeIntraday[v]['3. low']));\n      value.push(Number(exchangeIntraday[v]['4. close']));\n    });\n  }\n\n  let selectExchangeListResult = time.map((item, i) => {\n    return {\n      time: item,\n      // open: open[i],\n      // high: high[i],\n      // low: low[i],\n      value: value[i],\n    };\n  });\n\n  selectExchangeListResult.reverse();\n\n  const dispatch = useDispatch();\n  const getExchangeDaily = useCallback(() => {\n    dispatch(\n      createGetSelectedExchangeSaga(\n        fromCurrenciesCode,\n        fromCurrenciesName,\n        toCurrenciesCode,\n        toCurrenciesName,\n        fxIntraday,\n      ),\n    );\n  }, [\n    dispatch,\n    fromCurrenciesCode,\n    fromCurrenciesName,\n    toCurrenciesCode,\n    toCurrenciesName,\n    fxIntraday,\n  ]);\n  useEffect(() => {\n    getExchangeDaily();\n  }, []);\n\n  return (\n    <ForeignExchangeDetail\n      selectExchangeListResult={selectExchangeListResult}\n      fromCurrenciesCode={fromCurrenciesCode}\n      fromCurrenciesName={fromCurrenciesName}\n      toCurrenciesCode={toCurrenciesCode}\n      toCurrenciesName={toCurrenciesName}\n    />\n  );\n}\n","import React, { useEffect, useRef } from 'react';\nimport { createChart } from 'lightweight-charts';\n\nimport './MainDjia.scss';\nimport { useState } from 'react';\nimport ForeignExchangeContainer from '../../containers/MainDjia/ForeignExchangeContainer';\nimport ForeignExchangeDetailContainer from '../../containers/MainDjia/ForeignExchangeDetailContainer';\nimport { useCallback } from 'react';\n\nexport default function DjiaGraph({ djiaList, djiaDate, loading, done }) {\n  const chart = useRef();\n  const lineSeries = useRef();\n  const chartposition = useRef();\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  window.addEventListener(\n    'resize',\n    useCallback(() => {\n      setWindowWidth(window.innerWidth);\n      console.log('hi');\n      if (chart.current) {\n        if (windowWidth >= 1200) {\n          chart.current.resize(windowWidth * 0.72 - 100, 400);\n        }\n        if (windowWidth < 1200) {\n          chart.current.resize(windowWidth * 0.72, 400);\n        }\n      }\n    }, [windowWidth]),\n  );\n  useEffect(() => {\n    if (windowWidth > 1200) {\n      chart.current = createChart(chartposition.current, {\n        width: windowWidth * 0.72 - 100,\n        height: 400,\n      });\n    }\n    if (windowWidth < 1200) {\n      chart.current = createChart(chartposition.current, {\n        width: windowWidth * 0.72,\n        height: 400,\n      });\n    }\n\n    chart.current.applyOptions({\n      priceScale: {\n        position: 'right',\n        borderVisible: false,\n      },\n      timeScale: {\n        fixLeftEdge: true,\n        borderVisible: false,\n      },\n      layout: {\n        backgroundColor: '#2d303e',\n        textColor: '#eeeeee',\n      },\n      grid: {\n        vertLines: {\n          // color: 'rgba(33, 150, 243, 0.7)',\n          color: 'rgba(114, 122, 160, 0.5)',\n          style: 1,\n          visible: true,\n        },\n        horzLines: {\n          color: 'rgba(114, 122, 160, 0.5)',\n          style: 1,\n          visible: true,\n        },\n      },\n    });\n\n    lineSeries.current = chart.current.addCandlestickSeries({ title: 'DOW J' });\n  }, []);\n\n  let stockList = [];\n  if (djiaList.length !== 0) {\n    stockList = djiaDate.map((item, i) => {\n      return {\n        time: item,\n        open: djiaList[0][i],\n        high: djiaList[1][i],\n        low: djiaList[2][i],\n        close: djiaList[3][i],\n      };\n    });\n  }\n\n  if (chart.current) {\n    lineSeries.current.setData(stockList);\n    chart.current.timeScale().setVisibleLogicalRange({\n      from: stockList.length - 60,\n      to: stockList.length,\n    });\n  }\n  return (\n    <div className=\"djia\">\n      <h2>DOW J</h2>\n      <div ref={chartposition}></div>\n      {loading ? (\n        <>\n          <progress max=\"30\" value={done} className=\"djia-progress\"></progress>{' '}\n          <div className=\"progress-percent\">\n            Loading... {(done * (100 / 30)).toFixed(0)}%\n          </div>\n        </>\n      ) : (\n        <div className=\"foreign-exchange-wrap\">\n          <ForeignExchangeContainer />\n          <ForeignExchangeDetailContainer />\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport DjiaGraph from '../../components/MainDjia/djiagraph';\n\nimport '../../components/MainDjia/MainDjia.scss';\nimport DataProcessingService from '../../services/DataProcessingService';\n\nexport default function DjiagraphContainer() {\n  const djia = useSelector((state) => state.djia.djia);\n  const loading = useSelector((state) => state.djia.loading);\n  let done = useSelector((state) => state.djia.done)\n  // const sum = useEffect(() => {\n  //   sumOpenData()\n  // }, [])\n\n  const djiaStockData = djia.map((djia) => {\n    return djia.stockData;\n  });\n\n  let djiaList = [];\n  let djiaDate = [];\n\n  if (djia.length !== 0) {\n    let djiaOpenData = [];\n    let djiaHighData = [];\n    let djiaLowData = [];\n    let djiaCloseData = [];\n    djiaDate = djiaStockData[0].map((date) => date.time);\n    for (let i = 0; i < djiaStockData.length; i++) {\n      for (let j = 0; j < djiaStockData[0].length; j++) {\n        if (i === 0) {\n          djiaOpenData.push(0);\n          djiaHighData.push(0);\n          djiaLowData.push(0);\n          djiaCloseData.push(0);\n        }\n        // console.log(djiaStockData[i][j].open)\n        djiaOpenData[j] += +djiaStockData[i][j].open;\n        djiaHighData[j] += +djiaStockData[i][j].high;\n        djiaLowData[j] += +djiaStockData[i][j].low;\n        djiaCloseData[j] += +djiaStockData[i][j].close;\n      }\n    }\n    djiaOpenData = DataProcessingService.GetDJiaProcessing(djiaOpenData);\n    djiaHighData = DataProcessingService.GetDJiaProcessing(djiaHighData);\n    djiaLowData = DataProcessingService.GetDJiaProcessing(djiaLowData);\n    djiaCloseData = DataProcessingService.GetDJiaProcessing(djiaCloseData);\n    djiaList = [djiaOpenData, djiaHighData, djiaLowData, djiaCloseData];\n  }\n\n  return (\n    <div className=\"djiagraphBox\">\n      <DjiaGraph djiaList={djiaList} djiaDate={djiaDate} djia={djia} loading={loading} done={done} />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport * as V from 'victory';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSelectedStockSagaActionCreator } from '../../redux/modules/selectedStock';\nimport { getSelectedSymbolActionCreator } from '../../redux/modules/selectedSymbol';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { getfavoriteListButtonActionCreator } from '../../redux/modules/selectedSymbol';\n\nexport default function StockList({\n  stockList,\n  getsidebarStock,\n  loading,\n  search,\n  menu,\n  toggleMenu,\n}) {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getsidebarStock(search);\n  }, [getsidebarStock, search]);\n\n  const sendSymbol = (selectedStock) => {\n    dispatch(getSelectedStockSagaActionCreator(selectedStock, 'stock'));\n    dispatch(getSelectedSymbolActionCreator(selectedStock, 'stock'));\n  };\n\n  const sendToSymbol = (selectedStock, favoriteDataList) => {\n    dispatch(\n      getfavoriteListButtonActionCreator(\n        selectedStock,\n        favoriteDataList,\n        'stock',\n      ),\n    );\n  };\n\n  const favoriteData = useSelector(\n    (state) => state.selectedSymbol.selectedStockSymbol,\n  );\n\n  if (!loading) {\n    return (\n      <div className=\"sidebar stock\">\n        <ul className={menu === 'stock' ? '' : 'none'}>\n          {stockList.map(\n            (stock) => {\n              let stocks = [];\n              const keys = stock.stockData.map((date) => date.time).reverse();\n              const values = stock.stockData.map((item) => +item.open);\n              keys.forEach((item, i) => {\n                stocks.push({ date: item, price: values[i] });\n              });\n              let color = stock.change[0] === '-' ? 'yellow' : 'red';\n\n              function transSymbol(e) {\n                toggleMenu();\n                e.stopPropagation();\n                sendSymbol(stock.symbol);\n              }\n\n              // const selectedBookmark = (e) => {\n              //   if (e.target.parentNode.previousElementSibling.firstElementChild.nodeValue === stock.symbol) {\n              //     console.log(e.target.value)\n              //     setMark(!mark)\n              //   }\n              // }\n\n              const symbol = stock.symbol;\n              let favoriteDataList = false;\n              if (\n                favoriteData.filter((stock) => stock.symbol === symbol)\n                  .length !== 0\n              ) {\n                favoriteDataList = favoriteData.filter(\n                  (stock) => stock.symbol === symbol,\n                )[0].favorite;\n                // console.log(favoriteDataList)\n              }\n\n              function selectedFavorite(e) {\n                e.stopPropagation();\n                sendToSymbol(stock.symbol);\n                if (\n                  favoriteData.filter((stock) => stock.symbol === symbol)\n                    .length !== 0\n                ) {\n                  favoriteDataList = !favoriteDataList;\n                }\n              }\n\n              return (\n                <li onClick={transSymbol} className=\"clear-fix\">\n                  <div className=\"sidebar-title\">\n                    <button className=\"bookmark\" onClick={selectedFavorite}>\n                      {favoriteDataList ? (\n                        <img\n                          src=\"./images/bookmark_true.png\"\n                          alt=\"bookmark_true\"\n                          className=\"bookmark_true\"\n                        />\n                      ) : (\n                        <img\n                          src=\"./images/bookmark_false.png\"\n                          alt=\"bookmark_false\"\n                          className=\"bookmark_false\"\n                        />\n                      )}\n                    </button>\n                    <div className=\"sidebar-title-text\">\n                      <span className=\"sidebar-symbol\">{stock.symbol}</span>\n                      <br />\n                      <span className=\"sidebar-name\">{stock.name}</span>\n                    </div>\n                  </div>\n                  <div className=\"inner-sidebar-chart\">\n                    <V.VictoryLine\n                      data={stocks}\n                      x=\"date\"\n                      y=\"price\"\n                      style={{\n                        data: { stroke: color },\n                        parent: {\n                          width: 50,\n                          height: 'auto',\n                          margin: `${0} auto`,\n                        },\n                      }}\n                    />\n                  </div>\n                  <span className=\"sidebar-price\">{stock.price}</span>\n                  <span className=\"sidebar-change\">{stock.change}</span>\n                </li>\n              );\n            },\n\n            // <li><Plot\n            //   data={[\n            //     {\n            //       x: Object.keys(stock.stockData),\n            //       y: Object.values(stock.stockData).map(item => item[\"1. open\"]),\n            //       type: 'scatter',\n            //       mode: 'lines',\n            //     },\n            //   ]}\n            //   layout={{ width: 400, height: 250, showlegend: false, modebar: false, displaymodebar: false }}\n\n            // />\n            //   {stock.change}\n            //   {stock.symbol}\n            // </li>)\n          )}\n        </ul>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"sidebar stock\">\n        <ul className={menu === 'stock' ? '' : 'none'}>\n          <LoadingOutlined className=\"loading_icon\" />\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { useCallback } from 'react';\nimport StockList from '../../components/SideBar/StockList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getSideBarStockSagaActionCreator } from '../../redux/modules/sidebarstock';\n\nexport default function StockListContainer({ search, sort, menu, toggleMenu }) {\n  const loading = useSelector((state) => state.sideBarStock.loading);\n  let stockList = useSelector((state) => state.sideBarStock.sideBarStock);\n\n  if (!loading) {\n    if (sort === 'name') {\n      stockList = [...stockList].sort((a, b) =>\n        a.symbol > b.symbol ? 1 : a.symbol < b.symbol ? -1 : 0,\n      );\n    } else if (sort === 'cheap') {\n      stockList = [...stockList].sort((a, b) => {\n        return a.price - b.price;\n      });\n    } else if (sort === 'expensive') {\n      stockList = [...stockList].sort((a, b) => b.price - a.price);\n    }\n  }\n\n  const dispatch = useDispatch();\n  const getsidebarStock = useCallback(() => {\n    dispatch(getSideBarStockSagaActionCreator(search));\n  }, [dispatch, search]);\n\n  return (\n    <StockList\n      getsidebarStock={getsidebarStock}\n      loading={loading}\n      search={search}\n      stockList={stockList}\n      menu={menu}\n      toggleMenu={toggleMenu}\n    />\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as V from 'victory';\nimport { getSelectedSymbolActionCreator } from '../../redux/modules/selectedSymbol';\nimport { getSelectedStockSagaActionCreator } from '../../redux/modules/selectedStock';\nimport { getfavoriteListButtonActionCreator } from '../../redux/modules/selectedSymbol';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nexport default function CurrencyList({\n  currencyList,\n  renderCurrencyList,\n  menu,\n  loading,\n  toggleMenu,\n}) {\n  useEffect(() => {\n    renderCurrencyList();\n  }, [renderCurrencyList]);\n\n  const dispatch = useDispatch();\n\n  const sendSymbol = (selectedStock) => {\n    dispatch(getSelectedStockSagaActionCreator(selectedStock, 'currency'));\n    dispatch(getSelectedSymbolActionCreator(selectedStock, 'currency'));\n  };\n\n  const sendToSymbol = (selectedStock, favoriteDataList) => {\n    dispatch(\n      getfavoriteListButtonActionCreator(\n        selectedStock,\n        favoriteDataList,\n        'currency',\n      ),\n    );\n  };\n\n  const favoriteData = useSelector(\n    (state) => state.selectedSymbol.selectedCurrencySymbol,\n  );\n\n  if (!loading) {\n    return (\n      <div className=\"sidebar currency\">\n        <ul className={menu === 'currency' ? '' : 'none'}>\n          {currencyList.map((currency) => {\n            let currencys = [];\n\n            const keys = Object.keys(currency.currencyData).reverse();\n            const values = Object.values(currency.currencyData)\n              .map((item) => item.open)\n              .reverse();\n            keys.forEach((item, i) => {\n              currencys.push({ date: item, price: values[i] });\n            });\n            let color = currency.change < 0 ? 'yellow' : 'red';\n\n            function transSymbol(e) {\n              toggleMenu();\n              e.stopPropagation();\n              sendSymbol(currency.symbol);\n            }\n\n            const symbol = currency.symbol;\n            let favoriteDataList = false;\n            if (\n              favoriteData.filter((currency) => currency.symbol === symbol)\n                .length !== 0\n            ) {\n              favoriteDataList = favoriteData.filter(\n                (currency) => currency.symbol === symbol,\n              )[0].favorite;\n            }\n\n            function selectedFavorite(e) {\n              e.stopPropagation();\n              sendToSymbol(currency.symbol);\n            }\n            if (\n              favoriteData.filter((currency) => currency.symbol === symbol)\n                .length !== 0\n            ) {\n              favoriteDataList = favoriteData.filter(\n                (currency) => currency.symbol === symbol,\n              )[0].favorite;\n            }\n\n            function selectedFavorite(e) {\n              e.stopPropagation();\n              sendToSymbol(currency.symbol);\n              if (\n                favoriteData.filter((currency) => currency.symbol === symbol)\n                  .length !== 0\n              ) {\n                favoriteDataList = !favoriteDataList;\n              }\n            }\n\n            return (\n              <li onClick={transSymbol} className=\"clear-fix\">\n                <div className=\"sidebar-title\">\n                  <button className=\"bookmark\" onClick={selectedFavorite}>\n                    {favoriteDataList ? (\n                      <img\n                        src=\"./images/bookmark_true.png\"\n                        alt=\"bookmark_true\"\n                        className=\"bookmark_true\"\n                      />\n                    ) : (\n                      <img\n                        src=\"./images/bookmark_false.png\"\n                        alt=\"bookmark_false\"\n                        className=\"bookmark_false\"\n                      />\n                    )}\n                  </button>\n                  <div className=\"sidebar-title-text\">\n                    <span className=\"sidebar-symbol\">{currency.symbol}</span>\n                    <br />\n                    <span className=\"sidebar-name\">{currency.name}</span>\n                    <br />\n                  </div>\n                </div>\n                <div className=\"inner-sidebar-chart\">\n                  <V.VictoryLine\n                    data={currencys}\n                    x=\"date\"\n                    y=\"price\"\n                    style={{\n                      data: { stroke: color },\n                      parent: {\n                        width: 50,\n                        height: 'auto',\n                        margin: `${0} auto`,\n                      },\n                    }}\n                  />\n                </div>\n                <span className=\"sidebar-price\">{currency.price}</span>\n                <span className=\"sidebar-change\">{currency.change}%</span>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"sidebar currency\">\n        <ul className={menu === 'currency' ? '' : 'none'}>\n          <LoadingOutlined className=\"loading_icon\" />\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { useCallback } from 'react';\nimport CurrencyList from '../../components/SideBar/CurrencyList';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { getSideBarCurrencySagaActionCreator } from '../../redux/modules/sidebarCurrency';\nimport SearchService from '../../services/SearchService';\n\nexport default function CurrencyListContainer({ search, sort, menu, toggleMenu }) {\n  const dispatch = useDispatch();\n  const loading = useSelector((state) => state.sidebarCurrency.loading);\n  let currencyList = useSelector(\n    (state) => state.sidebarCurrency.sideBarCurrency,\n  );\n\n  if (currencyList.length !== 0) {\n    if (search) {\n      currencyList = SearchService.searchingCurrencyList(search, currencyList)\n    }\n    if (sort === 'name') {\n      currencyList = [...currencyList].sort((a, b) =>\n        a.name >\n          b.name\n          ? 1\n          : a.name <\n            b.name\n            ? -1\n            : 0,\n      );\n    } else if (sort === 'cheap') {\n      currencyList = [...currencyList].sort((a, b) => {\n        return a.price - b.price;\n      });\n    } else if (sort === 'expensive') {\n      currencyList = [...currencyList].sort((a, b) => b.price - a.price);\n    }\n  }\n\n  const renderCurrencyList = useCallback(() => {\n    dispatch(getSideBarCurrencySagaActionCreator());\n  }, [dispatch]);\n\n\n  return (\n    <>\n      <CurrencyList\n        currencyList={currencyList}\n        renderCurrencyList={renderCurrencyList}\n        menu={menu}\n        loading={loading}\n        toggleMenu={toggleMenu}\n      />\n    </>\n  );\n}\n","import React, { useEffect, useCallback, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as V from 'victory';\nimport { getSelectedSymbolActionCreator } from '../../redux/modules/selectedSymbol';\nimport { getSelectedStockSagaActionCreator } from '../../redux/modules/selectedStock';\nimport { getfavoriteListButtonActionCreator } from '../../redux/modules/selectedSymbol';\n\nexport default function FavoriteList({\n  favoriteStockList,\n  favoriteCurrencyList,\n  currencyList,\n  stockList,\n  menu,\n  loading,\n  currencyLoading,\n  toggleMenu,\n}) {\n  const [value, setValue] = useState('stock');\n\n  const dispatch = useDispatch();\n  const selected = useRef();\n  // return <div>A</div>;\n\n  const sendCurrencySymbol = (selectedStock) => {\n    dispatch(getSelectedStockSagaActionCreator(selectedStock, 'currency'));\n    dispatch(getSelectedSymbolActionCreator(selectedStock, 'currency'));\n  };\n\n  const sendStockSymbol = (selectedStock) => {\n    dispatch(getSelectedStockSagaActionCreator(selectedStock, 'stock'));\n    dispatch(getSelectedSymbolActionCreator(selectedStock, 'stock'));\n  };\n\n  const sendToCurrencySymbol = (selectedStock, favoriteDataList) => {\n    dispatch(\n      getfavoriteListButtonActionCreator(\n        selectedStock,\n        favoriteDataList,\n        'currency',\n      ),\n    );\n  };\n\n  const sendToStockSymbol = (selectedStock, favoriteDataList) => {\n    dispatch(\n      getfavoriteListButtonActionCreator(\n        selectedStock,\n        favoriteDataList,\n        'stock',\n      ),\n    );\n  };\n\n  // currencyList = favoriteCurrencyList.filter((favoriteCurrencyList) => {\n  //   return (\n  //     favoriteCurrencyList.symbol ===\n  //     currencyList['Meta Data']['2. Digital Currency Code']\n  //   );\n  // });\n\n  // stockList = favoriteStockList.filter((favoriteStockList) => {\n  //   return favoriteStockList.symbol === stockList.symbol;\n  // });\n\n  const selectedValue = () => {\n    setValue(selected.current.value);\n  };\n\n  const favoriteStockData = useSelector(\n    (state) => state.selectedSymbol.selectedStockSymbol,\n  );\n  const favoriteCurrencyData = useSelector(\n    (state) => state.selectedSymbol.selectedCurrencySymbol,\n  );\n\n  // console.log(currencyList)\n  // console.log(favoriteCurrencyList)\n\n  if (!currencyLoading) {\n    return (\n      <>\n        <select\n          className={`sortbox sortValuebox ${menu !== 'favorite' && 'none'}`}\n          id=\"sort-chocie\"\n          onChange={selectedValue}\n          ref={selected}\n        >\n          <option defaultValue=\"stock\">stock</option>\n          <option value=\"currency\">currency</option>\n        </select>\n        <div className=\"sidebar favorite\">\n          <ul className={menu === 'favorite' ? '' : 'none'}>\n            {/* {console.log(currencyList)}\n            {console.log(favoriteCurrencyList, 'a')} */}\n\n            {favoriteCurrencyList.map((favoriteCurrencyList) => {\n              const currency = currencyList.filter((currency) => {\n                return favoriteCurrencyList.symbol === currency.symbol;\n              })[0];\n              // console.log(currency)\n              let currencys = [];\n              const keys = Object.keys(currency.currencyData).reverse();\n              const values = Object.values(currency.currencyData)\n                .map((item) => item.open)\n                .reverse();\n              keys.forEach((item, i) => {\n                currencys.push({ date: item, price: values[i] });\n              });\n              // let color = currency.change[0] === \"-\" ? \"green\" : \"red\"\n\n              function transSymbol(e) {\n                toggleMenu();\n                e.stopPropagation();\n                sendCurrencySymbol(currency.symbol);\n              }\n\n              const Currencysymbol = currency.symbol;\n              let favoriteCurrencyDataList = false;\n              if (\n                favoriteCurrencyData.filter(\n                  (currency) => currency.symbol === Currencysymbol,\n                ).length !== 0\n              ) {\n                favoriteCurrencyDataList = favoriteCurrencyData.filter(\n                  (currency) => currency.symbol === Currencysymbol,\n                )[0].favorite;\n                // console.log(favoriteCurrencyDataList)\n              }\n\n              function selectedCurrencyFavorite(e) {\n                e.stopPropagation();\n                sendToCurrencySymbol(currency.symbol);\n                if (\n                  favoriteCurrencyData.filter(\n                    (currency) => currency.symbol === Currencysymbol,\n                  ).length !== 0\n                ) {\n                  favoriteCurrencyDataList = !favoriteCurrencyDataList;\n                }\n              }\n\n              return (\n                <>\n                  {value === 'currency' && (\n                    <li onClick={transSymbol} className=\"clear-fix\">\n                      <div className=\"sidebar-title\">\n                        <button\n                          className=\"bookmark\"\n                          onClick={selectedCurrencyFavorite}\n                        >\n                          {favoriteCurrencyDataList ? (\n                            <img\n                              src=\"./images/bookmark_true.png\"\n                              alt=\"bookmark_true\"\n                              className=\"bookmark_true\"\n                            />\n                          ) : (\n                            <img\n                              src=\"./images/bookmark_false.png\"\n                              alt=\"bookmark_false\"\n                              className=\"bookmark_false\"\n                            />\n                          )}\n                        </button>\n                        <div className=\"sidebar-title-text\">\n                          <span className=\"sidebar-symbol\">\n                            {currency.symbol}\n                          </span>\n                          <br />\n                          <span className=\"sidebar-name\">{currency.name}</span>\n                        </div>\n                      </div>\n\n                      <div className=\"inner-sidebar-chart\">\n                        <V.VictoryLine\n                          data={currencys}\n                          x=\"date\"\n                          y=\"price\"\n                          style={{\n                            data: { stroke: 'yellow' },\n                            parent: {\n                              width: 50,\n                              height: 'auto',\n                              margin: `${0} auto`,\n                            },\n                          }}\n                        />\n                      </div>\n                      <span className=\"sidebar-price\">{currency.price}</span>\n                      <span className=\"sidebar-change\">{currency.change}%</span>\n                    </li>\n                  )}\n                </>\n              );\n            })}\n            {!loading &&\n              favoriteStockList.map((symbol) => {\n                const stock = stockList.filter((stock) => {\n                  return symbol.symbol === stock.symbol;\n                })[0];\n                if (!stock) return null;\n                let stocks = [];\n\n                const keys = stock.stockData.map((date) => date.time);\n                const values = stock.stockData.map((item) => +item.open);\n                keys.forEach((item, i) => {\n                  stocks.push({ date: item, price: values[i] });\n                });\n                let color = stock.change[0] === '-' ? 'yellow' : 'red';\n                function transSymbol(e) {\n                  toggleMenu();\n                  e.stopPropagation();\n                  sendStockSymbol(stock.symbol);\n                }\n\n                const symbolStock = stock.symbol;\n                let favoriteStockDataList = false;\n                if (\n                  favoriteStockData.filter(\n                    (stock) => stock.symbol === symbolStock,\n                  ).length !== 0\n                ) {\n                  favoriteStockDataList = favoriteStockData.filter(\n                    (stock) => stock.symbol === symbolStock,\n                  )[0].favorite;\n                  // console.log(favoriteStockDataList)\n                }\n\n                function selectedStockFavorite(e) {\n                  e.stopPropagation();\n                  sendToStockSymbol(stock.symbol);\n                  if (\n                    favoriteStockData.filter(\n                      (stock) => stock.symbol === symbolStock,\n                    ).length !== 0\n                  ) {\n                    favoriteStockDataList = !favoriteStockDataList;\n                  }\n                }\n\n                return (\n                  <>\n                    {value === 'stock' && (\n                      <li onClick={transSymbol} className=\"clear-fix\">\n                        <div className=\"sidebar-title\">\n                          <button\n                            className=\"bookmark\"\n                            onClick={selectedStockFavorite}\n                          >\n                            {favoriteStockDataList ? (\n                              <img\n                                src=\"./images/bookmark_true.png\"\n                                alt=\"bookmark_true\"\n                                className=\"bookmark_true\"\n                              />\n                            ) : (\n                              <img\n                                src=\"./images/bookmark_false.png\"\n                                alt=\"bookmark_false\"\n                                className=\"bookmark_false\"\n                              />\n                            )}\n                          </button>\n                          <div className=\"sidebar-title-text\">\n                            <span className=\"sidebar-symbol\">\n                              {stock.symbol}\n                            </span>\n                            <br />\n                            <span className=\"sidebar-name\">{stock.name}</span>\n                          </div>\n                        </div>\n                        <div className=\"inner-sidebar-chart\">\n                          <V.VictoryLine\n                            data={stocks}\n                            x=\"date\"\n                            y=\"price\"\n                            style={{\n                              data: { stroke: color },\n                              parent: {\n                                width: 50,\n                                height: 'auto',\n                                margin: `${0} auto`,\n                              },\n                            }}\n                          />\n                        </div>\n                        <span className=\"sidebar-price\">{stock.price}</span>\n                        <span className=\"sidebar-change\">{stock.change}</span>\n                      </li>\n                    )}\n                  </>\n                );\n              })}\n          </ul>\n        </div>\n      </>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n","import React, { useEffect } from 'react';\nimport FavoriteList from '../../components/SideBar/favoriteList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getfavoriteListActionCreator } from '../../redux/modules/selectedSymbol';\n\nexport default function FavoriteListContainer({ menu, toggleMenu }) {\n  const selectedStockSymbol = useSelector(\n    (state) => state.selectedSymbol.selectedStockSymbol,\n  );\n  const selectedCurrencySymbol = useSelector(\n    (state) => state.selectedSymbol.selectedCurrencySymbol,\n  );\n\n  const currencyList = useSelector(\n    (state) => state.sidebarCurrency.sideBarCurrency,\n  );\n  // console.log(currencyList)\n  const currencyLoading = useSelector((state) => state.sidebarCurrency.loading);\n  const loading = useSelector((state) => state.sideBarStock.loading);\n  const stockList = useSelector((state) => state.sideBarStock.sideBarStock);\n\n\n  const dispatch = useDispatch();\n\n  if (selectedStockSymbol.length !== 0) {\n    localStorage.setItem('stockCount', JSON.stringify(selectedStockSymbol));\n  }\n\n  const getStockListElement = localStorage.getItem('stockCount');\n  let getLocalStockList = JSON.parse(getStockListElement);\n  if (getLocalStockList === null) {\n    getLocalStockList = [];\n  }\n\n  if (selectedCurrencySymbol.length !== 0) {\n    localStorage.setItem(\n      'currencyCount',\n      JSON.stringify(selectedCurrencySymbol),\n    );\n  }\n\n  const getCurrencyListElement = localStorage.getItem('currencyCount');\n  let getLocalCurrencyList = JSON.parse(getCurrencyListElement);\n  if (getLocalCurrencyList === null) {\n    getLocalCurrencyList = [];\n  }\n\n  useEffect(() => {\n    dispatch(\n      getfavoriteListActionCreator(getLocalStockList, getLocalCurrencyList),\n    );\n  }, []);\n\n  const favoriteStockList = selectedStockSymbol.filter(\n    (selectedStockSymbol) => {\n      return selectedStockSymbol.favorite === true;\n    },\n  );\n\n  const favoriteCurrencyList = selectedCurrencySymbol.filter(\n    (selectedCurrencySymbol) => {\n      return selectedCurrencySymbol.favorite === true;\n    },\n  );\n\n  // if (currencyList.length !== 0) {\n  //   currencyList = currencyList.map((currency, i) => ({\n  //     ...currency,\n  //     price: Object.values(currency['Time Series (Digital Currency Daily)'])[0][\n  //       '1a. open (USD)'\n  //     ],\n  //   }));\n  // }\n  // console.log(currencyList);\n\n  return (\n    <FavoriteList\n      favoriteStockList={favoriteStockList}\n      favoriteCurrencyList={favoriteCurrencyList}\n      currencyList={currencyList}\n      stockList={stockList}\n      menu={menu}\n      loading={loading}\n      currencyLoading={currencyLoading}\n      toggleMenu={toggleMenu}\n    />\n  );\n}","import React, { useRef, useState, useCallback } from 'react';\nimport StockListContainer from '../containers/SideBar/StockListContainer';\nimport CurrencyListContainer from '../containers/SideBar/CurrencyListContainer';\nimport Logo from '../components/SideBar/Logo';\nimport './SideBarContent.scss';\nimport FavoriteListContainer from '../containers/SideBar/favoriteListContainer';\nimport { useDispatch } from 'react-redux';\nimport { getSelectedStockSagaActionCreator } from '../redux/modules/selectedStock';\n\nexport default function SideBarContent({ mobileMenu, toggleMobileMenu }) {\n  const searchValue = useRef();\n  const searchDone = useRef();\n  const [sort, setSort] = useState('name');\n  const [stockSearch, setStockSearch] = useState('');\n  const [currencySearch, setCurrencySearch] = useState('');\n  const [menu, setMenu] = useState('stock');\n  const [display, setDisplay] = useState(false);\n\n  // img url 경로 state\n  // const [homeImgUrl, setHomeImgUrl] = useState('./images/home-white.png');\n  const [stockImgUrl, setStockImgUrl] = useState(\n    './images/chartarrow-white.png',\n  );\n  const [currencyImgUrl, setCurrencyImgUrl] = useState(\n    './images/currency-icon.png',\n  );\n  const [favoriteUrl, setFavoriteUrl] = useState(\n    './images/star-click-icon.png',\n  );\n\n  const dispatch = useDispatch();\n\n  const checkSearchDone = useCallback((menu) => {\n    clearTimeout(searchDone.current);\n    searchDone.current = setTimeout(() => {\n      if (menu === 'stock') {\n        setStockSearch(searchValue.current.value);\n      } else if (menu === 'currency') {\n        setCurrencySearch(searchValue.current.value);\n      }\n    }, 1500);\n  }, []);\n\n  const selectedValue = useCallback((e) => {\n    setSort(e.target.value);\n  }, []);\n\n  const changeMode = useCallback((e) => {\n    // setHomeImgUrl('./images/home.png');\n    setMenu(e);\n    searchValue.current.value = '';\n    setStockSearch('');\n    setCurrencySearch('');\n\n    if (e === 'stock') {\n      setStockImgUrl('./images/chartarrow-white.png');\n      setCurrencyImgUrl('./images/currency-icon.png');\n      setFavoriteUrl('./images/star-click-icon.png');\n    } else if (e === 'currency') {\n      setStockImgUrl('./images/chartarrow.png');\n      setCurrencyImgUrl('./images/currency-icon-white.png');\n      setFavoriteUrl('./images/star-click-icon.png');\n    } else if (e === 'favorite') {\n      setStockImgUrl('./images/chartarrow.png');\n      setCurrencyImgUrl('./images/currency-icon.png');\n      setFavoriteUrl('./images/star-click-icon-white.png');\n    } else {\n      setStockImgUrl('./images/chartarrow-white.png');\n    }\n  }, []);\n\n  // const goHome = () => {\n  //   setHomeImgUrl('./images/home-white.png');\n  //   setStockImgUrl('./images/chartarrow.png');\n  //   setCurrencyImgUrl('./images/currency-icon.png');\n  //   setFavoriteUrl('./images/star-click-icon.png');\n  //   dispatch(getSelectedStockSagaActionCreator('', ''));\n  // };\n\n  const toggleMenu = () => {\n    setDisplay(!display);\n  };\n\n  console.log(menu);\n  return (\n    <>\n\n      <div className={`sidebar-wrap ${mobileMenu ? 'mobile-sidebar-show' : ''}`}>\n        <nav className=\"menu-bar\">\n          <button className=\"toggle-menu\" onClick={toggleMenu}>\n            <img src=\"./images/toggle-menu.png\" alt=\"menu\" />\n          </button>\n\n          {/* <button className=\"home-button\" onClick={goHome}>\n            <img src={homeImgUrl} alt=\"home\" />\n          </button> */}\n\n          <button\n            className=\"stockBtn\"\n            onClick={() => {\n              changeMode('stock');\n            }}\n          >\n            <img src={stockImgUrl} alt=\"stock\" />\n          </button>\n\n          <button\n            className=\"currencyBtn\"\n            onClick={() => {\n              changeMode('currency');\n            }}\n          >\n            <img src={currencyImgUrl} alt=\"currency\" />\n          </button>\n\n          <button\n            className=\"favorite-button\"\n            onClick={() => {\n              changeMode('favorite');\n            }}\n          >\n            <img src={favoriteUrl} alt=\"favorite\" />\n          </button>\n\n          <button className=\"mobile-close-button\" onClick={toggleMobileMenu}>\n            <img src=\"./images/closebutton.png\" alt=\"mobile-close-button\" />\n          </button>\n        </nav>\n\n        <div className={`sidebarList ${display ? 'sidebarList-show' : ''}`}>\n          <input\n            className=\"search\"\n            type=\"text\"\n            onChange={() => {\n              checkSearchDone(menu);\n            }}\n            ref={searchValue}\n            placeholder=\"Search\"\n          />\n\n          {/* <label htmlFor=\"sort-choice\">Sort</label>   */}\n\n          <div className=\"sortbox-wrap clear-fix\">\n            <select\n              className=\"sortbox\"\n              id=\"sort-chocie\"\n              onChange={selectedValue}\n            >\n              <option defaultValue=\"name\">name</option>\n              <option value=\"expensive\">expensive</option>\n              <option value=\"cheap\">cheap</option>\n            </select>\n          </div>\n\n          <div className=\"list-values\">\n            <span>Symbol</span>\n            <span>Graph</span>\n            <span>Price</span>\n            <span>Change</span>\n          </div>\n\n          <StockListContainer\n            search={stockSearch}\n            sort={sort}\n            menu={menu}\n            toggleMenu={toggleMenu}\n          />\n          <CurrencyListContainer\n            search={currencySearch}\n            sort={sort}\n            menu={menu}\n            toggleMenu={toggleMenu}\n          />\n          <FavoriteListContainer menu={menu} toggleMenu={toggleMenu} />\n          <button className=\"close-button\" onClick={toggleMenu}>\n            x\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}","export default class GraphService {\n  static graphColor(chart, color, graph, data, windowWidth) {\n    chart.resize(windowWidth * 0.72 - 100, 200);\n    graph.current = chart.addLineSeries({\n      color: color\n    });\n    graph.current.setData(data)\n\n    chart.timeScale().setVisibleLogicalRange({\n      from: data.length - 60,\n      to: data.length,\n    });\n  }\n  static setHistogramGraph(chart, color, graph, data, windowWidth) {\n    chart.resize(windowWidth * 0.72 - 100, 200);\n    graph.current = chart.addHistogramSeries({\n      color: color,\n      base: 0\n    });\n    graph.current.setData(data)\n\n    chart.timeScale().setVisibleLogicalRange({\n      from: data.length - 60,\n      to: data.length,\n    });\n  }\n}","import React, { useRef, useState } from 'react';\nimport { useEffect } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport Modal from 'react-modal';\nimport GraphService from '../../services/GraphService';\nimport './DetailStockGraph.scss';\nimport SearchService from '../../services/SearchService';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    zIndex: 100,\n  },\n  overlay: {\n    zIndex: 100,\n  },\n};\nconst addCustomStyles = {\n  content: {\n    width: 300,\n    height: 100,\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    zIndex: 100,\n  },\n  overlay: {\n    zIndex: 100,\n  },\n};\n\nModal.setAppElement(document.getElementById('option_modal'));\n\n// loading\nexport default function DetailStockGraph({\n  getDetailStock,\n  getCompare,\n  loading,\n  symbol,\n  movingAverage,\n  rsiSignal,\n  indicators,\n  stock,\n  compare,\n  volume,\n  getMACDData,\n  getStochasticSlow,\n}) {\n  //chart ref\n  const chart = useRef();\n  const assistChart = useRef();\n  const indicatorChart = useRef();\n  const disparityChart = useRef();\n  const MACDChart = useRef();\n  const MACDOSCChart = useRef();\n  const stochasticSlowChart = useRef();\n  //chart position ref\n  const chartposition = useRef();\n  const indicatorPosition = useRef();\n  const disparityPosition = useRef();\n  const MACDPosition = useRef();\n  //graph ref\n  const compareGraph = useRef();\n  const candleSeries = useRef();\n  const smaFive = useRef();\n  const smaHundredTwenty = useRef();\n  const smaTwenty = useRef();\n  const smaSixty = useRef();\n  const rsiChart = useRef();\n  const rsiSignalChart = useRef();\n  const stochasticSlowKGraph = useRef();\n  const stochasticSlowDGraph = useRef();\n  const disparityGraph = useRef();\n  const MACDGraph = useRef();\n  const MACDSignalGraph = useRef();\n  const MACDOSCGraph = useRef();\n  const volumeChart = useRef();\n  const lowBBANDS = useRef();\n  const middleBBANDS = useRef();\n  const highBBANDS = useRef();\n\n  //data\n  const MACDData = useRef();\n  const stochasticSlowData = useRef();\n  //check\n  const [smaFiveCk, fiveCk] = useState(false);\n  const [fiveColor, setFiveColor] = useState('#0000ff');\n\n  const [smaTwentyCk, twentyCk] = useState(false);\n  const [twentyColor, setTwentyColor] = useState('#964b00');\n\n  const [smaSixtyCk, sixtyCk] = useState(false);\n  const [sixtyColor, setSixtyColor] = useState('#ff0000');\n\n  const [smaHundredTwentyCk, hundredTwentyCk] = useState(false);\n  const [hundredTwentyColor, setHundredTwentyColor] = useState('#ffc0cb');\n\n  const [BBANDSCk, setBBANDSCk] = useState(false);\n  const [BBANDSColor, setBBANDSColor] = useState('#00ff00');\n\n  const [rsiCk, setRsick] = useState(false);\n  const [rsiColor, setRsiColor] = useState('#ffff00');\n  const [rsiSignalColor, setRsiSignalColor] = useState('#ff00ff');\n\n  const [macdCk, setMacdck] = useState(false);\n  const [MACDColor, setMACDColor] = useState('#cc0c0c');\n  const [MACDSignalColor, setMACDSignalColor] = useState('#181818');\n\n  const [macdOscCk, setMacdOscCk] = useState(false);\n  const [MACDOSCColor, setMACDOSCColor] = useState('#651542');\n\n  const [disparityCk, setDisparityck] = useState(false);\n  const [disparityColor, setDisparityColor] = useState('#00ffff');\n\n  const [stochasticSlowCk, setStochasticSlowck] = useState(false);\n  const [slowDColor, setSlowDColor] = useState('#cccc00');\n  const [slowKColor, setSlowKColor] = useState('#0000cc');\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  window.onresize = () => {\n    setWindowWidth(window.innerWidth);\n    if (windowWidth >= 1200) {\n      chart.current.resize(windowWidth * 0.72 - 100, 400);\n    }\n    if (windowWidth < 1200) {\n      chart.current.resize(windowWidth * 0.72, 400);\n    }\n    if (assistChart.current) {\n      assistChart.current.resize(windowWidth * 0.72 - 100, 200);\n    }\n    if (indicatorChart.current) {\n      indicatorChart.current.resize(windowWidth * 0.72 - 100, 200);\n    }\n    if (disparityChart.current) {\n      disparityChart.current.resize(windowWidth * 0.72 - 100, 200);\n    }\n    if (MACDChart.current) {\n      MACDChart.current.resize(windowWidth * 0.72 - 100, 200);\n    }\n    if (MACDOSCChart.current) {\n      MACDOSCChart.current.resize(windowWidth * 0.72 - 100, 200);\n    }\n    if (stochasticSlowChart.current) {\n      stochasticSlowChart.current.resize(windowWidth * 0.72 - 100, 200);\n    }\n  };\n\n  const fiveMovingAverageData = movingAverage(stock, 5);\n  const twentyMovingAverageData = movingAverage(stock, 20);\n  const sixtyMovingAverageData = movingAverage(stock, 60);\n  const hundredTwentyMovingAverageData = movingAverage(stock, 120);\n  const twentyDisparity = twentyMovingAverageData\n    .map((_, i) => ({\n      time: stock[stock.length - i - 1].time,\n      value:\n        (stock[stock.length - i - 1].open /\n          twentyMovingAverageData[twentyMovingAverageData.length - i - 1]\n            .value) *\n        100,\n    }))\n    .reverse();\n  // const sixtyDisparity = sixtyMovingAverageData.map((_, i) => ({\n  //   time: stock[stock.length - i - 1].time,\n  //   value:\n  //     (stock[stock.length - i - 1].open /\n  //       sixtyMovingAverageData[sixtyMovingAverageData.length - i - 1].value) *\n  //     100,\n  // }));\n\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [addModalIsOpen, setAddModalIsOpen] = useState(false);\n\n  function openAddModal() {\n    setAddModalIsOpen(true);\n  }\n  function closeAddModal() {\n    setAddModalIsOpen(false);\n  }\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {}\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  useEffect(() => {\n    getDetailStock(symbol);\n  }, [symbol, getDetailStock]);\n\n  useEffect(() => {\n    if (windowWidth >= 1200) {\n      chart.current = createChart(chartposition.current, {\n        width: windowWidth * 0.72 - 100,\n        height: 400,\n      });\n    }\n    if (windowWidth < 1200) {\n      chart.current = createChart(chartposition.current, {\n        width: windowWidth * 0.72,\n        height: 400,\n      });\n    }\n\n    chart.current.applyOptions({\n      priceScale: {\n        position: 'right',\n        autoScale: true,\n        borderVisible: false,\n        scaleMargins: { bottom: 0.1, top: 0 },\n      },\n      timeScale: {\n        rightOffset: 0,\n        fixLeftEdge: true,\n        barSpacing: 10,\n      },\n      layout: {\n        backgroundColor: '#2F3242',\n        textColor: '#eeeeee',\n      },\n      grid: {\n        vertLines: {\n          color: 'rgba(114, 122, 160, 0.5)',\n          style: 1,\n          visible: true,\n        },\n        horzLines: {\n          color: 'rgba(114, 122, 160, 0.5)',\n          style: 1,\n          visible: true,\n        },\n      },\n    });\n    assistChart.current = createChart(chartposition.current, {\n      width: windowWidth * 0.72 - 100,\n      height: 200,\n    });\n    assistChart.current.applyOptions({\n      priceScale: {\n        position: 'right',\n        borderVisible: false,\n      },\n      timeScale: {\n        fixLeftEdge: true,\n      },\n      layout: {\n        backgroundColor: '#2F3242',\n        textColor: '#eeeeee',\n      },\n      grid: {\n        vertLines: {\n          visible: false,\n        },\n        horzLines: {\n          visible: false,\n        },\n      },\n    });\n    indicatorChart.current = createChart(indicatorPosition.current, {\n      width: 0,\n      height: 0,\n    });\n    indicatorChart.current.resize(0, 0);\n    indicatorChart.current.applyOptions({\n      priceScale: {\n        position: 'right',\n        borderVisible: false,\n      },\n      timeScale: {\n        fixLeftEdge: true,\n        borderVisible: false,\n      },\n      layout: {\n        backgroundColor: '#2F3242',\n        textColor: '#eeeeee',\n      },\n      grid: {\n        vertLines: {\n          visible: false,\n        },\n        horzLines: {\n          visible: false,\n        },\n      },\n    });\n    disparityChart.current = createChart(disparityPosition.current, {\n      width: 0,\n      height: 0,\n    });\n    disparityChart.current.resize(0, 0);\n    disparityChart.current.applyOptions({\n      priceScale: {\n        position: 'right',\n        borderVisible: false,\n      },\n      timeScale: {\n        fixLeftEdge: true,\n        borderVisible: false,\n      },\n      layout: {\n        backgroundColor: '#2F3242',\n        textColor: '#eeeeee',\n      },\n      grid: {\n        vertLines: {\n          visible: false,\n        },\n        horzLines: {\n          visible: false,\n        },\n      },\n    });\n    MACDChart.current = createChart(MACDPosition.current, {\n      width: 0,\n      height: 0,\n    });\n    MACDChart.current.resize(0, 0);\n\n    MACDChart.current.applyOptions({\n      priceScale: {\n        position: 'right',\n        borderVisible: false,\n      },\n      timeScale: {\n        fixLeftEdge: true,\n        borderVisible: false,\n      },\n      layout: {\n        backgroundColor: '#2F3242',\n        textColor: '#eeeeee',\n      },\n      grid: {\n        vertLines: {\n          visible: false,\n        },\n        horzLines: {\n          visible: false,\n        },\n      },\n    });\n    MACDOSCChart.current = createChart(indicatorPosition.current, {\n      width: 0,\n      height: 0,\n    });\n    MACDOSCChart.current.resize(0, 0);\n    MACDOSCChart.current.applyOptions({\n      priceScale: {\n        position: 'right',\n        borderVisible: false,\n      },\n      timeScale: {\n        fixLeftEdge: true,\n        borderVisible: false,\n      },\n      layout: {\n        backgroundColor: '#2F3242',\n        textColor: '#eeeeee',\n      },\n      grid: {\n        vertLines: {\n          visible: false,\n        },\n        horzLines: {\n          visible: false,\n        },\n      },\n    });\n    stochasticSlowChart.current = createChart(indicatorPosition.current, {\n      width: 0,\n      height: 0,\n    });\n    stochasticSlowChart.current.resize(0, 0);\n    stochasticSlowChart.current.applyOptions({\n      priceScale: {\n        position: 'right',\n        borderVisible: false,\n      },\n      timeScale: {\n        fixLeftEdge: true,\n        borderVisible: false,\n      },\n      layout: {\n        backgroundColor: '#2F3242',\n        textColor: '#eeeeee',\n      },\n      grid: {\n        vertLines: {\n          visible: false,\n        },\n        horzLines: {\n          visible: false,\n        },\n      },\n    });\n  }, []);\n  useEffect(() => {\n    if (candleSeries.current) {\n      chart.current.removeSeries(candleSeries.current);\n      if (lowBBANDS.current) chart.current.removeSeries(lowBBANDS.current);\n      if (middleBBANDS.current)\n        chart.current.removeSeries(middleBBANDS.current);\n      if (highBBANDS.current) chart.current.removeSeries(highBBANDS.current);\n      setBBANDSCk(false);\n      if (smaFive.current) chart.current.removeSeries(smaFive.current);\n      fiveCk(false);\n      if (smaTwenty.current) chart.current.removeSeries(smaTwenty.current);\n      twentyCk(false);\n      if (smaSixty.current) chart.current.removeSeries(smaSixty.current);\n      sixtyCk(false);\n      if (smaHundredTwenty.current)\n        chart.current.removeSeries(smaHundredTwenty.current);\n      hundredTwentyCk(false);\n      assistChart.current.removeSeries(volumeChart.current);\n    }\n    smaFive.current = null;\n    smaTwenty.current = null;\n    smaSixty.current = null;\n    lowBBANDS.current = null;\n    middleBBANDS.current = null;\n    highBBANDS.current = null;\n    smaHundredTwenty.current = null;\n    rsiChart.current = null;\n    disparityGraph.current = null;\n    MACDGraph.current = null;\n    MACDSignalGraph.current = null;\n    MACDOSCGraph.current = null;\n    stochasticSlowDGraph.current = null;\n    stochasticSlowKGraph.current = null;\n\n    indicatorChart.current.resize(0, 0);\n    setRsick(false);\n    stochasticSlowChart.current.resize(0, 0);\n    setStochasticSlowck(false);\n    MACDChart.current.resize(0, 0);\n    setMacdck(false);\n    MACDOSCChart.current.resize(0, 0);\n    setMacdOscCk(false);\n    disparityChart.current.resize(0, 0);\n    setDisparityck(false);\n  }, [symbol]);\n\n  useEffect(() => {\n    if (compareGraph.current) chart.current.removeSeries(compareGraph.current);\n    compareGraph.current = chart.current.addCandlestickSeries({\n      title: search.current,\n    });\n    compareGraph.current.setData(compare);\n  }, [compare]);\n\n  useEffect(() => {\n    candleSeries.current = chart.current.addCandlestickSeries({\n      title: symbol,\n    });\n\n    chart.current.timeScale().setVisibleLogicalRange({\n      from: stock.length - 60,\n      to: stock.length,\n    });\n\n    volumeChart.current = assistChart.current.addHistogramSeries({\n      title: 'volume',\n    });\n    assistChart.current.timeScale().setVisibleLogicalRange({\n      from: volume.length - 60,\n      to: volume.length,\n    });\n\n    MACDData.current = getMACDData(stock);\n    stochasticSlowData.current = getStochasticSlow(stock, 12, 5, 5);\n\n    if (!loading) {\n      candleSeries.current.setData(stock);\n      volumeChart.current.setData(volume);\n    }\n  }, [stock, loading]);\n  const searchValue = useRef();\n  const [searchList, setSearchList] = useState([]);\n  const search = useRef();\n\n  const checkSearchDone = async () => {\n    if (searchValue.current && searchValue.current.value.length !== 0) {\n      search.current = searchValue.current.value;\n      setSearchList(await SearchService.searchingStock(search.current));\n      console.log(searchList);\n    }\n  };\n  // stock\n  // 0: {time: \"2020-04-13\", open: 121.63, high: 121.8, low: 118.04, close: 121.1\n  return (\n    <div className=\"detail-stock\">\n      {loading ? (\n        <LoadingOutlined className=\"loading\" />\n      ) : (\n        <>\n          <h2>{symbol}</h2>\n          <div className=\"detail-stock-button\">\n            <button className=\"detail-button\" onClick={openAddModal}>\n              Add Stock\n            </button>\n            <button\n              className=\"detail-button\"\n              onClick={() => {\n                if (compareGraph.current) {\n                  chart.current.removeSeries(compareGraph.current);\n                  compareGraph.current = null;\n                }\n              }}\n            >\n              remove compare graph\n            </button>\n            <button className=\"detail-button\" onClick={openModal}>\n              Indicators\n            </button>\n          </div>\n        </>\n      )}\n\n      <Modal\n        isOpen={addModalIsOpen}\n        onAfterOpen={modalIsOpen}\n        onRequestClose={closeAddModal}\n        style={addCustomStyles}\n      >\n        <input\n          className=\"search\"\n          type=\"text\"\n          list=\"search-list\"\n          onChange={() => {\n            checkSearchDone();\n          }}\n          ref={searchValue}\n          placeholder=\"type to find Symbol\"\n        />\n\n        <datalist id=\"search-list\">\n          {searchList.length !== 0 &&\n            searchList.bestMatches.map((item) => {\n              return <option value={item['1. symbol']}></option>;\n            })}\n        </datalist>\n\n        <button\n          className=\"add-modal-btn\"\n          onClick={() => {\n            getCompare(searchValue.current.value);\n            closeAddModal();\n          }}\n        >\n          Add\n        </button>\n      </Modal>\n\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n      >\n        <form>\n          <div>\n            <h3>Moving Average</h3>\n            <ul>\n              <li>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={smaFiveCk}\n                    onChange={() => {\n                      if (smaFive.current) {\n                        fiveCk(false);\n                        chart.current.removeSeries(smaFive.current);\n                        smaFive.current = null;\n                      } else {\n                        fiveCk(true);\n                        smaFive.current = chart.current.addLineSeries({\n                          color: fiveColor,\n                        });\n                        smaFive.current.setData(fiveMovingAverageData);\n                      }\n                    }}\n                  />\n                  <h4>5 Moving Average</h4>\n                </label>\n\n                <label>\n                  <input\n                    type=\"color\"\n                    value={fiveColor}\n                    onChange={(e) => {\n                      setFiveColor(e.target.value);\n                      if (smaFive.current) {\n                        smaFive.current.applyOptions({ color: fiveColor });\n                      }\n                    }}\n                  />\n                </label>\n              </li>\n              <li>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={smaTwentyCk}\n                    onChange={() => {\n                      if (smaTwenty.current) {\n                        twentyCk(false);\n                        chart.current.removeSeries(smaTwenty.current);\n                        smaTwenty.current = null;\n                      } else {\n                        twentyCk(true);\n                        smaTwenty.current = chart.current.addLineSeries({\n                          color: twentyColor,\n                        });\n                        smaTwenty.current.setData(twentyMovingAverageData);\n                      }\n                    }}\n                  />\n                  <h4>20 Moving Average</h4>\n                </label>\n                <label>\n                  <input\n                    type=\"color\"\n                    value={twentyColor}\n                    onChange={(e) => {\n                      setTwentyColor(e.target.value);\n                      if (smaTwenty.current) {\n                        smaTwenty.current.applyOptions({ color: twentyColor });\n                      }\n                    }}\n                  />\n                </label>\n              </li>\n              <li>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={smaSixtyCk}\n                    onChange={() => {\n                      if (smaSixty.current) {\n                        sixtyCk(false);\n                        chart.current.removeSeries(smaSixty.current);\n                        smaSixty.current = null;\n                      } else {\n                        sixtyCk(true);\n                        smaSixty.current = chart.current.addLineSeries({\n                          color: sixtyColor,\n                        });\n                        smaSixty.current.setData(sixtyMovingAverageData);\n                      }\n                    }}\n                  />\n                  <h4>60 Moving Average</h4>\n                </label>\n                <label>\n                  <input\n                    type=\"color\"\n                    value={sixtyColor}\n                    onChange={(e) => {\n                      setSixtyColor(e.target.value);\n                      if (smaSixty.current) {\n                        smaSixty.current.applyOptions({ color: sixtyColor });\n                      }\n                    }}\n                  />\n                </label>\n              </li>\n              <li>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={smaHundredTwentyCk}\n                    onChange={() => {\n                      if (smaHundredTwenty.current) {\n                        hundredTwentyCk(false);\n                        chart.current.removeSeries(smaHundredTwenty.current);\n                        smaHundredTwenty.current = null;\n                      } else {\n                        hundredTwentyCk(true);\n                        smaHundredTwenty.current = chart.current.addLineSeries({\n                          color: hundredTwentyColor,\n                        });\n                        smaHundredTwenty.current.setData(\n                          hundredTwentyMovingAverageData,\n                        );\n                      }\n                    }}\n                  />\n                  <h4>120 Moving Average</h4>\n                </label>\n                <label>\n                  <input\n                    type=\"color\"\n                    value={hundredTwentyColor}\n                    onChange={(e) => {\n                      setHundredTwentyColor(e.target.value);\n                      if (smaHundredTwenty.current) {\n                        smaHundredTwenty.current.applyOptions({\n                          color: hundredTwentyColor,\n                        });\n                      }\n                    }}\n                  />\n                </label>\n              </li>\n            </ul>\n          </div>\n          <div>\n            <h3>Indicators</h3>\n            <ul>\n              <li>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={BBANDSCk}\n                    onChange={() => {\n                      if (lowBBANDS.current) {\n                        setBBANDSCk(false);\n                        chart.current.removeSeries(lowBBANDS.current);\n                        chart.current.removeSeries(middleBBANDS.current);\n                        chart.current.removeSeries(highBBANDS.current);\n                        lowBBANDS.current = null;\n                        middleBBANDS.current = null;\n                        highBBANDS.current = null;\n                      } else {\n                        setBBANDSCk(true);\n                        lowBBANDS.current = chart.current.addLineSeries({\n                          title: 'BBANDS LOW',\n                          color: BBANDSColor,\n                        });\n                        lowBBANDS.current.setData(indicators[1][0]);\n                        middleBBANDS.current = chart.current.addLineSeries({\n                          title: 'BBANDS MIDDLE',\n                          color: BBANDSColor,\n                        });\n                        middleBBANDS.current.setData(indicators[1][1]);\n                        highBBANDS.current = chart.current.addLineSeries({\n                          title: 'BBANDS HIGH',\n                          color: BBANDSColor,\n                        });\n                        highBBANDS.current.setData(indicators[1][2]);\n                      }\n                    }}\n                  />\n                  <h4>BBANDS</h4>\n                </label>\n                <label>\n                  <input\n                    type=\"color\"\n                    value={BBANDSColor}\n                    onChange={(e) => {\n                      setBBANDSColor(e.target.value);\n                      if (lowBBANDS.current) {\n                        lowBBANDS.current.applyOptions({ color: BBANDSColor });\n                        middleBBANDS.current.applyOptions({\n                          color: BBANDSColor,\n                        });\n                        highBBANDS.current.applyOptions({ color: BBANDSColor });\n                      }\n                    }}\n                  />\n                </label>\n              </li>\n              <li>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={rsiCk}\n                    onChange={() => {\n                      if (rsiChart.current) {\n                        setRsick(false);\n                        indicatorChart.current.removeSeries(rsiChart.current);\n                        indicatorChart.current.removeSeries(\n                          rsiSignalChart.current,\n                        );\n                        indicatorChart.current.resize(0, 0);\n                        rsiChart.current = null;\n                      } else {\n                        setRsick(true);\n                        GraphService.graphColor(\n                          indicatorChart.current,\n                          rsiColor,\n                          rsiChart,\n                          indicators[0],\n                          windowWidth,\n                        );\n                        GraphService.graphColor(\n                          indicatorChart.current,\n                          rsiSignalColor,\n                          rsiSignalChart,\n                          rsiSignal,\n                          windowWidth,\n                        );\n                      }\n                    }}\n                  />\n                  <h4>RSI</h4>\n                </label>\n                <label className=\"signal\">\n                  <label>\n                    <span>RSI Color</span>\n                    <input\n                      type=\"color\"\n                      onChange={(e) => {\n                        setRsiColor(e.target.value);\n                        if (rsiChart.current) {\n                          rsiChart.current.applyOptions({ color: rsiColor });\n                        }\n                      }}\n                      value={rsiColor}\n                    />\n                  </label>\n                  <label>\n                    <span>RSI Signal Color</span>\n                    <input\n                      type=\"color\"\n                      onChange={(e) => {\n                        setRsiSignalColor(e.target.value);\n                        if (rsiSignalChart.current) {\n                          rsiSignalChart.current.applyOptions({\n                            color: rsiSignalColor,\n                          });\n                        }\n                      }}\n                      value={rsiSignalColor}\n                    />\n                  </label>\n                </label>\n              </li>\n              <li>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={disparityCk}\n                    onChange={() => {\n                      if (disparityGraph.current) {\n                        setDisparityck(false);\n                        disparityChart.current.removeSeries(\n                          disparityGraph.current,\n                        );\n                        disparityChart.current.resize(0, 0);\n                        disparityGraph.current = null;\n                      } else {\n                        setDisparityck(true);\n                        GraphService.graphColor(\n                          disparityChart.current,\n                          disparityColor,\n                          disparityGraph,\n                          twentyDisparity,\n                          windowWidth,\n                        );\n                      }\n                    }}\n                  />\n                  <h4>Disparity</h4>\n                </label>\n                <label>\n                  <input\n                    type=\"color\"\n                    onChange={(e) => {\n                      setDisparityColor(e.target.value);\n                      if (disparityGraph.current) {\n                        disparityGraph.current.applyOptions({\n                          color: disparityColor,\n                        });\n                      }\n                    }}\n                    value={disparityColor}\n                  />\n                </label>\n              </li>\n              <li>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={macdCk}\n                    onChange={() => {\n                      if (MACDGraph.current) {\n                        setMacdck(false);\n                        MACDChart.current.removeSeries(MACDGraph.current);\n                        MACDChart.current.removeSeries(MACDSignalGraph.current);\n                        MACDChart.current.resize(0, 0);\n                        MACDGraph.current = null;\n                        MACDSignalGraph.current = null;\n                      } else {\n                        setMacdck(true);\n                        GraphService.graphColor(\n                          MACDChart.current,\n                          MACDColor,\n                          MACDGraph,\n                          MACDData.current[0],\n                          windowWidth,\n                        );\n                        GraphService.graphColor(\n                          MACDChart.current,\n                          MACDSignalColor,\n                          MACDSignalGraph,\n                          MACDData.current[1],\n                          windowWidth,\n                        );\n                      }\n                    }}\n                  />\n                  <h4>MACD</h4>\n                </label>\n\n                <label className=\"signal\">\n                  <label>\n                    <span>MACD Color</span>\n                    <input\n                      type=\"color\"\n                      onChange={(e) => {\n                        setMACDColor(e.target.value);\n                        if (MACDGraph.current) {\n                          MACDGraph.current.applyOptions({ color: MACDColor });\n                        }\n                      }}\n                      value={MACDColor}\n                    />\n                  </label>\n                  <label>\n                    <span>MACD Signal Color</span>\n                    <input\n                      type=\"color\"\n                      onChange={(e) => {\n                        setMACDSignalColor(e.target.value);\n                        if (MACDSignalGraph.current) {\n                          MACDSignalGraph.current.applyOptions({\n                            color: MACDSignalColor,\n                          });\n                        }\n                      }}\n                      value={MACDSignalColor}\n                    />\n                  </label>\n                </label>\n              </li>\n              <li>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={macdOscCk}\n                    onChange={() => {\n                      if (MACDOSCGraph.current) {\n                        setMacdOscCk(false);\n                        MACDOSCChart.current.removeSeries(MACDOSCGraph.current);\n                        MACDOSCChart.current.resize(0, 0);\n                        MACDOSCGraph.current = null;\n                      } else {\n                        setMacdOscCk(true);\n                        GraphService.setHistogramGraph(\n                          MACDOSCChart.current,\n                          MACDOSCColor,\n                          MACDOSCGraph,\n                          MACDData.current[2],\n                          windowWidth,\n                        );\n                      }\n                    }}\n                  />\n                  <h4>MACD Oscillator </h4>\n                </label>\n                <label>\n                  <input\n                    type=\"color\"\n                    onChange={(e) => {\n                      setMACDOSCColor(e.target.value);\n                      if (MACDOSCGraph.current) {\n                        MACDOSCGraph.current.applyOptions({\n                          color: MACDOSCColor,\n                        });\n                      }\n                    }}\n                    value={MACDOSCColor}\n                  />\n                </label>\n              </li>\n              <li>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={stochasticSlowCk}\n                    onChange={() => {\n                      if (stochasticSlowDGraph.current) {\n                        setStochasticSlowck(false);\n                        stochasticSlowChart.current.removeSeries(\n                          stochasticSlowDGraph.current,\n                        );\n                        stochasticSlowChart.current.removeSeries(\n                          stochasticSlowKGraph.current,\n                        );\n                        stochasticSlowChart.current.resize(0, 0);\n                        stochasticSlowDGraph.current = null;\n                        stochasticSlowKGraph.current = null;\n                      } else {\n                        setStochasticSlowck(true);\n                        GraphService.graphColor(\n                          stochasticSlowChart.current,\n                          slowDColor,\n                          stochasticSlowDGraph,\n                          stochasticSlowData.current[1],\n                          windowWidth,\n                        );\n                        GraphService.graphColor(\n                          stochasticSlowChart.current,\n                          slowKColor,\n                          stochasticSlowKGraph,\n                          stochasticSlowData.current[0],\n                          windowWidth,\n                        );\n                      }\n                    }}\n                  />\n                  <h4>Stochastic Slow</h4>\n                </label>\n\n                <label className=\"signal\">\n                  <label>\n                    <span>K Color</span>\n                    <input\n                      type=\"color\"\n                      onChange={(e) => {\n                        setSlowKColor(e.target.value);\n                        if (stochasticSlowKGraph.current) {\n                          stochasticSlowKGraph.current.applyOptions({\n                            color: slowKColor,\n                          });\n                        }\n                      }}\n                      value={slowKColor}\n                    />\n                  </label>\n                  <label>\n                    <span>D Color</span>\n                    <input\n                      type=\"color\"\n                      onChange={(e) => {\n                        setSlowDColor(e.target.value);\n                        if (stochasticSlowDGraph.current) {\n                          stochasticSlowDGraph.current.applyOptions({\n                            color: slowDColor,\n                          });\n                        }\n                      }}\n                      value={slowDColor}\n                    />\n                  </label>\n                </label>\n              </li>\n            </ul>\n          </div>\n        </form>\n        <button className=\"indicator-btn\" onClick={closeModal}>\n          Submit\n        </button>\n      </Modal>\n\n      <div className=\"chart\" ref={chartposition}></div>\n      <div className=\"chart\" ref={indicatorPosition}></div>\n      <div className=\"chart\" ref={disparityPosition}></div>\n      <div className=\"chart\" ref={MACDPosition}></div>\n    </div>\n  );\n\n  // return <h1>Detail Stock</h1>;\n}\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport DetailStockGraph from '../../components/Detail/DetailStockGraph';\nimport { getDetailStockSagaActionCreator } from '../../redux/modules/detailStock';\nimport { getCompareSagaActionCreator } from '../../redux/modules/compare';\n\nexport default function DetailStockGraphContainer({\n  func = 'TIME_SERIES_DAILY_ADJUSTED',\n  symbol = 'IBM',\n}) {\n  let rsiSig = [];\n  const loading = useSelector((state) => state.detailStock.loading);\n  const stock = useSelector((state) => state.detailStock.stock);\n  const indicators = useSelector((state) => state.detailStock.indicator);\n  const volume = useSelector((state) => state.detailStock.volume);\n  const compare = useSelector((state) => state.compare.stock);\n\n  const dispatch = useDispatch();\n\n  const getDetailStock = useCallback(\n    (symbol) => {\n      dispatch(getDetailStockSagaActionCreator(symbol));\n    },\n    [dispatch],\n  );\n  const getCompare = useCallback((symbol) => {\n    dispatch(getCompareSagaActionCreator(symbol))\n  }, [dispatch])\n\n  const movingAverage = (stock, duration) => {\n    const movingAverage = [];\n    for (let i = stock.length - 1; i >= 0; i--) {\n      if (i > stock.length - duration) {\n        continue;\n      }\n      let sum = 0;\n      for (let j = 0; j < duration; j++) {\n        sum += +stock[i + j].close;\n      }\n      movingAverage.push({\n        time: stock[i + duration - 1].time,\n        value: +sum / duration,\n      });\n    }\n    return movingAverage.reverse();\n  };\n\n  const getAverage = (data, duration) => {\n    const movingAverage = [];\n    for (let i = data.length - 1; i >= 0; i--) {\n      if (i > data.length - duration) {\n        continue;\n      }\n      let sum = 0;\n      for (let j = 0; j < duration; j++) {\n        sum += +data[i + j].value;\n      }\n      movingAverage.push({\n        time: data[i + duration - 1].time,\n        value: +sum / duration,\n      });\n    }\n    return movingAverage.reverse();\n  };\n\n  const rsiSignal = (rsi) => {\n    if (!rsi) return;\n    const rsiSignal = [];\n    for (let i = rsi.length - 1; i >= 0; i--) {\n      if (i > rsi.length - 6) {\n        continue;\n      }\n      let sum = 0;\n      for (let j = 0; j < 6; j++) {\n        sum += +rsi[i + j].value;\n      }\n      rsiSignal.push({ time: rsi[i + 5].time, value: +(sum / 6).toFixed(2) });\n    }\n\n    return rsiSignal.reverse();\n  };\n  if (indicators) {\n    rsiSig = rsiSignal(indicators[0])\n  }\n  const getMACDData = useCallback((stock) => {\n    const movingAverageTwentySix = movingAverage(stock, 26);\n    const movingAverageTwelve = movingAverage(stock, 12);\n    const MACDData = movingAverageTwentySix.map((item, i) => ({\n      time: item.time,\n      value: movingAverageTwelve[i].value - item.value,\n    }));\n    const MACDSignal = getAverage(MACDData, 9);\n    const MACDOscillator = MACDSignal.map((item, i) => ({\n      time: item.time,\n      value: MACDData[i].value - item.value,\n    }));\n    return [MACDData, MACDSignal, MACDOscillator];\n  }, []);\n\n  const getStochasticSlow = useCallback((stock, duration, n, m) => {\n    const data = [...stock].reverse();\n    const fastK = []\n    for (let i = 0; i < data.length - 1 - duration; i++) {\n      const low = Math.min(...data.slice(i, duration + i).map(item => { return +item.low }))\n      const high = Math.max(...data.slice(i, duration + i).map(item => { return +item.high }))\n      const fast = (data[i].close - low) / (high - low) * 100\n      fastK.push({ time: data[i].time, value: fast });\n    }\n    const slowK = getAverage(fastK.reverse(), n);\n    const slowD = getAverage(slowK, m);\n    return [slowK, slowD]\n\n  }, [])\n\n  return (\n    <DetailStockGraph\n      getDetailStock={getDetailStock}\n      getCompare={getCompare}\n      movingAverage={movingAverage}\n      rsiSignal={rsiSig}\n      getMACDData={getMACDData}\n      getStochasticSlow={getStochasticSlow}\n      indicators={indicators}\n      loading={loading}\n      stock={stock}\n      volume={volume}\n      compare={compare}\n      symbol={symbol}\n    />\n  );\n}\n","import React from 'react';\nimport Modal from 'react-modal';\nimport { useState, useRef } from 'react';\nimport { useEffect } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport './DetailStockGraph.scss';\nimport GraphService from '../../services/GraphService';\nimport { LoadingOutlined } from '@ant-design/icons'\nimport SearchService from '../../services/SearchService';\nimport { useSelector } from 'react-redux';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    zIndex: 100,\n  },\n  overlay: {\n    zIndex: 100,\n  },\n};\nconst addCustomStyles = {\n  content: {\n    width: 300,\n    height: 100,\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    zIndex: 100,\n  },\n  overlay: {\n    zIndex: 100,\n  },\n};\n\nModal.setAppElement(document.getElementById('option_modal'));\n\nexport default function DetailCurrencyGraph({\n  getCompare,\n  getDetailCurrency,\n  loading,\n  symbol,\n  currency,\n  volume,\n  movingAverage,\n  indicators,\n  rsiSignal,\n  getMACDData,\n  getStochasticSlow,\n  compare\n}) {\n\n  const currencyList = useSelector(\n    (state) => state.sidebarCurrency.sideBarCurrency,\n  );\n\n  //chart ref\n  const chart = useRef();\n  const assistChart = useRef();\n  const indicatorChart = useRef();\n  const disparityChart = useRef();\n  const MACDChart = useRef();\n  const MACDOSCChart = useRef();\n  const stochasticSlowChart = useRef();\n\n  //chart position ref\n  const chartposition = useRef();\n  const indicatorPosition = useRef();\n  const disparityPosition = useRef();\n  const MACDPosition = useRef();\n\n  //graph ref\n  const compareGraph = useRef();\n  const candleSeries = useRef();\n  const smaFive = useRef();\n  const smaHundredTwenty = useRef();\n  const smaTwenty = useRef();\n  const smaSixty = useRef();\n  const rsiChart = useRef();\n  const rsiSignalChart = useRef();\n  const stochasticSlowKGraph = useRef();\n  const stochasticSlowDGraph = useRef();\n  const disparityGraph = useRef();\n  const MACDGraph = useRef();\n  const MACDSignalGraph = useRef();\n  const MACDOSCGraph = useRef();\n  const volumeChart = useRef();\n  const lowBBANDS = useRef();\n  const middleBBANDS = useRef();\n  const highBBANDS = useRef();\n\n  //data\n  const MACDData = useRef();\n  const stochasticSlowData = useRef();\n\n  //check\n  const [smaFiveCk, fiveCk] = useState(false);\n  const [fiveColor, setFiveColor] = useState('#0000ff');\n\n  const [smaTwentyCk, twentyCk] = useState(false);\n  const [twentyColor, setTwentyColor] = useState('#964b00');\n\n  const [smaSixtyCk, sixtyCk] = useState(false);\n  const [sixtyColor, setSixtyColor] = useState('#ff0000');\n\n  const [smaHundredTwentyCk, hundredTwentyCk] = useState(false);\n  const [hundredTwentyColor, setHundredTwentyColor] = useState('#ffc0cb');\n\n  const [BBANDSCk, setBBANDSCk] = useState(false);\n  const [BBANDSColor, setBBANDSColor] = useState('#00ff00');\n\n  const [rsiCk, setRsick] = useState(false);\n  const [rsiColor, setRsiColor] = useState('#ffff00');\n  const [rsiSignalColor, setRsiSignalColor] = useState('#ff00ff');\n\n  const [macdCk, setMacdck] = useState(false);\n  const [MACDColor, setMACDColor] = useState('#cc0c0c');\n  const [MACDSignalColor, setMACDSignalColor] = useState('#181818');\n\n  const [macdOscCk, setMacdOscCk] = useState(false);\n  const [MACDOSCColor, setMACDOSCColor] = useState('#651542');\n\n  const [disparityCk, setDisparityck] = useState(false);\n  const [disparityColor, setDisparityColor] = useState('#00ffff');\n\n  const [stochasticSlowCk, setStochasticSlowck] = useState(false);\n  const [slowDColor, setSlowDColor] = useState('#cccc00');\n  const [slowKColor, setSlowKColor] = useState('#0000cc');\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  window.onresize = () => {\n    setWindowWidth(window.innerWidth);\n    if (windowWidth >= 1200) {\n      chart.current.resize(windowWidth * 0.72 - 100, 400);\n    }\n    if (windowWidth < 1200) {\n      chart.current.resize(windowWidth * 0.72, 400);\n    }\n    if (assistChart.current) {\n      assistChart.current.resize(windowWidth * 0.72 - 100, 200);\n    }\n    if (indicatorChart.current) {\n      indicatorChart.current.resize(windowWidth * 0.72 - 100, 200);\n    }\n    if (disparityChart.current) {\n      disparityChart.current.resize(windowWidth * 0.72 - 100, 200);\n    }\n    if (MACDChart.current) {\n      MACDChart.current.resize(windowWidth * 0.72 - 100, 200);\n    }\n    if (MACDOSCChart.current) {\n      MACDOSCChart.current.resize(windowWidth * 0.72 - 100, 200);\n    }\n    if (stochasticSlowChart.current) {\n      stochasticSlowChart.current.resize(windowWidth * 0.72 - 100, 200);\n    }\n  };\n\n  const fiveMovingAverageData = movingAverage(currency, 5);\n  const twentyMovingAverageData = movingAverage(currency, 20);\n  const sixtyMovingAverageData = movingAverage(currency, 60);\n  const hundredTwentyMovingAverageData = movingAverage(currency, 120);\n  const twentyDisparity = twentyMovingAverageData\n    .map((_, i) => ({\n      time: currency[currency.length - i - 1].time,\n      value:\n        (currency[currency.length - i - 1].open /\n          twentyMovingAverageData[twentyMovingAverageData.length - i - 1]\n            .value) *\n        100,\n    }))\n    .reverse();\n\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [addModalIsOpen, setAddModalIsOpen] = useState(false);\n\n  function openAddModal() {\n    setAddModalIsOpen(true);\n  }\n  function closeAddModal() {\n    setAddModalIsOpen(false);\n  }\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {}\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  useEffect(() => {\n    getDetailCurrency(symbol);\n  }, [symbol, getDetailCurrency]);\n\n  useEffect(() => {\n    if (windowWidth >= 1200) {\n      chart.current = createChart(chartposition.current, {\n        width: windowWidth * 0.72 - 100,\n        height: 400,\n      });\n    }\n    if (windowWidth < 1200) {\n      chart.current = createChart(chartposition.current, {\n        width: windowWidth * 0.72,\n        height: 400,\n      });\n    }\n    chart.current.applyOptions({\n      priceScale: {\n        position: 'right',\n        autoScale: true,\n        borderVisible: false,\n        scaleMargins: { bottom: 0.1, top: 0 },\n      },\n      timeScale: {\n        rightOffset: 0,\n        fixLeftEdge: true,\n        barSpacing: 10,\n      },\n      layout: {\n        backgroundColor: '#2F3242',\n        textColor: '#eeeeee',\n      },\n      grid: {\n        vertLines: {\n          color: 'rgba(114, 122, 160, 0.5)',\n          style: 1,\n          visible: true,\n        },\n        horzLines: {\n          color: 'rgba(114, 122, 160, 0.5)',\n          style: 1,\n          visible: true,\n        },\n      },\n    });\n    assistChart.current = createChart(chartposition.current, {\n      width: windowWidth * 0.72 - 100,\n      height: 200,\n    });\n    assistChart.current.applyOptions({\n      priceScale: {\n        position: 'right',\n        borderVisible: false,\n      },\n      timeScale: {\n        fixLeftEdge: true,\n      },\n      layout: {\n        backgroundColor: '#2F3242',\n        textColor: '#eeeeee',\n      },\n      grid: {\n        vertLines: {\n          visible: false,\n        },\n        horzLines: {\n          visible: false,\n        },\n      },\n    });\n    indicatorChart.current = createChart(indicatorPosition.current, {\n      width: 0,\n      height: 0,\n    });\n    indicatorChart.current.resize(0, 0);\n    indicatorChart.current.applyOptions({\n      priceScale: {\n        position: 'right',\n        borderVisible: false,\n      },\n      timeScale: {\n        fixLeftEdge: true,\n        borderVisible: false,\n      },\n      layout: {\n        backgroundColor: '#2F3242',\n        textColor: '#eeeeee',\n      },\n      grid: {\n        vertLines: {\n          visible: false,\n        },\n        horzLines: {\n          visible: false,\n        },\n      },\n    });\n    disparityChart.current = createChart(disparityPosition.current, {\n      width: 0,\n      height: 0,\n    });\n    disparityChart.current.resize(0, 0);\n    disparityChart.current.applyOptions({\n      priceScale: {\n        position: 'right',\n        borderVisible: false,\n      },\n      timeScale: {\n        fixLeftEdge: true,\n        borderVisible: false,\n      },\n      layout: {\n        backgroundColor: '#2F3242',\n        textColor: '#eeeeee',\n      },\n      grid: {\n        vertLines: {\n          visible: false,\n        },\n        horzLines: {\n          visible: false,\n        },\n      },\n    });\n    MACDChart.current = createChart(MACDPosition.current, {\n      width: 0,\n      height: 0,\n    });\n    MACDChart.current.resize(0, 0);\n\n    MACDChart.current.applyOptions({\n      priceScale: {\n        position: 'right',\n        borderVisible: false,\n      },\n      timeScale: {\n        fixLeftEdge: true,\n        borderVisible: false,\n      },\n      layout: {\n        backgroundColor: '#2F3242',\n        textColor: '#eeeeee',\n      },\n      grid: {\n        vertLines: {\n          visible: false,\n        },\n        horzLines: {\n          visible: false,\n        },\n      },\n    });\n    MACDOSCChart.current = createChart(indicatorPosition.current, {\n      width: 0,\n      height: 0,\n    });\n    MACDOSCChart.current.resize(0, 0);\n    MACDOSCChart.current.applyOptions({\n      priceScale: {\n        position: 'right',\n        borderVisible: false,\n      },\n      timeScale: {\n        fixLeftEdge: true,\n        borderVisible: false,\n      },\n      layout: {\n        backgroundColor: '#2F3242',\n        textColor: '#eeeeee',\n      },\n      grid: {\n        vertLines: {\n          visible: false,\n        },\n        horzLines: {\n          visible: false,\n        },\n      },\n    });\n    stochasticSlowChart.current = createChart(indicatorPosition.current, {\n      width: 0,\n      height: 0,\n    });\n    stochasticSlowChart.current.resize(0, 0);\n    stochasticSlowChart.current.applyOptions({\n      priceScale: {\n        position: 'right',\n        borderVisible: false,\n      },\n      timeScale: {\n        fixLeftEdge: true,\n        borderVisible: false,\n      },\n      layout: {\n        backgroundColor: '#2F3242',\n        textColor: '#eeeeee',\n      },\n      grid: {\n        vertLines: {\n          visible: false,\n        },\n        horzLines: {\n          visible: false,\n        },\n      },\n    });\n  }, []);\n\n  useEffect(() => {\n    if (candleSeries.current) {\n      chart.current.removeSeries(candleSeries.current);\n\n      if (lowBBANDS.current) chart.current.removeSeries(lowBBANDS.current);\n\n      if (middleBBANDS.current)\n        chart.current.removeSeries(middleBBANDS.current);\n      if (highBBANDS.current) chart.current.removeSeries(highBBANDS.current);\n      if (smaFive.current) chart.current.removeSeries(smaFive.current);\n      if (smaTwenty.current) chart.current.removeSeries(smaTwenty.current);\n      if (smaSixty.current) chart.current.removeSeries(smaSixty.current);\n      if (smaHundredTwenty.current)\n        chart.current.removeSeries(smaHundredTwenty.current);\n\n      assistChart.current.removeSeries(volumeChart.current);\n    }\n    smaFive.current = null;\n    smaTwenty.current = null;\n    smaSixty.current = null;\n    lowBBANDS.current = null;\n    middleBBANDS.current = null;\n    highBBANDS.current = null;\n    smaHundredTwenty.current = null;\n    // rsiChart.current = null;\n    // disparityGraph.current = null;\n    // MACDGraph.current = null;\n    // MACDSignalGraph.current = null;\n    // MACDOSCGraph.current = null;\n    // stochasticSlowDGraph.current = null;\n    // stochasticSlowKGraph.current = null;\n\n    setBBANDSCk(false);\n    fiveCk(false);\n    twentyCk(false);\n    sixtyCk(false);\n    hundredTwentyCk(false);\n\n    indicatorChart.current.resize(0, 0);\n    setRsick(false);\n    stochasticSlowChart.current.resize(0, 0);\n    setStochasticSlowck(false);\n    MACDChart.current.resize(0, 0);\n    setMacdck(false);\n    MACDOSCChart.current.resize(0, 0);\n    setMacdOscCk(false);\n    disparityChart.current.resize(0, 0);\n    setDisparityck(false);\n  }, [symbol]);\n\n  useEffect(() => {\n    console.log(compare)\n    if (compareGraph.current) chart.current.removeSeries(compareGraph.current);\n      compareGraph.current = chart.current.addCandlestickSeries({\n      title: search.current,\n      });\n      compareGraph.current.setData(compare);\n  }, [compare]);\n\n  useEffect(() => {\n    candleSeries.current = chart.current.addCandlestickSeries({\n      title: symbol,\n    });\n    candleSeries.current.setData(currency);\n    chart.current.timeScale().setVisibleLogicalRange({\n      from: currency.length - 60,\n      to: currency.length,\n    });\n\n    volumeChart.current = assistChart.current.addHistogramSeries({\n      title: 'volume',\n    });\n    volumeChart.current.setData(volume);\n    assistChart.current.timeScale().setVisibleLogicalRange({\n      from: volume.length - 60,\n      to: volume.length,\n    });\n\n    MACDData.current = getMACDData(currency);\n    stochasticSlowData.current = getStochasticSlow(currency, 12, 5, 5);\n\n    if (!loading) {\n      candleSeries.current.setData(currency);\n      volumeChart.current.setData(volume);\n    }\n  }, [currency, loading]);\n\n  const searchValue = useRef();\n  const [searchList, setSearchList] = useState([]);\n  const search = useRef();\n\n  const checkCurrencySearchDone = async () => {\n    if (searchValue.current && searchValue.current.value.length !== 0) {\n      search.current = searchValue.current.value;\n      setSearchList(await SearchService.searchingCurrencyList(search.current, currencyList));\n    }\n  };\n\n  return (\n    <>\n      <div className=\"detail-stock\">\n        {loading ? (\n          <LoadingOutlined className=\"loading\" />\n        ) : (\n          <>\n            <h2>{symbol}</h2>\n            <div className=\"detail-stock-button\">\n              <button \n                className=\"detail-button\"\n                onClick={openAddModal}\n              >\n                Add Currency\n              </button>\n              <button className=\"detail-button\" onClick={() => {\n                if (compareGraph.current) {\n                  chart.current.removeSeries(compareGraph.current);\n                  compareGraph.current = null;\n                }\n              }}>remove compare graph</button>\n              <button \n                className=\"detail-button\" \n                onClick={openModal}\n                >\n                  Indicators\n                  </button>\n            </div>\n          </>\n        )}\n\n        <Modal\n          isOpen={addModalIsOpen}\n          onAfterOpen={modalIsOpen}\n          onRequestClose={closeAddModal}\n          style={addCustomStyles}\n        >\n          <input\n            className=\"search\"\n            type=\"text\"\n            list=\"search-list\"\n            onChange={() => {\n              checkCurrencySearchDone();\n            }}\n            ref={searchValue}\n            placeholder=\"type to find Symbol\"\n          />\n          <datalist id=\"search-list\">\n            {searchList.length !== 0 &&\n            searchList.map((item) => {\n              return <option value={item.symbol}></option>;\n            })}\n\n          </datalist>\n\n          <button\n          className=\"add-modal-btn\"\n          onClick={() => {\n            getCompare(searchValue.current.value);\n            closeAddModal();\n          }}\n        >\n          Add\n        </button>\n        </Modal>\n\n        <Modal\n          isOpen={modalIsOpen}\n          onAfterOpen={afterOpenModal}\n          onRequestClose={closeModal}\n          style={customStyles}\n        >\n          <form>\n            <div>\n              <h3>Moving Average</h3>\n              <ul>\n                <li>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={smaFiveCk}\n                      onChange={() => {\n                        if (smaFive.current) {\n                          fiveCk(false);\n                          chart.current.removeSeries(smaFive.current);\n                          smaFive.current = null;\n                        } else {\n                          fiveCk(true);\n                          smaFive.current = chart.current.addLineSeries({\n                            color: fiveColor,\n                          });\n                          smaFive.current.setData(fiveMovingAverageData);\n                        }\n                      }}\n                    />\n                    <h4>5 Moving Average</h4>\n                  </label>\n                  <label>\n                    <input\n                      type=\"color\"\n                      value={fiveColor}\n                      onChange={(e) => {\n                        setFiveColor(e.target.value);\n                        if (smaFive.current) {\n                          smaFive.current.applyOptions({ color: fiveColor });\n                        }\n                      }}\n                    />\n                  </label>\n                </li>\n                <li>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={smaTwentyCk}\n                      onChange={() => {\n                        if (smaTwenty.current) {\n                          twentyCk(false);\n                          chart.current.removeSeries(smaTwenty.current);\n                          smaTwenty.current = null;\n                        } else {\n                          twentyCk(true);\n                          smaTwenty.current = chart.current.addLineSeries({\n                            color: twentyColor,\n                          });\n                          smaTwenty.current.setData(twentyMovingAverageData);\n                        }\n                      }}\n                    />\n                    <h4>20 Moving Average</h4>\n                  </label>\n                  <label>\n                    <input\n                      type=\"color\"\n                      value={twentyColor}\n                      onChange={(e) => {\n                        setTwentyColor(e.target.value);\n                        if (smaTwenty.current) {\n                          smaTwenty.current.applyOptions({\n                            color: twentyColor,\n                          });\n                        }\n                      }}\n                    />\n                  </label>\n                </li>\n                <li>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={smaSixtyCk}\n                      onChange={() => {\n                        if (smaSixty.current) {\n                          sixtyCk(false);\n                          chart.current.removeSeries(smaSixty.current);\n                          smaSixty.current = null;\n                        } else {\n                          sixtyCk(true);\n                          smaSixty.current = chart.current.addLineSeries({\n                            color: sixtyColor,\n                          });\n                          smaSixty.current.setData(sixtyMovingAverageData);\n                        }\n                      }}\n                    />\n                    <h4>60 Moving Average</h4>\n                  </label>\n                  <label>\n                    <input\n                      type=\"color\"\n                      value={sixtyColor}\n                      onChange={(e) => {\n                        setSixtyColor(e.target.value);\n                        if (smaSixty.current) {\n                          smaSixty.current.applyOptions({ color: sixtyColor });\n                        }\n                      }}\n                    />\n                  </label>\n                </li>\n                <li>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={smaHundredTwentyCk}\n                      onChange={() => {\n                        if (smaHundredTwenty.current) {\n                          hundredTwentyCk(false);\n                          chart.current.removeSeries(smaHundredTwenty.current);\n                          smaHundredTwenty.current = null;\n                        } else {\n                          hundredTwentyCk(true);\n                          smaHundredTwenty.current = chart.current.addLineSeries(\n                            {\n                              color: hundredTwentyColor,\n                            },\n                          );\n                          smaHundredTwenty.current.setData(\n                            hundredTwentyMovingAverageData,\n                          );\n                        }\n                      }}\n                    />\n                    <h4>120 Moving Average</h4>\n                  </label>\n                  <label>\n                    <input\n                      type=\"color\"\n                      value={hundredTwentyColor}\n                      onChange={(e) => {\n                        setHundredTwentyColor(e.target.value);\n                        if (smaHundredTwenty.current) {\n                          smaHundredTwenty.current.applyOptions({\n                            color: hundredTwentyColor,\n                          });\n                        }\n                      }}\n                    />\n                  </label>\n                </li>\n              </ul>\n            </div>\n\n            <div>\n              <h3>Indicators</h3>\n              <ul>\n                <li>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={BBANDSCk}\n                      onChange={() => {\n                        if (lowBBANDS.current) {\n                          setBBANDSCk(false);\n                          chart.current.removeSeries(lowBBANDS.current);\n                          chart.current.removeSeries(middleBBANDS.current);\n                          chart.current.removeSeries(highBBANDS.current);\n                          lowBBANDS.current = null;\n                          middleBBANDS.current = null;\n                          highBBANDS.current = null;\n                        } else {\n                          setBBANDSCk(true);\n                          lowBBANDS.current = chart.current.addLineSeries({\n                            title: 'BBANDS LOW',\n                            color: BBANDSColor,\n                          });\n                          lowBBANDS.current.setData(indicators[1][0]);\n                          middleBBANDS.current = chart.current.addLineSeries({\n                            title: 'BBANDS MIDDLE',\n                            color: BBANDSColor,\n                          });\n                          middleBBANDS.current.setData(indicators[1][1]);\n                          highBBANDS.current = chart.current.addLineSeries({\n                            title: 'BBANDS HIGH',\n                            color: BBANDSColor,\n                          });\n                          highBBANDS.current.setData(indicators[1][2]);\n                        }\n                      }}\n                    />\n                    <h4>BBANDS</h4>\n                  </label>\n                  <label>\n                    <input\n                      type=\"color\"\n                      value={BBANDSColor}\n                      onChange={(e) => {\n                        setBBANDSColor(e.target.value);\n                        if (lowBBANDS.current) {\n                          lowBBANDS.current.applyOptions({\n                            color: BBANDSColor,\n                          });\n                          middleBBANDS.current.applyOptions({\n                            color: BBANDSColor,\n                          });\n                          highBBANDS.current.applyOptions({\n                            color: BBANDSColor,\n                          });\n                        }\n                      }}\n                    />\n                  </label>\n                </li>\n                <li>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={rsiCk}\n                      onChange={() => {\n                        if (rsiChart.current) {\n                          setRsick(false);\n                          indicatorChart.current.removeSeries(rsiChart.current);\n                          indicatorChart.current.removeSeries(\n                            rsiSignalChart.current,\n                          );\n                          indicatorChart.current.resize(0, 0);\n                          rsiChart.current = null;\n                        } else {\n                          setRsick(true);\n                          GraphService.graphColor(\n                            indicatorChart.current,\n                            rsiColor,\n                            rsiChart,\n                            indicators[0],\n                            windowWidth,\n                          );\n                          GraphService.graphColor(\n                            indicatorChart.current,\n                            rsiSignalColor,\n                            rsiSignalChart,\n                            rsiSignal,\n                            windowWidth,\n                          );\n                        }\n                      }}\n                    />\n                    <h4>RSI</h4>\n                  </label>\n\n                  <label className=\"signal\">\n                    <label>\n                      <span>RSI Color</span>\n                      <input\n                        type=\"color\"\n                        onChange={(e) => {\n                          setRsiColor(e.target.value);\n                          if (rsiChart.current) {\n                            rsiChart.current.applyOptions({ color: rsiColor });\n                          }\n                        }}\n                        value={rsiColor}\n                      />\n                    </label>\n                    <label>\n                      <span>RSI Signal Color</span>\n                      <input\n                        type=\"color\"\n                        onChange={(e) => {\n                          setRsiSignalColor(e.target.value);\n                          if (rsiSignalChart.current) {\n                            rsiSignalChart.current.applyOptions({\n                              color: rsiSignalColor,\n                            });\n                          }\n                        }}\n                        value={rsiSignalColor}\n                      />\n                    </label>\n                  </label>\n                </li>\n                <li>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={disparityCk}\n                      onChange={() => {\n                        if (disparityGraph.current) {\n                          setDisparityck(false);\n                          disparityChart.current.removeSeries(\n                            disparityGraph.current,\n                          );\n                          disparityChart.current.resize(0, 0);\n                          disparityGraph.current = null;\n                        } else {\n                          setDisparityck(true);\n                          GraphService.graphColor(\n                            disparityChart.current,\n                            disparityColor,\n                            disparityGraph,\n                            twentyDisparity,\n                            windowWidth,\n                          );\n                        }\n                      }}\n                    />\n                    <h4>Disparity</h4>\n                  </label>\n                  <label>\n                    <input\n                      type=\"color\"\n                      onChange={(e) => {\n                        setDisparityColor(e.target.value);\n                        if (disparityGraph.current) {\n                          disparityGraph.current.applyOptions({\n                            color: disparityColor,\n                          });\n                        }\n                      }}\n                      value={disparityColor}\n                    />\n                  </label>\n                </li>\n                <li>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={macdCk}\n                      onChange={() => {\n                        if (MACDGraph.current) {\n                          setMacdck(false);\n                          MACDChart.current.removeSeries(MACDGraph.current);\n                          MACDChart.current.removeSeries(\n                            MACDSignalGraph.current,\n                          );\n                          MACDChart.current.resize(0, 0);\n                          MACDGraph.current = null;\n                          MACDSignalGraph.current = null;\n                        } else {\n                          setMacdck(true);\n                          GraphService.graphColor(\n                            MACDChart.current,\n                            MACDColor,\n                            MACDGraph,\n                            MACDData.current[0],\n                            windowWidth,\n                          );\n                          GraphService.graphColor(\n                            MACDChart.current,\n                            MACDSignalColor,\n                            MACDSignalGraph,\n                            MACDData.current[1],\n                            windowWidth,\n                          );\n                        }\n                      }}\n                    />\n                    <h4>MACD</h4>\n                  </label>\n\n                  <label className=\"signal\">\n                    <label>\n                      <span>MACD Color</span>\n                      <input\n                        type=\"color\"\n                        onChange={(e) => {\n                          setMACDColor(e.target.value);\n                          if (MACDGraph.current) {\n                            MACDGraph.current.applyOptions({\n                              color: MACDColor,\n                            });\n                          }\n                        }}\n                        value={MACDColor}\n                      />\n                    </label>\n                    <label>\n                      <span>MACD Signal Color</span>\n                      <input\n                        type=\"color\"\n                        onChange={(e) => {\n                          setMACDSignalColor(e.target.value);\n                          if (MACDSignalGraph.current) {\n                            MACDSignalGraph.current.applyOptions({\n                              color: MACDSignalColor,\n                            });\n                          }\n                        }}\n                        value={MACDSignalColor}\n                      />\n                    </label>\n                  </label>\n                </li>\n                <li>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={macdOscCk}\n                      onChange={() => {\n                        if (MACDOSCGraph.current) {\n                          setMacdOscCk(false);\n                          MACDOSCChart.current.removeSeries(\n                            MACDOSCGraph.current,\n                          );\n                          MACDOSCChart.current.resize(0, 0);\n                          MACDOSCGraph.current = null;\n                        } else {\n                          setMacdOscCk(true);\n                          GraphService.setHistogramGraph(\n                            MACDOSCChart.current,\n                            MACDOSCColor,\n                            MACDOSCGraph,\n                            MACDData.current[2],\n                            windowWidth,\n                          );\n                        }\n                      }}\n                    />\n                    <h4>MACD Oscillator </h4>\n                  </label>\n                  <label>\n                    <input\n                      type=\"color\"\n                      onChange={(e) => {\n                        setMACDOSCColor(e.target.value);\n                        if (MACDOSCGraph.current) {\n                          MACDOSCGraph.current.applyOptions({\n                            color: MACDOSCColor,\n                          });\n                        }\n                      }}\n                      value={MACDOSCColor}\n                    />\n                  </label>\n                </li>\n                <li>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={stochasticSlowCk}\n                      onChange={() => {\n                        if (stochasticSlowDGraph.current) {\n                          setStochasticSlowck(false);\n                          stochasticSlowChart.current.removeSeries(\n                            stochasticSlowDGraph.current,\n                          );\n                          stochasticSlowChart.current.removeSeries(\n                            stochasticSlowKGraph.current,\n                          );\n                          stochasticSlowChart.current.resize(0, 0);\n                          stochasticSlowDGraph.current = null;\n                          stochasticSlowKGraph.current = null;\n                        } else {\n                          setStochasticSlowck(true);\n                          GraphService.graphColor(\n                            stochasticSlowChart.current,\n                            slowDColor,\n                            stochasticSlowDGraph,\n                            stochasticSlowData.current[1],\n                            windowWidth,\n                          );\n                          GraphService.graphColor(\n                            stochasticSlowChart.current,\n                            slowKColor,\n                            stochasticSlowKGraph,\n                            stochasticSlowData.current[0],\n                            windowWidth,\n                          );\n                        }\n                      }}\n                    />\n                    <h4>Stochastic Slow</h4>\n                  </label>\n\n                  <label className=\"signal\">\n                    <label>\n                      <span>K Color</span>\n                      <input\n                        type=\"color\"\n                        onChange={(e) => {\n                          setSlowKColor(e.target.value);\n                          if (stochasticSlowKGraph.current) {\n                            stochasticSlowKGraph.current.applyOptions({\n                              color: slowKColor,\n                            });\n                          }\n                        }}\n                        value={slowKColor}\n                      />\n                    </label>\n                    <label>\n                      <span>D Color</span>\n                      <input\n                        type=\"color\"\n                        onChange={(e) => {\n                          setSlowDColor(e.target.value);\n                          if (stochasticSlowDGraph.current) {\n                            stochasticSlowDGraph.current.applyOptions({\n                              color: slowDColor,\n                            });\n                          }\n                        }}\n                        value={slowDColor}\n                      />\n                    </label>\n                  </label>\n                </li>\n              </ul>\n            </div>\n          </form>\n          <button className=\"indicator-btn\" onClick={closeModal}>\n            Submit\n          </button>\n        </Modal>\n\n        <div className=\"chart\" ref={chartposition}></div>\n        <div className=\"chart\" ref={indicatorPosition}></div>\n        <div className=\"chart\" ref={disparityPosition}></div>\n        <div className=\"chart\" ref={MACDPosition}></div>\n      </div>\n    </>\n  );\n}\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getDetailCurrencySagaActionCreator } from '../../redux/modules/detailCurrency';\nimport DetailCurrencyGraph from '../../components/Detail/DetailCurrencyGraph';\nimport { getCompareCurrencySagaActionCreator } from '../../redux/modules/compareCurrency';\n\nexport default function DetailCurrencyGraphContainer({\n  func = 'DIGITAL_CURRENCY_DAILY',\n  symbol = 'BTC',\n}) {\n  let rsiSig = [];\n  const loading = useSelector((state) => state.detailCurrency.loading);\n  const currency = useSelector((state) => state.detailCurrency.currency);\n  const volume = useSelector((state => state.detailCurrency.volume))\n  const indicators = useSelector((state) => state.detailCurrency.indicator);\n  const compare = useSelector((state) => state.compareCurrency.currency);\n  const dispatch = useDispatch();\n\n  const getDetailCurrency = useCallback((symbol) => {\n    dispatch(\n      getDetailCurrencySagaActionCreator(symbol),\n    );\n  }, [dispatch]);\n\n  const getCompare = useCallback((symbol) => {\n    dispatch(getCompareCurrencySagaActionCreator(symbol))\n  }, [dispatch])\n\n  const movingAverage = (currency, duration) => {\n    const movingAverage = []\n    for (let i = currency.length - 1; i >= 0; i--) {\n      if (i > currency.length - duration) {\n        continue;\n      }\n      let sum = 0;\n      for (let j = 0; j < duration; j++) {\n        sum += +currency[i + j].close;\n      }\n      movingAverage.push({ time: currency[i + duration - 1].time, value: +sum / duration })\n    }\n    return movingAverage.reverse();\n  }\n\n  const rsiSignal = (rsi) => {\n    if (!rsi) return;\n    const rsiSignal = [];\n    for (let i = rsi.length - 1; i >= 0; i--) {\n      if (i > rsi.length - 6) {\n        continue;\n      }\n      let sum = 0;\n      for (let j = 0; j < 6; j++) {\n        sum += +rsi[i + j].value;\n      }\n      rsiSignal.push({ time: rsi[i + 5].time, value: +(sum / 6).toFixed(2) });\n    }\n\n    return rsiSignal.reverse();\n  };\n  if (indicators.length !== 0) {\n    rsiSig = rsiSignal(indicators[0])\n  }\n\n  const getAverage = (data, duration) => {\n    const movingAverage = [];\n    for (let i = data.length - 1; i >= 0; i--) {\n      if (i > data.length - duration) {\n        continue;\n      }\n      let sum = 0;\n      for (let j = 0; j < duration; j++) {\n        sum += +data[i + j].value;\n      }\n      movingAverage.push({\n        time: data[i + duration - 1].time,\n        value: +sum / duration,\n      });\n    }\n    return movingAverage.reverse();\n  };\n\n  const getMACDData = useCallback((currency) => {\n    const movingAverageTwentySix = movingAverage(currency, 26);\n    const movingAverageTwelve = movingAverage(currency, 12);\n    const MACDData = movingAverageTwentySix.map((item, i) => ({\n      time: item.time,\n      value: movingAverageTwelve[i].value - item.value,\n    }));\n    const MACDSignal = getAverage(MACDData, 9);\n    const MACDOscillator = MACDSignal.map((item, i) => ({\n      time: item.time,\n      value: MACDData[i].value - item.value,\n    }));\n    return [MACDData, MACDSignal, MACDOscillator];\n  }, []);\n\n  const getStochasticSlow = useCallback((currency, duration, n, m) => {\n    const data = [...currency].reverse();\n    const fastK = []\n    for (let i = 0; i < data.length - 1 - duration; i++) {\n      const low = Math.min(...data.slice(i, duration + i).map(item => { return +item.low }))\n      const high = Math.max(...data.slice(i, duration + i).map(item => { return +item.high }))\n      const fast = (data[i].close - low) / (high - low) * 100\n      fastK.push({ time: data[i].time, value: fast });\n    }\n    const slowK = getAverage(fastK.reverse(), n);\n    const slowD = getAverage(slowK, m);\n    return [slowK, slowD]\n\n  }, [])\n\n  return (\n    <DetailCurrencyGraph\n      getDetailCurrency={getDetailCurrency}\n      movingAverage={movingAverage}\n      indicators={indicators}\n      loading={loading}\n      currency={currency}\n      volume={volume}\n      symbol={symbol}\n      rsiSignal={rsiSig}\n      getMACDData={getMACDData}\n      getStochasticSlow={getStochasticSlow}\n      getCompare={getCompare}\n      compare={compare}\n    />\n  )\n}","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getSelectedStockSagaActionCreator } from '../../redux/modules/selectedStock';\nimport { getSelectedSymbolActionCreator } from '../../redux/modules/selectedSymbol';\nimport './RemindingStock.scss';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\n\nexport default function RemindingStock({ remindingStockList, loading }) {\n  const dispatch = useDispatch();\n\n  const sendSymbol = (selectedStock) => {\n    dispatch(getSelectedStockSagaActionCreator(selectedStock, 'stock'));\n    dispatch(getSelectedSymbolActionCreator(selectedStock, 'stock'));\n  };\n\n  const [remindingStock, setRemindingStock] = useState(false);\n  const alertBtn = useRef();\n  const alertMsg = useRef();\n  const alertCount = remindingStockList.length;\n\n  const handleClickOutside = ({ target }) => {\n    if (target === alertBtn.current) {\n      setRemindingStock(!remindingStock);\n    } else if (target === alertMsg.current) {\n      setRemindingStock(remindingStock);\n    } else {\n      setRemindingStock(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('click', handleClickOutside);\n    return () => {\n      window.removeEventListener('click', handleClickOutside);\n    };\n  }, [remindingStock]);\n  // 위의 deps는 alret아이콘 다시 눌러도 팝업없어지게하려고 설정함\n\n  return (\n    <>\n      {!loading && (\n        <>\n          <button className=\"reminding-btn\" ref={alertBtn}>\n            {/* onClick={click} */}\n            {remindingStockList.length && alertCount && (\n              <span className=\"alert-color\">{alertCount}</span>\n            )}\n            alert\n          </button>\n          {remindingStock && (\n            <div className=\"stocklist-wrap\">\n              <>\n                {/* {!alertCount && <p className=\"alert-msg\">No messages yet</p>} */}\n\n                <p className=\"alert-msg\" ref={alertMsg}>\n                  {alertCount\n                    ? 'The trading volume of the stocks below is increasing.'\n                    : 'No messages yet'}\n                </p>\n\n                {remindingStockList && (\n                  <ul className=\"stocklist\">\n                    {remindingStockList.map((stock) => {\n                      function transSymbol(e) {\n                        e.stopPropagation();\n                        sendSymbol(stock.symbol);\n                        setRemindingStock(!remindingStock);\n                      }\n                      return (\n                        <>\n                          <li\n                            onClick={transSymbol}\n                            className=\"clear-fix stocklist-item\"\n                          >\n                            <div className=\"sidebar-left\">\n                              <span className=\"sidebar-symbol\">\n                                {stock.symbol}\n                              </span>\n                              <br />\n                              <span className=\"sidebar-name\">{stock.name}</span>\n                            </div>\n                          </li>\n                        </>\n                      );\n                    })}\n                  </ul>\n                )}\n              </>\n            </div>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import React, { useState } from 'react';\n\nexport default function RemindingStockBtn() {\n  // const [remindingStock, setRemindingStock] = useState(false);\n\n  // function click() {\n  //   setRemindingStock(!remindingStock);\n  // }\n  // return (\n  //   <button className=\"reminding-btn\" onClick={click}>\n  //     알림\n  //   </button>\n  // );\n  return <></>;\n}\n","import React from 'react';\nimport RemindingStock from '../../components/Detail/RemindingStock';\nimport { useSelector } from 'react-redux';\nimport RemindingStockBtn from '../../components/Detail/RemindingStockBtn';\n\nexport default function () {\n  const stockList = useSelector((state) => state.sideBarStock.sideBarStock);\n  const loading = useSelector((state) => state.sideBarStock.loading);\n  const remindingStockList = stockList.filter((stock) => {\n    const volume = stock.stockData.map((item) => item.volume).reverse();\n    if (\n      !(volume[2] < volume[1] && volume[1] < volume[0]) ||\n      stock.symbol === 'DOW'\n    ) {\n      return false;\n    }\n    return stock;\n  });\n\n  return (\n    <div className=\"reminding-stock-wrap\">\n      <RemindingStockBtn />\n      <RemindingStock\n        remindingStockList={remindingStockList}\n        loading={loading}\n      />\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport RemindingStockContainer from '../containers/Detail/RemindingStockContainer';\nimport './Header.scss';\nimport { useDispatch } from 'react-redux';\nimport { getSelectedStockSagaActionCreator } from '../redux/modules/selectedStock';\nimport { useCallback } from 'react';\n// import ToggleMenuButton from './ToggleMenuButton'\nimport SideBarContent from './SideBarContent';\n\n\n\nexport default function Header({ toggleMobileMenu }) {\n\n\n  const dispatch = useDispatch();\n\n  const goHome = () => {\n    dispatch(getSelectedStockSagaActionCreator('', ''))\n  }\n  return (\n    <header className=\"header\">\n      <h1 className=\"logo\" onClick={goHome}>\n        <img src=\"./images/logo.png\" alt=\"Stock Flow\" />\n      </h1>\n      <RemindingStockContainer />\n      <button className=\"toggle-menu\" onClick={toggleMobileMenu}>\n        <img src=\"./images/toggle-menu.png\" alt=\"home\" />\n      </button>\n    </header>\n  );\n}\n","import React, { useState } from 'react';\n\nimport DjiagraphContainer from '../containers/MainDjia/djiagraphContainer';\nimport SideBarContent from '../contents/SideBarContent';\nimport { useSelector } from 'react-redux';\nimport DetailStockGraphContainer from '../containers/Detail/DetailStockGraphContainer';\nimport DetailCurrencyGraphContainer from '../containers/Detail/DetailCurrencyGraphContainer';\nimport './Home.scss';\nimport ForeignExchangeDetailContainer from '../containers/MainDjia/ForeignExchangeDetailContainer';\nimport Header from '../contents/Header';\n\nexport default function Home() {\n  const selectedStock = useSelector((state) => state.selectedStock);\n  const selectedExchange = useSelector(\n    (state) => state.selectedExchange.fxIntraday.fxIntraday,\n  );\n  const [mobileMenu, setMobileMenu] = useState(false);\n\n\n  const toggleMobileMenu = () => {\n    setMobileMenu(!mobileMenu)\n  }\n  return (\n    <div className=\"home\">\n      <Header toggleMobileMenu={toggleMobileMenu} />\n      <SideBarContent mobileMenu={mobileMenu} toggleMobileMenu={toggleMobileMenu} />\n      {selectedStock.kind === 'stock' ? (\n        <DetailStockGraphContainer symbol={selectedStock.symbol} />\n      ) : selectedStock.kind === 'currency' ? (\n        <DetailCurrencyGraphContainer symbol={selectedStock.symbol} />\n      ) : (\n            <>\n              <DjiagraphContainer />\n            </>\n          )}\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { history } from './redux/create';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport { useDispatch } from 'react-redux';\nimport { getDJIASagaActionCreator } from './redux/modules/djia';\n\nimport 'normalize.css';\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getDJIASagaActionCreator());\n  }, [dispatch]);\n\n  return (\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n      </Switch>\n    </ConnectedRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { all } from 'redux-saga/effects';\nimport { DJIASaga } from '../modules/djia';\nimport { sideBarStockSaga } from '../modules/sidebarstock';\nimport { sideBarCurrencySaga } from '../modules/sidebarCurrency';\nimport { detailStockSaga } from '../modules/detailStock';\nimport { detailCurrencySaga } from '../modules/detailCurrency';\nimport { exchangeSaga } from '../modules/exchange';\nimport { selectedStockSaga } from '../modules/selectedStock';\n\nimport { selectedSymbolSaga } from '../modules/selectedSymbol';\nimport { compareSaga } from '../modules/compare';\nimport { favoriteSymbolSaga } from '../modules/selectedSymbol';\nimport { selectedExchangeSaga } from '../modules/selectedExchange';\nimport { favoriteButtonSaga } from '../modules/selectedSymbol';\nimport { compareCurrencySaga } from '../modules/compareCurrency';\nexport default function* () {\n  yield all([\n    DJIASaga(),\n    sideBarCurrencySaga(),\n    sideBarStockSaga(),\n    detailStockSaga(),\n    detailCurrencySaga(),\n    exchangeSaga(),\n    selectedStockSaga(),\n    compareCurrencySaga(),\n    compareSaga(),\n    selectedSymbolSaga(),\n    favoriteSymbolSaga(),\n    selectedExchangeSaga(),\n    favoriteButtonSaga(),\n  ]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport create, { sagaMiddleware } from './redux/create';\nimport { Provider } from 'react-redux';\nimport rootSaga from './redux/middlewares/saga';\n\nexport const store = create();\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}